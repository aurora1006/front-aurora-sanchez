{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/animations/fesm2022/animations.mjs", "../../../../../node_modules/@angular/forms/fesm2022/forms.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-scroller.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-autofocus.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-overlay.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-tooltip.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-times.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-chevrondown.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-search.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-dropdown.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-inputtext.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-angledown.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-angleup.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-inputnumber.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-angledoubleleft.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-angledoubleright.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-angleleft.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-icons-angleright.mjs", "../../../../../node_modules/primeng/fesm2022/primeng-paginator.mjs"],
  "sourcesContent": ["/**\n * @license Angular v17.3.5\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ViewEncapsulation, ÉµRuntimeError, Inject } from '@angular/core';\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType;\n(function (AnimationMetadataType) {\n  /**\n   * Associates a named animation state with a set of CSS styles.\n   * See [`state()`](api/animations/state)\n   */\n  AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n  /**\n   * Data for a transition from one animation state to another.\n   * See `transition()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n  /**\n   * Contains a set of animation steps.\n   * See `sequence()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n  /**\n   * Contains a set of animation steps.\n   * See `{@link animations/group group()}`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n  /**\n   * Contains an animation step.\n   * See `animate()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n  /**\n   * Contains a set of animation steps.\n   * See `keyframes()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n  /**\n   * Contains a set of CSS property-value pairs into a named style.\n   * See `style()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n  /**\n   * Associates an animation with an entry trigger that can be attached to an element.\n   * See `trigger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n  /**\n   * Contains a re-usable animation.\n   * See `animation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n  /**\n   * Contains data to use in executing child animations returned by a query.\n   * See `animateChild()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n  /**\n   * Contains animation parameters for a re-usable animation.\n   * See `useAnimation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n  /**\n   * Contains child-animation query data.\n   * See `query()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n  /**\n   * Contains data for staggering an animation sequence.\n   * See `stagger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n})(AnimationMetadataType || (AnimationMetadataType = {}));\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n  return {\n    type: AnimationMetadataType.Trigger,\n    name,\n    definitions,\n    options: {}\n  };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n  return {\n    type: AnimationMetadataType.Animate,\n    styles,\n    timings\n  };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Group,\n    steps,\n    options\n  };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Sequence,\n    steps,\n    options\n  };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n  return {\n    type: AnimationMetadataType.Style,\n    styles: tokens,\n    offset: null\n  };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n  return {\n    type: AnimationMetadataType.State,\n    name,\n    styles,\n    options\n  };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n  return {\n    type: AnimationMetadataType.Keyframes,\n    steps\n  };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```HTML\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```HTML\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n  return {\n    type: AnimationMetadataType.Transition,\n    expr: stateChangeExpr,\n    animation: steps,\n    options\n  };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Reference,\n    animation: steps,\n    options\n  };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n  return {\n    type: AnimationMetadataType.AnimateChild,\n    options\n  };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n  return {\n    type: AnimationMetadataType.AnimateRef,\n    animation,\n    options\n  };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"alert is-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n  return {\n    type: AnimationMetadataType.Query,\n    selector,\n    animation,\n    options\n  };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n  return {\n    type: AnimationMetadataType.Stagger,\n    timings,\n    animation\n  };\n}\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n  static {\n    this.Éµfac = function AnimationBuilder_Factory(t) {\n      return new (t || AnimationBuilder)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: AnimationBuilder,\n      factory: () => (() => inject(BrowserAnimationBuilder))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    }]\n  }], null, null);\n})();\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  constructor(rootRenderer, doc) {\n    super();\n    this.animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._nextAnimationId = 0;\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n      // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n      throw new ÉµRuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n    }\n  }\n  build(animation) {\n    const id = this._nextAnimationId;\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static {\n    this.Éµfac = function BrowserAnimationBuilder_Factory(t) {\n      return new (t || BrowserAnimationBuilder)(i0.ÉµÉµinject(i0.RendererFactory2), i0.ÉµÉµinject(DOCUMENT));\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: BrowserAnimationBuilder,\n      factory: BrowserAnimationBuilder.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BrowserAnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.RendererFactory2\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this.parentPlayer = null;\n    this._started = false;\n    this.totalTime = 0;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n * @see {@link ÉµAnimationGroupPlayer AnimationGroupPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n  constructor(duration = 0, delay = 0) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._onDestroyFns = [];\n    this._originalOnDoneFns = [];\n    this._originalOnStartFns = [];\n    this._started = false;\n    this._destroyed = false;\n    this._finished = false;\n    this._position = 0;\n    this.parentPlayer = null;\n    this.totalTime = duration + delay;\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  onStart(fn) {\n    this._originalOnStartFns.push(fn);\n    this._onStartFns.push(fn);\n  }\n  onDone(fn) {\n    this._originalOnDoneFns.push(fn);\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  init() {}\n  play() {\n    if (!this.hasStarted()) {\n      this._onStart();\n      this.triggerMicrotask();\n    }\n    this._started = true;\n  }\n  /** @internal */\n  triggerMicrotask() {\n    queueMicrotask(() => this._onFinish());\n  }\n  _onStart() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n  pause() {}\n  restart() {}\n  finish() {\n    this._onFinish();\n  }\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      if (!this.hasStarted()) {\n        this._onStart();\n      }\n      this.finish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this._started = false;\n    this._finished = false;\n    this._onStartFns = this._originalOnStartFns;\n    this._onDoneFns = this._originalOnDoneFns;\n  }\n  setPosition(position) {\n    this._position = this.totalTime ? position * this.totalTime : 1;\n  }\n  getPosition() {\n    return this.totalTime ? this._position / this.totalTime : 1;\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n  constructor(_players) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._finished = false;\n    this._started = false;\n    this._destroyed = false;\n    this._onDestroyFns = [];\n    this.parentPlayer = null;\n    this.totalTime = 0;\n    this.players = _players;\n    let doneCount = 0;\n    let destroyCount = 0;\n    let startCount = 0;\n    const total = this.players.length;\n    if (total == 0) {\n      queueMicrotask(() => this._onFinish());\n    } else {\n      this.players.forEach(player => {\n        player.onDone(() => {\n          if (++doneCount == total) {\n            this._onFinish();\n          }\n        });\n        player.onDestroy(() => {\n          if (++destroyCount == total) {\n            this._onDestroy();\n          }\n        });\n        player.onStart(() => {\n          if (++startCount == total) {\n            this._onStart();\n          }\n        });\n      });\n    }\n    this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  init() {\n    this.players.forEach(player => player.init());\n  }\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n  _onStart() {\n    if (!this.hasStarted()) {\n      this._started = true;\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n    }\n  }\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    if (!this.parentPlayer) {\n      this.init();\n    }\n    this._onStart();\n    this.players.forEach(player => player.play());\n  }\n  pause() {\n    this.players.forEach(player => player.pause());\n  }\n  restart() {\n    this.players.forEach(player => player.restart());\n  }\n  finish() {\n    this._onFinish();\n    this.players.forEach(player => player.finish());\n  }\n  destroy() {\n    this._onDestroy();\n  }\n  _onDestroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._onFinish();\n      this.players.forEach(player => player.destroy());\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this.players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n  setPosition(p) {\n    const timeAtPosition = p * this.totalTime;\n    this.players.forEach(player => {\n      const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n      player.setPosition(position);\n    });\n  }\n  getPosition() {\n    const longestPlayer = this.players.reduce((longestSoFar, player) => {\n      const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n      return newPlayerIsLongest ? player : longestSoFar;\n    }, null);\n    return longestPlayer != null ? longestPlayer.getPosition() : 0;\n  }\n  beforeDestroy() {\n    this.players.forEach(player => {\n      if (player.beforeDestroy) {\n        player.beforeDestroy();\n      }\n    });\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\nconst ÉµPRE_STYLE = '!';\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ÉµAnimationGroupPlayer, BrowserAnimationBuilder as ÉµBrowserAnimationBuilder, ÉµPRE_STYLE };\n", "/**\n * @license Angular v17.3.5\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ÉµisPromise, ÉµisSubscribable, ÉµRuntimeError, Self, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, NgModule, Version } from '@angular/core';\nimport { ÉµgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n  constructor(_renderer, _elementRef) {\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @nodoc\n     */\n    this.onChange = _ => {};\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @nodoc\n     */\n    this.onTouched = () => {};\n  }\n  /**\n   * Helper method that sets a property on a target element using the current Renderer\n   * implementation.\n   * @nodoc\n   */\n  setProperty(key, value) {\n    this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n  }\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Sets the \"disabled\" property on the range input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled) {\n    this.setProperty('disabled', isDisabled);\n  }\n  static {\n    this.Éµfac = function BaseControlValueAccessor_Factory(t) {\n      return new (t || BaseControlValueAccessor)(i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: BaseControlValueAccessor\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BaseControlValueAccessor, [{\n    type: Directive\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµBuiltInControlValueAccessor_BaseFactory;\n      return function BuiltInControlValueAccessor_Factory(t) {\n        return (ÉµBuiltInControlValueAccessor_BaseFactory || (ÉµBuiltInControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(BuiltInControlValueAccessor)))(t || BuiltInControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: BuiltInControlValueAccessor,\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BuiltInControlValueAccessor, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"checked\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.setProperty('checked', value);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµCheckboxControlValueAccessor_BaseFactory;\n      return function CheckboxControlValueAccessor_Factory(t) {\n        return (ÉµCheckboxControlValueAccessor_BaseFactory || (ÉµCheckboxControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(CheckboxControlValueAccessor)))(t || CheckboxControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: CheckboxControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n      hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.checked);\n          })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CheckboxControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.checked)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [CHECKBOX_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = ÉµgetDOM() ? ÉµgetDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n  constructor(renderer, elementRef, _compositionMode) {\n    super(renderer, elementRef);\n    this._compositionMode = _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    this._composing = false;\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /** @internal */\n  _handleInput(value) {\n    if (!this._compositionMode || this._compositionMode && !this._composing) {\n      this.onChange(value);\n    }\n  }\n  /** @internal */\n  _compositionStart() {\n    this._composing = true;\n  }\n  /** @internal */\n  _compositionEnd(value) {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\n  static {\n    this.Éµfac = function DefaultValueAccessor_Factory(t) {\n      return new (t || DefaultValueAccessor)(i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: DefaultValueAccessor,\n      selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n      hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n            return ctx._handleInput($event.target.value);\n          })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n            return ctx._compositionStart();\n          })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n            return ctx._compositionEnd($event.target.value);\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(DefaultValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n      // TODO: vsavkin replace the above selector with the one below it once\n      // https://github.com/angular/angular/issues/3011 is implemented\n      // selector: '[ngModel],[formControl],[formControlName]',\n      host: {\n        '(input)': '$any(this)._handleInput($event.target.value)',\n        '(blur)': 'onTouched()',\n        '(compositionstart)': '$any(this)._compositionStart()',\n        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n      },\n      providers: [DEFAULT_VALUE_ACCESSOR]\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [COMPOSITION_BUFFER_MODE]\n    }]\n  }], null);\n})();\nfunction isEmptyInputValue(value) {\n  /**\n   * Check if the object is a string or array before evaluating the length attribute.\n   * This avoids falsely rejecting objects that contain a custom length attribute.\n   * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n   */\n  return value == null || (typeof value === 'string' || Array.isArray(value)) && value.length === 0;\n}\nfunction hasValidLength(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```typescript\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```typescript\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```typescript\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```typescript\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```typescript\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```typescript\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator(control);\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` property\n      return null;\n    }\n    return control.value.length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    return hasValidLength(control.value) && control.value.length > maxLength ? {\n      'maxlength': {\n        'requiredLength': maxLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = ÉµisPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ÉµisSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new ÉµRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  constructor() {\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    this._rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    this._rawAsyncValidators = [];\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  constructor() {\n    super(...arguments);\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    this._parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    this.name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    this.valueAccessor = null;\n  }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static {\n    this.Éµfac = function NgControlStatus_Factory(t) {\n      return new (t || NgControlStatus)(i0.ÉµÉµdirectiveInject(NgControl, 2));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgControlStatus,\n      selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n      hostVars: 14,\n      hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n        }\n      },\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgControlStatus, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName],[ngModel],[formControl]',\n      host: ngControlStatusHost\n    }]\n  }], () => [{\n    type: NgControl,\n    decorators: [{\n      type: Self\n    }]\n  }], null);\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static {\n    this.Éµfac = function NgControlStatusGroup_Factory(t) {\n      return new (t || NgControlStatusGroup)(i0.ÉµÉµdirectiveInject(ControlContainer, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgControlStatusGroup,\n      selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n      hostVars: 16,\n      hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n        }\n      },\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgControlStatusGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n      host: ngGroupStatusHost\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }], null);\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException() {\n  return new ÉµRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n  return new ÉµRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new ÉµRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new ÉµRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new ÉµRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new ÉµRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new ÉµRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new ÉµRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n// clang-format on\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    /** @internal */\n    this._pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     *\n     * @internal\n     */\n    this._hasOwnPendingAsyncValidator = false;\n    /** @internal */\n    this._pendingTouched = false;\n    /** @internal */\n    this._onCollectionChange = () => {};\n    this._parent = null;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    this.pristine = true;\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    this.touched = false;\n    /** @internal */\n    this._onDisabledChange = [];\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  /**\n   * Marks the control as `touched`. A control is touched by focus and\n   * blur events that do not change the value.\n   *\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsTouched(opts = {}) {\n    this.touched = true;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   */\n  markAllAsTouched() {\n    this.markAsTouched({\n      onlySelf: true\n    });\n    this._forEachChild(control => control.markAllAsTouched());\n  }\n  /**\n   * Marks the control as `untouched`.\n   *\n   * If the control has any children, also marks all children as `untouched`\n   * and recalculates the `touched` status of all parent controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after the marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsUntouched(opts = {}) {\n    this.touched = false;\n    this._pendingTouched = false;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /**\n   * Marks the control as `dirty`. A control becomes dirty when\n   * the control's value is changed through the UI; compare `markAsTouched`.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsDirty(opts = {}) {\n    this.pristine = false;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n  /**\n   * Marks the control as `pristine`.\n   *\n   * If the control has any children, marks all children as `pristine`,\n   * and recalculates the `pristine` status of all parent\n   * controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   *\n   * @param opts Configuration options that determine how the control emits events after\n   * marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsPristine(opts = {}) {\n    this.pristine = true;\n    this._pendingDirty = false;\n    this._forEachChild(control => {\n      control.markAsPristine({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /**\n   * Marks the control as `pending`.\n   *\n   * A control is pending while the control performs async validation.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates changes and\n   * emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event with the latest status the control is marked pending.\n   * When false, no events are emitted.\n   *\n   */\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    if (opts.emitEvent !== false) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n  /**\n   * Disables the control. This means the control is exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children are also disabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control is disabled.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is disabled.\n   * When false, no events are emitted.\n   */\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine();\n      }\n      this._parent._updateTouched();\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  /**\n   * Recalculates the value and validation status of the control.\n   *\n   * By default, it also updates the value and validity of its ancestors.\n   *\n   * @param opts Configuration options determine how the control propagates changes and emits events\n   * after updates and validity checks are applied.\n   * * `onlySelf`: When true, only update this control. When false or not supplied,\n   * update all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is updated.\n   * When false, no events are emitted.\n   */\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        this._runAsyncValidator(opts.emitEvent);\n      }\n    }\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = true;\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = false;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      this._hasOwnPendingAsyncValidator = false;\n    }\n  }\n  /**\n   * Sets errors on a form control when running validations manually, rather than automatically.\n   *\n   * Calling `setErrors` also updates the validity of the parent control.\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control errors are set.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event after the errors are set.\n   *\n   * @usageNotes\n   *\n   * ### Manually set the errors for a control\n   *\n   * ```\n   * const login = new FormControl('someLogin');\n   * login.setErrors({\n   *   notUnique: true\n   * });\n   *\n   * expect(login.valid).toEqual(false);\n   * expect(login.errors).toEqual({ notUnique: true });\n   *\n   * login.setValue('someOtherLogin');\n   *\n   * expect(login.valid).toEqual(true);\n   * ```\n   */\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts = {}) {\n    this.pristine = !this._anyControlsDirty();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}) {\n    this.touched = this._anyControlsTouched();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue( /* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken('CallSetDisabledState', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ÉµRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ÉµRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    this.submitted = false;\n    this._directives = new Set();\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    this.ngSubmit = new EventEmitter();\n    this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n  /** @nodoc */\n  ngAfterViewInit() {\n    this._setUpdateStrategy();\n  }\n  /**\n   * @description\n   * The directive instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * The internal `FormGroup` instance.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it is always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Returns a map of the controls in this group.\n   */\n  get controls() {\n    return this.form.controls;\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  addControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      dir.control = container.registerControl(dir.name, dir.control);\n      setUpControl(dir.control, dir, this.callSetDisabledState);\n      dir.control.updateValueAndValidity({\n        emitEvent: false\n      });\n      this._directives.add(dir);\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `NgModel` instance from the internal list of directives\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  removeControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n      this._directives.delete(dir);\n    });\n  }\n  /**\n   * @description\n   * Adds a new `NgModelGroup` directive instance to the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  addFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      const group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({\n        emitEvent: false\n      });\n    });\n  }\n  /**\n   * @description\n   * Removes the `NgModelGroup` directive instance from the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  removeFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `NgControl` directive.\n   *\n   * @param dir The `NgControl` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    resolvedPromise$1.then(() => {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    });\n  }\n  /**\n   * @description\n   * Sets the value for this `FormGroup`.\n   *\n   * @param value The new value\n   */\n  setValue(value) {\n    this.control.setValue(value);\n  }\n  /**\n   * @description\n   * Method called when the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this.submitted = true;\n    syncPendingControls(this.form, this._directives);\n    this.ngSubmit.emit($event);\n    // Forms with `method=\"dialog\"` have some special behavior\n    // that won't reload the page and that shouldn't be prevented.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value = undefined) {\n    this.form.reset(value);\n    this.submitted = false;\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.form._updateOn = this.options.updateOn;\n    }\n  }\n  _findContainer(path) {\n    path.pop();\n    return path.length ? this.form.get(path) : this.form;\n  }\n  static {\n    this.Éµfac = function NgForm_Factory(t) {\n      return new (t || NgForm)(i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgForm,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n      hostBindings: function NgForm_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function NgForm_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        options: [i0.ÉµÉµInputFlags.None, \"ngFormOptions\", \"options\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ÉµÉµProvidersFeature([formDirectiveProvider$1]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgForm, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n      providers: [formDirectiveProvider$1],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      outputs: ['ngSubmit'],\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    options: [{\n      type: Input,\n      args: ['ngFormOptions']\n    }]\n  });\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    /** @publicApi */\n    this.defaultValue = null;\n    /** @internal */\n    this._onChange = [];\n    /** @internal */\n    this._pendingChange = false;\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n  /** @nodoc */\n  ngOnInit() {\n    this._checkParentType();\n    // Register the group with its parent group.\n    this.formDirective.addFormGroup(this);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      // Remove the group from its parent group.\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormGroup(this);\n  }\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /** @internal */\n  _checkParentType() {}\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµAbstractFormGroupDirective_BaseFactory;\n      return function AbstractFormGroupDirective_Factory(t) {\n        return (ÉµAbstractFormGroupDirective_BaseFactory || (ÉµAbstractFormGroupDirective_BaseFactory = i0.ÉµÉµgetInheritedFactory(AbstractFormGroupDirective)))(t || AbstractFormGroupDirective);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: AbstractFormGroupDirective,\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AbstractFormGroupDirective, [{\n    type: Directive\n  }], null, null);\n})();\nfunction modelParentException() {\n  return new ÉµRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new ÉµRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new ÉµRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new ÉµRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    this.name = '';\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw modelGroupParentException();\n    }\n  }\n  static {\n    this.Éµfac = function NgModelGroup_Factory(t) {\n      return new (t || NgModelGroup)(i0.ÉµÉµdirectiveInject(ControlContainer, 5), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgModelGroup,\n      selectors: [[\"\", \"ngModelGroup\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"ngModelGroup\", \"name\"]\n      },\n      exportAs: [\"ngModelGroup\"],\n      features: [i0.ÉµÉµProvidersFeature([modelGroupProvider]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgModelGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModelGroup]',\n      providers: [modelGroupProvider],\n      exportAs: 'ngModelGroup'\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['ngModelGroup']\n    }]\n  });\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n  constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n    super();\n    this._changeDetectorRef = _changeDetectorRef;\n    this.callSetDisabledState = callSetDisabledState;\n    this.control = new FormControl();\n    /** @internal */\n    this._registered = false;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    this.name = '';\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    this.update = new EventEmitter();\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    this._checkForErrors();\n    if (!this._registered || 'name' in changes) {\n      if (this._registered) {\n        this._checkName();\n        if (this.formDirective) {\n          // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n          // changed. We also can't reset the name temporarily since the logic in `removeControl`\n          // is inside a promise and it won't run immediately. We work around it by giving it an\n          // object with the same shape instead.\n          const oldName = changes['name'].previousValue;\n          this.formDirective.removeControl({\n            name: oldName,\n            path: this._getPath(oldName)\n          });\n        }\n      }\n      this._setUpControl();\n    }\n    if ('isDisabled' in changes) {\n      this._updateDisabled(changes);\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this._updateValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this.formDirective && this.formDirective.removeControl(this);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return this._getPath(this.name);\n  }\n  /**\n   * @description\n   * The top-level directive for this control if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value emitted by `ngModelChange`.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _setUpControl() {\n    this._setUpdateStrategy();\n    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n    this._registered = true;\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.control._updateOn = this.options.updateOn;\n    }\n  }\n  _isStandalone() {\n    return !this._parent || !!(this.options && this.options.standalone);\n  }\n  _setUpStandalone() {\n    setUpControl(this.control, this, this.callSetDisabledState);\n    this.control.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _checkForErrors() {\n    if (!this._isStandalone()) {\n      this._checkParentType();\n    }\n    this._checkName();\n  }\n  _checkParentType() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {\n        throw formGroupNameException();\n      } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n        throw modelParentException();\n      }\n    }\n  }\n  _checkName() {\n    if (this.options && this.options.name) this.name = this.options.name;\n    if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw missingNameException();\n    }\n  }\n  _updateValue(value) {\n    resolvedPromise.then(() => {\n      this.control.setValue(value, {\n        emitViewToModelChange: false\n      });\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _updateDisabled(changes) {\n    const disabledValue = changes['isDisabled'].currentValue;\n    // checking for 0 to avoid breaking change\n    const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n    resolvedPromise.then(() => {\n      if (isDisabled && !this.control.disabled) {\n        this.control.disable();\n      } else if (!isDisabled && this.control.disabled) {\n        this.control.enable();\n      }\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _getPath(controlName) {\n    return this._parent ? controlPath(controlName, this._parent) : [controlName];\n  }\n  static {\n    this.Éµfac = function NgModel_Factory(t) {\n      return new (t || NgModel)(i0.ÉµÉµdirectiveInject(ControlContainer, 9), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ÉµÉµdirectiveInject(ChangeDetectorRef, 8), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgModel,\n      selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n      inputs: {\n        name: \"name\",\n        isDisabled: [i0.ÉµÉµInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ÉµÉµInputFlags.None, \"ngModel\", \"model\"],\n        options: [i0.ÉµÉµInputFlags.None, \"ngModelOptions\", \"options\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngModel\"],\n      features: [i0.ÉµÉµProvidersFeature([formControlBinding$1]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgModel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModel]:not([formControlName]):not([formControl])',\n      providers: [formControlBinding$1],\n      exportAs: 'ngModel'\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ChangeDetectorRef]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    name: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    options: [{\n      type: Input,\n      args: ['ngModelOptions']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ÉµNgNoValidate {\n  static {\n    this.Éµfac = function ÉµNgNoValidate_Factory(t) {\n      return new (t || ÉµNgNoValidate)();\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: ÉµNgNoValidate,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n      hostAttrs: [\"novalidate\", \"\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ÉµNgNoValidate, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n      host: {\n        'novalidate': ''\n      }\n    }]\n  }], null, null);\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµNumberValueAccessor_BaseFactory;\n      return function NumberValueAccessor_Factory(t) {\n        return (ÉµNumberValueAccessor_BaseFactory || (ÉµNumberValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(NumberValueAccessor)))(t || NumberValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NumberValueAccessor,\n      selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n      hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NumberValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n      host: {\n        '(input)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [NUMBER_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new ÉµRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n  constructor() {\n    this._accessors = [];\n  }\n  /**\n   * @description\n   * Adds a control to the internal registry. For internal use only.\n   */\n  add(control, accessor) {\n    this._accessors.push([control, accessor]);\n  }\n  /**\n   * @description\n   * Removes a control from the internal registry. For internal use only.\n   */\n  remove(accessor) {\n    for (let i = this._accessors.length - 1; i >= 0; --i) {\n      if (this._accessors[i][1] === accessor) {\n        this._accessors.splice(i, 1);\n        return;\n      }\n    }\n  }\n  /**\n   * @description\n   * Selects a radio button. For internal use only.\n   */\n  select(accessor) {\n    this._accessors.forEach(c => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n  _isSameGroup(controlPair, accessor) {\n    if (!controlPair[0].control) return false;\n    return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n  }\n  static {\n    this.Éµfac = function RadioControlRegistry_Factory(t) {\n      return new (t || RadioControlRegistry)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: RadioControlRegistry,\n      factory: RadioControlRegistry.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RadioControlRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor(renderer, elementRef, _registry, _injector) {\n    super(renderer, elementRef);\n    this._registry = _registry;\n    this._injector = _injector;\n    this.setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @nodoc\n     */\n    this.onChange = () => {};\n    this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n      optional: true\n    }) ?? setDisabledStateDefault;\n  }\n  /** @nodoc */\n  ngOnInit() {\n    this._control = this._injector.get(NgControl);\n    this._checkName();\n    this._registry.add(this._control, this);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this._registry.remove(this);\n  }\n  /**\n   * Sets the \"checked\" property value on the radio input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this._state = value === this.value;\n    this.setProperty('checked', this._state);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n  /** @nodoc */\n  setDisabledState(isDisabled) {\n    /**\n     * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n     * including upon control creation. However, a longstanding bug caused the method to not fire\n     * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n     *\n     * This had a side effect: previously, it was possible to instantiate a reactive form control\n     * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n     * model. This resulted in a mismatch between the model and the DOM. Now, because\n     * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n     * with the \"correct\" enabled value.\n     *\n     * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n     * models the entire group of radio buttons as a single `FormControl`, there is no way to\n     * control the disabled state for individual radios, so they can no longer be configured as\n     * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n     * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n     * is `false`, and we are not in legacy mode.\n     */\n    if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n      this.setProperty('disabled', isDisabled);\n    }\n    this.setDisabledStateFired = true;\n  }\n  /**\n   * Sets the \"value\" on the radio input element and unchecks it.\n   *\n   * @param value\n   */\n  fireUncheck(value) {\n    this.writeValue(value);\n  }\n  _checkName() {\n    if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwNameError();\n    }\n    if (!this.name && this.formControlName) this.name = this.formControlName;\n  }\n  static {\n    this.Éµfac = function RadioControlValueAccessor_Factory(t) {\n      return new (t || RadioControlValueAccessor)(i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(RadioControlRegistry), i0.ÉµÉµdirectiveInject(i0.Injector));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: RadioControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n      hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n            return ctx.onChange();\n          })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        name: \"name\",\n        formControlName: \"formControlName\",\n        value: \"value\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RadioControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n      host: {\n        '(change)': 'onChange()',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RADIO_VALUE_ACCESSOR]\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: RadioControlRegistry\n  }, {\n    type: i0.Injector\n  }], {\n    name: [{\n      type: Input\n    }],\n    formControlName: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.setProperty('value', parseFloat(value));\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµRangeValueAccessor_BaseFactory;\n      return function RangeValueAccessor_Factory(t) {\n        return (ÉµRangeValueAccessor_BaseFactory || (ÉµRangeValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(RangeValueAccessor)))(t || RangeValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: RangeValueAccessor,\n      selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n      hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RangeValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.value)',\n        '(input)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RANGE_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlDirective. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static {\n    this._ngModelWarningSentOnce = false;\n  }\n  constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this.callSetDisabledState = callSetDisabledState;\n    /** @deprecated as of v6 */\n    this.update = new EventEmitter();\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    this._ngModelWarningSent = false;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (this._isControlChanged(changes)) {\n      const previousForm = changes['form'].previousValue;\n      if (previousForm) {\n        cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n      }\n      setUpControl(this.form, this, this.callSetDisabledState);\n      this.form.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n      }\n      this.form.setValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n    }\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * The `FormControl` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _isControlChanged(changes) {\n    return changes.hasOwnProperty('form');\n  }\n  static {\n    this.Éµfac = function FormControlDirective_Factory(t) {\n      return new (t || FormControlDirective)(i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ÉµÉµdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormControlDirective,\n      selectors: [[\"\", \"formControl\", \"\"]],\n      inputs: {\n        form: [i0.ÉµÉµInputFlags.None, \"formControl\", \"form\"],\n        isDisabled: [i0.ÉµÉµInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ÉµÉµInputFlags.None, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ÉµÉµProvidersFeature([formControlBinding]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormControlDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formControl]',\n      providers: [formControlBinding],\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formControl']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    this.submitted = false;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    this._onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    this.directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    this.form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    this.ngSubmit = new EventEmitter();\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n      this._oldForm = this.form;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpValidators(this.form, this);\n      // Currently the `onCollectionChange` callback is rewritten each time the\n      // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n      // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n      // Otherwise it might cause overriding a callback of some other directive instances. We should\n      // consider updating this logic later to make it similar to how `onChange` callbacks are\n      // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n      if (this.form._onCollectionChange === this._onCollectionChange) {\n        this.form._registerOnCollectionChange(() => {});\n      }\n    }\n  }\n  /**\n   * @description\n   * Returns this directive's instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * Returns the `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  addControl(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpControl(ctrl, dir, this.callSetDisabledState);\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n    this.directives.push(dir);\n    return ctrl;\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `FormControlName` instance from the internal list of directives\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  removeControl(dir) {\n    cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n    removeListItem$1(this.directives, dir);\n  }\n  /**\n   * Adds a new `FormGroupName` directive instance to the form.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  addFormGroup(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  removeFormGroup(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  addFormArray(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  removeFormArray(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  getFormArray(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `FormControlName` directive.\n   *\n   * @param dir The `FormControlName` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    const ctrl = this.form.get(dir.path);\n    ctrl.setValue(value);\n  }\n  /**\n   * @description\n   * Method called with the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this.submitted = true;\n    syncPendingControls(this.form, this.directives);\n    this.ngSubmit.emit($event);\n    // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n    // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n    // some internal apps call this method directly with the wrong arguments.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value = undefined) {\n    this.form.reset(value);\n    this.submitted = false;\n  }\n  /** @internal */\n  _updateDomValue() {\n    this.directives.forEach(dir => {\n      const oldCtrl = dir.control;\n      const newCtrl = this.form.get(dir.path);\n      if (oldCtrl !== newCtrl) {\n        // Note: the value of the `dir.control` may not be defined, for example when it's a first\n        // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n        cleanUpControl(oldCtrl || null, dir);\n        // Check whether new control at the same location inside the corresponding `FormGroup` is an\n        // instance of `FormControl` and perform control setup only if that's the case.\n        // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n        // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n        // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n        if (isFormControl(newCtrl)) {\n          setUpControl(newCtrl, dir, this.callSetDisabledState);\n          dir.control = newCtrl;\n        }\n      }\n    });\n    this.form._updateTreeValidity({\n      emitEvent: false\n    });\n  }\n  _setUpFormContainer(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    // NOTE: this operation looks unnecessary in case no new validators were added in\n    // `setUpFormContainer` call. Consider updating this code to match the logic in\n    // `_cleanUpFormContainer` function.\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _cleanUpFormContainer(dir) {\n    if (this.form) {\n      const ctrl = this.form.get(dir.path);\n      if (ctrl) {\n        const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n        if (isControlUpdated) {\n          // Run validity check only in case a control was updated (i.e. view validators were\n          // removed) as removing view validators might cause validity to change.\n          ctrl.updateValueAndValidity({\n            emitEvent: false\n          });\n        }\n      }\n    }\n  }\n  _updateRegistrations() {\n    this.form._registerOnCollectionChange(this._onCollectionChange);\n    if (this._oldForm) {\n      this._oldForm._registerOnCollectionChange(() => {});\n    }\n  }\n  _updateValidators() {\n    setUpValidators(this.form, this);\n    if (this._oldForm) {\n      cleanUpValidators(this._oldForm, this);\n    }\n  }\n  _checkFormPresent() {\n    if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw missingFormException();\n    }\n  }\n  static {\n    this.Éµfac = function FormGroupDirective_Factory(t) {\n      return new (t || FormGroupDirective)(i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormGroupDirective,\n      selectors: [[\"\", \"formGroup\", \"\"]],\n      hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        form: [i0.ÉµÉµInputFlags.None, \"formGroup\", \"form\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ÉµÉµProvidersFeature([formDirectiveProvider]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroup]',\n      providers: [formDirectiveProvider],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formGroup']\n    }],\n    ngSubmit: [{\n      type: Output\n    }]\n  });\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    this.name = null;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw groupParentException();\n    }\n  }\n  static {\n    this.Éµfac = function FormGroupName_Factory(t) {\n      return new (t || FormGroupName)(i0.ÉµÉµdirectiveInject(ControlContainer, 13), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormGroupName,\n      selectors: [[\"\", \"formGroupName\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"formGroupName\", \"name\"]\n      },\n      features: [i0.ÉµÉµProvidersFeature([formGroupNameProvider]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormGroupName, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName]',\n      providers: [formGroupNameProvider]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formGroupName']\n    }]\n  });\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    this.name = null;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /**\n   * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n   * @throws If the directive does not have a valid parent.\n   * @nodoc\n   */\n  ngOnInit() {\n    this._checkParentType();\n    this.formDirective.addFormArray(this);\n  }\n  /**\n   * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n   * @nodoc\n   */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      this.formDirective.removeFormArray(this);\n    }\n  }\n  /**\n   * @description\n   * The `FormArray` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormArray(this);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  _checkParentType() {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw arrayParentException();\n    }\n  }\n  static {\n    this.Éµfac = function FormArrayName_Factory(t) {\n      return new (t || FormArrayName)(i0.ÉµÉµdirectiveInject(ControlContainer, 13), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormArrayName,\n      selectors: [[\"\", \"formArrayName\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"formArrayName\", \"name\"]\n      },\n      features: [i0.ÉµÉµProvidersFeature([formArrayNameProvider]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormArrayName, [{\n    type: Directive,\n    args: [{\n      selector: '[formArrayName]',\n      providers: [formArrayNameProvider]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formArrayName']\n    }]\n  });\n})();\nfunction _hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlName. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static {\n    this._ngModelWarningSentOnce = false;\n  }\n  constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this._added = false;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    this.name = null;\n    /** @deprecated as of v6 */\n    this.update = new EventEmitter();\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    this._ngModelWarningSent = false;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (!this._added) this._setUpControl();\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n      }\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  _checkParentType() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {\n        throw ngModelGroupException();\n      } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {\n        throw controlParentException();\n      }\n    }\n  }\n  _setUpControl() {\n    this._checkParentType();\n    this.control = this.formDirective.addControl(this);\n    this._added = true;\n  }\n  static {\n    this.Éµfac = function FormControlName_Factory(t) {\n      return new (t || FormControlName)(i0.ÉµÉµdirectiveInject(ControlContainer, 13), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ÉµÉµdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormControlName,\n      selectors: [[\"\", \"formControlName\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"formControlName\", \"name\"],\n        isDisabled: [i0.ÉµÉµInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ÉµÉµInputFlags.None, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([controlNameBinding]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormControlName, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName]',\n      providers: [controlNameBinding]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formControlName']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this._optionMap = new Map();\n    /** @internal */\n    this._idCounter = 0;\n    this._compareWith = Object.is;\n  }\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new ÉµRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  /**\n   * Sets the \"value\" property on the select element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.value = value;\n    const id = this._getOptionId(value);\n    const valueString = _buildValueString$1(id, value);\n    this.setProperty('value', valueString);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = valueString => {\n      this.value = this._getOptionValue(valueString);\n      fn(this.value);\n    };\n  }\n  /** @internal */\n  _registerOption() {\n    return (this._idCounter++).toString();\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId$1(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµSelectControlValueAccessor_BaseFactory;\n      return function SelectControlValueAccessor_Factory(t) {\n        return (ÉµSelectControlValueAccessor_BaseFactory || (ÉµSelectControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(SelectControlValueAccessor)))(t || SelectControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: SelectControlValueAccessor,\n      selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n      hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(SelectControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) this.id = this._select._registerOption();\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString$1(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    this._setElementValue(value);\n    if (this._select) this._select.writeValue(this._select.value);\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n  static {\n    this.Éµfac = function NgSelectOption_Factory(t) {\n      return new (t || NgSelectOption)(i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(SelectControlValueAccessor, 9));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgSelectOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgSelectOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this._optionMap = new Map();\n    /** @internal */\n    this._idCounter = 0;\n    this._compareWith = Object.is;\n  }\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new ÉµRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  /**\n   * Sets the \"value\" property on one or of more of the select's options.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.value = value;\n    let optionSelectedStateSetter;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const ids = value.map(v => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(ids.indexOf(o.toString()) > -1);\n      };\n    } else {\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(false);\n      };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n  /**\n   * Registers a function called when the control value changes\n   * and writes an array of the selected options.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = element => {\n      const selected = [];\n      const selectedOptions = element.selectedOptions;\n      if (selectedOptions !== undefined) {\n        const options = selectedOptions;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          const val = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade to use `options` when `selectedOptions` property is not available.\n      // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n      // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n      else {\n        const options = element.options;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          if (opt.selected) {\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n  /** @internal */\n  _registerOption(value) {\n    const id = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµSelectMultipleControlValueAccessor_BaseFactory;\n      return function SelectMultipleControlValueAccessor_Factory(t) {\n        return (ÉµSelectMultipleControlValueAccessor_BaseFactory || (ÉµSelectMultipleControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(SelectMultipleControlValueAccessor)))(t || SelectMultipleControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: SelectMultipleControlValueAccessor,\n      selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n      hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target);\n          })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(SelectMultipleControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ÉµNgSelectMultipleOption {\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @internal */\n  _setSelected(selected) {\n    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n  static {\n    this.Éµfac = function ÉµNgSelectMultipleOption_Factory(t) {\n      return new (t || ÉµNgSelectMultipleOption)(i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(SelectMultipleControlValueAccessor, 9));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: ÉµNgSelectMultipleOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ÉµNgSelectMultipleOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectMultipleControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n  constructor() {\n    this._validator = nullValidator;\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (this.inputName in changes) {\n      const input = this.normalizeInput(changes[this.inputName].currentValue);\n      this._enabled = this.enabled(input);\n      this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n      if (this._onChange) {\n        this._onChange();\n      }\n    }\n  }\n  /** @nodoc */\n  validate(control) {\n    return this._validator(control);\n  }\n  /** @nodoc */\n  registerOnValidatorChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * @description\n   * Determines whether this validator should be active or not based on an input.\n   * Base class implementation checks whether an input is defined (if the value is different from\n   * `null` and `undefined`). Validator classes that extend this base class can override this\n   * function with the logic specific to a particular validator directive.\n   */\n  enabled(input) {\n    return input != null /* both `null` and `undefined` */;\n  }\n  static {\n    this.Éµfac = function AbstractValidatorDirective_Factory(t) {\n      return new (t || AbstractValidatorDirective)();\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: AbstractValidatorDirective,\n      features: [i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AbstractValidatorDirective, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'max';\n    /** @internal */\n    this.normalizeInput = input => toFloat(input);\n    /** @internal */\n    this.createValidator = max => maxValidator(max);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMaxValidator_BaseFactory;\n      return function MaxValidator_Factory(t) {\n        return (ÉµMaxValidator_BaseFactory || (ÉµMaxValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MaxValidator)))(t || MaxValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MaxValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"max\", ctx._enabled ? ctx.max : null);\n        }\n      },\n      inputs: {\n        max: \"max\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MAX_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MaxValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n      providers: [MAX_VALIDATOR],\n      host: {\n        '[attr.max]': '_enabled ? max : null'\n      }\n    }]\n  }], null, {\n    max: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'min';\n    /** @internal */\n    this.normalizeInput = input => toFloat(input);\n    /** @internal */\n    this.createValidator = min => minValidator(min);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMinValidator_BaseFactory;\n      return function MinValidator_Factory(t) {\n        return (ÉµMinValidator_BaseFactory || (ÉµMinValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MinValidator)))(t || MinValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MinValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"min\", ctx._enabled ? ctx.min : null);\n        }\n      },\n      inputs: {\n        min: \"min\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MIN_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MinValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n      providers: [MIN_VALIDATOR],\n      host: {\n        '[attr.min]': '_enabled ? min : null'\n      }\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'required';\n    /** @internal */\n    this.normalizeInput = booleanAttribute;\n    /** @internal */\n    this.createValidator = input => requiredValidator;\n  }\n  /** @nodoc */\n  enabled(input) {\n    return input;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµRequiredValidator_BaseFactory;\n      return function RequiredValidator_Factory(t) {\n        return (ÉµRequiredValidator_BaseFactory || (ÉµRequiredValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(RequiredValidator)))(t || RequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: RequiredValidator,\n      selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n      hostVars: 1,\n      hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      inputs: {\n        required: \"required\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([REQUIRED_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n      providers: [REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      }\n    }]\n  }], null, {\n    required: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.createValidator = input => requiredTrueValidator;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµCheckboxRequiredValidator_BaseFactory;\n      return function CheckboxRequiredValidator_Factory(t) {\n        return (ÉµCheckboxRequiredValidator_BaseFactory || (ÉµCheckboxRequiredValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(CheckboxRequiredValidator)))(t || CheckboxRequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: CheckboxRequiredValidator,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n      providers: [CHECKBOX_REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'email';\n    /** @internal */\n    this.normalizeInput = booleanAttribute;\n    /** @internal */\n    this.createValidator = input => emailValidator;\n  }\n  /** @nodoc */\n  enabled(input) {\n    return input;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµEmailValidator_BaseFactory;\n      return function EmailValidator_Factory(t) {\n        return (ÉµEmailValidator_BaseFactory || (ÉµEmailValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(EmailValidator)))(t || EmailValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: EmailValidator,\n      selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n      inputs: {\n        email: \"email\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([EMAIL_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(EmailValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n      providers: [EMAIL_VALIDATOR]\n    }]\n  }], null, {\n    email: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'minlength';\n    /** @internal */\n    this.normalizeInput = input => toInteger(input);\n    /** @internal */\n    this.createValidator = minlength => minLengthValidator(minlength);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMinLengthValidator_BaseFactory;\n      return function MinLengthValidator_Factory(t) {\n        return (ÉµMinLengthValidator_BaseFactory || (ÉµMinLengthValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MinLengthValidator)))(t || MinLengthValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MinLengthValidator,\n      selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n        }\n      },\n      inputs: {\n        minlength: \"minlength\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MinLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n      providers: [MIN_LENGTH_VALIDATOR],\n      host: {\n        '[attr.minlength]': '_enabled ? minlength : null'\n      }\n    }]\n  }], null, {\n    minlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'maxlength';\n    /** @internal */\n    this.normalizeInput = input => toInteger(input);\n    /** @internal */\n    this.createValidator = maxlength => maxLengthValidator(maxlength);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMaxLengthValidator_BaseFactory;\n      return function MaxLengthValidator_Factory(t) {\n        return (ÉµMaxLengthValidator_BaseFactory || (ÉµMaxLengthValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MaxLengthValidator)))(t || MaxLengthValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MaxLengthValidator,\n      selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n        }\n      },\n      inputs: {\n        maxlength: \"maxlength\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MaxLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n      providers: [MAX_LENGTH_VALIDATOR],\n      host: {\n        '[attr.maxlength]': '_enabled ? maxlength : null'\n      }\n    }]\n  }], null, {\n    maxlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'pattern';\n    /** @internal */\n    this.normalizeInput = input => input;\n    /** @internal */\n    this.createValidator = input => patternValidator(input);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµPatternValidator_BaseFactory;\n      return function PatternValidator_Factory(t) {\n        return (ÉµPatternValidator_BaseFactory || (ÉµPatternValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(PatternValidator)))(t || PatternValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: PatternValidator,\n      selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n        }\n      },\n      inputs: {\n        pattern: \"pattern\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([PATTERN_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(PatternValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n      providers: [PATTERN_VALIDATOR],\n      host: {\n        '[attr.pattern]': '_enabled ? pattern : null'\n      }\n    }]\n  }], null, {\n    pattern: [{\n      type: Input\n    }]\n  });\n})();\nconst SHARED_FORM_DIRECTIVES = [ÉµNgNoValidate, NgSelectOption, ÉµNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ÉµInternalFormsSharedModule {\n  static {\n    this.Éµfac = function ÉµInternalFormsSharedModule_Factory(t) {\n      return new (t || ÉµInternalFormsSharedModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: ÉµInternalFormsSharedModule,\n      declarations: [ÉµNgNoValidate, NgSelectOption, ÉµNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator],\n      exports: [ÉµNgNoValidate, NgSelectOption, ÉµNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator]\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ÉµInternalFormsSharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: SHARED_FORM_DIRECTIVES,\n      exports: SHARED_FORM_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n// clang-format on\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n  constructor() {\n    this.useNonNullable = false;\n  }\n  /**\n   * @description\n   * Returns a FormBuilder in which automatically constructed `FormControl` elements\n   * have `{nonNullable: true}` and are non-nullable.\n   *\n   * **Constructing non-nullable controls**\n   *\n   * When constructing a control, it will be non-nullable, and will reset to its initial value.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.control('Alex'); // FormControl<string>\n   * name.reset();\n   * console.log(name); // 'Alex'\n   * ```\n   *\n   * **Constructing non-nullable groups or arrays**\n   *\n   * When constructing a group or array, all automatically created inner controls will be\n   * non-nullable, and will reset to their initial values.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n   * name.reset();\n   * console.log(name); // {who: 'Alex'}\n   * ```\n   * **Constructing *nullable* fields on groups or arrays**\n   *\n   * It is still possible to have a nullable field. In particular, any `FormControl` which is\n   * *already* constructed will not be altered. For example:\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * // FormGroup<{who: FormControl<string|null>}>\n   * let name = nnfb.group({who: new FormControl('Alex')});\n   * name.reset(); console.log(name); // {who: null}\n   * ```\n   *\n   * Because the inner control is constructed explicitly by the caller, the builder has\n   * no control over how it is created, and cannot exclude the `null`.\n   */\n  get nonNullable() {\n    const nnfb = new FormBuilder();\n    nnfb.useNonNullable = true;\n    return nnfb;\n  }\n  group(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    let newOptions = {};\n    if (isAbstractControlOptions(options)) {\n      // `options` are `AbstractControlOptions`\n      newOptions = options;\n    } else if (options !== null) {\n      // `options` are legacy form group options\n      newOptions.validators = options.validator;\n      newOptions.asyncValidators = options.asyncValidator;\n    }\n    return new FormGroup(reducedControls, newOptions);\n  }\n  /**\n   * @description\n   * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n   * containing all the keys and corresponding inner control types.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param options Configuration options object for the `FormRecord`. The object should have the\n   * `AbstractControlOptions` type and might contain the following fields:\n   * * `validators`: A synchronous validator function, or an array of validator functions.\n   * * `asyncValidators`: A single async validator or array of async validator functions.\n   * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n   * | submit').\n   */\n  record(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormRecord(reducedControls, options);\n  }\n  /**\n   * @description\n   * Constructs a new `FormControl` with the given state, validators and options. Sets\n   * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n   * control will be nullable. Accepts a single generic argument, which is the type  of the\n   * control's value.\n   *\n   * @param formState Initializes the control with an initial state value, or\n   * with an object that contains both a value and a disabled status.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or a `FormControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator\n   * functions.\n   *\n   * @usageNotes\n   *\n   * ### Initialize a control as disabled\n   *\n   * The following example returns a control with an initial value in a disabled state.\n   *\n   * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n   * </code-example>\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    let newOptions = {};\n    if (!this.useNonNullable) {\n      return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    if (isAbstractControlOptions(validatorOrOpts)) {\n      // If the second argument is options, then they are copied.\n      newOptions = validatorOrOpts;\n    } else {\n      // If the other arguments are validators, they are copied into an options object.\n      newOptions.validators = validatorOrOpts;\n      newOptions.asyncValidators = asyncValidator;\n    }\n    return new FormControl(formState, {\n      ...newOptions,\n      nonNullable: true\n    });\n  }\n  /**\n   * Constructs a new `FormArray` from the given array of configurations,\n   * validators and options. Accepts a single generic argument, which is the type of each control\n   * inside the array.\n   *\n   * @param controls An array of child controls or control configs. Each child control is given an\n   *     index when it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n   *     `AbstractControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions.\n   */\n  array(controls, validatorOrOpts, asyncValidator) {\n    const createdControls = controls.map(c => this._createControl(c));\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n  }\n  /** @internal */\n  _reduceControls(controls) {\n    const createdControls = {};\n    Object.keys(controls).forEach(controlName => {\n      createdControls[controlName] = this._createControl(controls[controlName]);\n    });\n    return createdControls;\n  }\n  /** @internal */\n  _createControl(controls) {\n    if (controls instanceof FormControl) {\n      return controls;\n    } else if (controls instanceof AbstractControl) {\n      // A control; just return it\n      return controls;\n    } else if (Array.isArray(controls)) {\n      // ControlConfig Tuple\n      const value = controls[0];\n      const validator = controls.length > 1 ? controls[1] : null;\n      const asyncValidator = controls.length > 2 ? controls[2] : null;\n      return this.control(value, validator, asyncValidator);\n    } else {\n      // T or FormControlState<T>\n      return this.control(controls);\n    }\n  }\n  static {\n    this.Éµfac = function FormBuilder_Factory(t) {\n      return new (t || FormBuilder)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: FormBuilder,\n      factory: FormBuilder.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n  static {\n    this.Éµfac = function NonNullableFormBuilder_Factory(t) {\n      return new (t || NonNullableFormBuilder)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: NonNullableFormBuilder,\n      factory: () => (() => inject(FormBuilder).nonNullable)(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NonNullableFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(FormBuilder).nonNullable\n    }]\n  }], null, null);\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n  group(controlsConfig, options = null) {\n    return super.group(controlsConfig, options);\n  }\n  /**\n   * Like `FormBuilder#control`, except the resulting control is untyped.\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    return super.control(formState, validatorOrOpts, asyncValidator);\n  }\n  /**\n   * Like `FormBuilder#array`, except the resulting array is untyped.\n   */\n  array(controlsConfig, validatorOrOpts, asyncValidator) {\n    return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµUntypedFormBuilder_BaseFactory;\n      return function UntypedFormBuilder_Factory(t) {\n        return (ÉµUntypedFormBuilder_BaseFactory || (ÉµUntypedFormBuilder_BaseFactory = i0.ÉµÉµgetInheritedFactory(UntypedFormBuilder)))(t || UntypedFormBuilder);\n      };\n    })();\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: UntypedFormBuilder,\n      factory: UntypedFormBuilder.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(UntypedFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.3.5');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n  /**\n   * @description\n   * Provides options for configuring the forms module.\n   *\n   * @param opts An object of configuration options\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: FormsModule,\n      providers: [{\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static {\n    this.Éµfac = function FormsModule_Factory(t) {\n      return new (t || FormsModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: FormsModule,\n      declarations: [NgModel, NgModelGroup, NgForm],\n      exports: [ÉµInternalFormsSharedModule, NgModel, NgModelGroup, NgForm]\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      imports: [ÉµInternalFormsSharedModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n      exports: [ÉµInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n  /**\n   * @description\n   * Provides options for configuring the reactive forms module.\n   *\n   * @param opts An object of configuration options\n   * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n   * binding is used with reactive form directives.\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: ReactiveFormsModule,\n      providers: [{\n        provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n        useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n      }, {\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static {\n    this.Éµfac = function ReactiveFormsModule_Factory(t) {\n      return new (t || ReactiveFormsModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: ReactiveFormsModule,\n      declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName],\n      exports: [ÉµInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName]\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      imports: [ÉµInternalFormsSharedModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ReactiveFormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n      exports: [ÉµInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, isFormArray, isFormControl, isFormGroup, isFormRecord, ÉµInternalFormsSharedModule, ÉµNgNoValidate, ÉµNgSelectMultipleOption };\n", "import * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\n\n/**\n * Scroller is a performance-approach to handle huge data efficiently.\n * @group Components\n */\nconst _c0 = [\"element\"];\nconst _c1 = [\"content\"];\nconst _c2 = [\"*\"];\nconst _c3 = (a0, a1, a2) => ({\n  \"p-scroller\": true,\n  \"p-scroller-inline\": a0,\n  \"p-both-scroll\": a1,\n  \"p-horizontal-scroll\": a2\n});\nconst _c4 = (a0, a1) => ({\n  $implicit: a0,\n  options: a1\n});\nconst _c5 = a0 => ({\n  \"p-scroller-loading\": a0\n});\nconst _c6 = a0 => ({\n  \"p-component-overlay\": a0\n});\nconst _c7 = a0 => ({\n  numCols: a0\n});\nconst _c8 = a0 => ({\n  options: a0\n});\nconst _c9 = () => ({\n  styleClass: \"p-scroller-loading-icon\"\n});\nconst _c10 = (a0, a1) => ({\n  rows: a0,\n  columns: a1\n});\nfunction Scroller_ng_container_0_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Scroller_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Scroller_ng_container_0_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction2(2, _c4, ctx_r1.loadedItems, ctx_r1.getContentOptions()));\n  }\n}\nfunction Scroller_ng_container_0_ng_template_4_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Scroller_ng_container_0_ng_template_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Scroller_ng_container_0_ng_template_4_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const index_r4 = ctx.index;\n    const ctx_r1 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.itemTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction2(2, _c4, item_r3, ctx_r1.getOptions(index_r4)));\n  }\n}\nfunction Scroller_ng_container_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 11, 3);\n    i0.ÉµÉµtemplate(2, Scroller_ng_container_0_ng_template_4_ng_container_2_Template, 2, 5, \"ng-container\", 12);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(5, _c5, ctx_r1.d_loading))(\"ngStyle\", ctx_r1.contentStyle);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"content\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngForOf\", ctx_r1.loadedItems)(\"ngForTrackBy\", ctx_r1._trackBy || ctx_r1.index);\n  }\n}\nfunction Scroller_ng_container_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"div\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngStyle\", ctx_r1.spacerStyle);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"spacer\");\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const index_r5 = ctx.index;\n    const ctx_r1 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.loaderTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(4, _c8, ctx_r1.getLoaderOptions(index_r5, ctx_r1.both && i0.ÉµÉµpureFunction1(2, _c7, ctx_r1._numItemsInViewport.cols))));\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Scroller_ng_container_0_div_7_ng_container_1_ng_container_1_Template, 2, 6, \"ng-container\", 15);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngForOf\", ctx_r1.loaderArr);\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.loaderIconTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(3, _c8, i0.ÉµÉµpureFunction0(2, _c9)));\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"SpinnerIcon\", 16);\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-scroller-loading-icon pi-spin\");\n    i0.ÉµÉµattribute(\"data-pc-section\", \"loadingIcon\");\n  }\n}\nfunction Scroller_ng_container_0_div_7_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Scroller_ng_container_0_div_7_ng_template_2_ng_container_0_Template, 2, 5, \"ng-container\", 6)(1, Scroller_ng_container_0_div_7_ng_template_2_ng_template_1_Template, 1, 2, \"ng-template\", null, 5, i0.ÉµÉµtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const buildInLoaderIcon_r6 = i0.ÉµÉµreference(2);\n    const ctx_r1 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.loaderIconTemplate)(\"ngIfElse\", buildInLoaderIcon_r6);\n  }\n}\nfunction Scroller_ng_container_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 14);\n    i0.ÉµÉµtemplate(1, Scroller_ng_container_0_div_7_ng_container_1_Template, 2, 1, \"ng-container\", 6)(2, Scroller_ng_container_0_div_7_ng_template_2_Template, 3, 2, \"ng-template\", null, 4, i0.ÉµÉµtemplateRefExtractor);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const buildInLoader_r7 = i0.ÉµÉµreference(3);\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(4, _c6, !ctx_r1.loaderTemplate));\n    i0.ÉµÉµattribute(\"data-pc-section\", \"loader\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.loaderTemplate)(\"ngIfElse\", buildInLoader_r7);\n  }\n}\nfunction Scroller_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµelementStart(1, \"div\", 7, 1);\n    i0.ÉµÉµlistener(\"scroll\", function Scroller_ng_container_0_Template_div_scroll_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r1);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.onContainerScroll($event));\n    });\n    i0.ÉµÉµtemplate(3, Scroller_ng_container_0_ng_container_3_Template, 2, 5, \"ng-container\", 6)(4, Scroller_ng_container_0_ng_template_4_Template, 3, 7, \"ng-template\", null, 2, i0.ÉµÉµtemplateRefExtractor)(6, Scroller_ng_container_0_div_6_Template, 1, 2, \"div\", 8)(7, Scroller_ng_container_0_div_7_Template, 4, 6, \"div\", 9);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const buildInContent_r8 = i0.ÉµÉµreference(5);\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµclassMap(ctx_r1._styleClass);\n    i0.ÉµÉµproperty(\"ngStyle\", ctx_r1._style)(\"ngClass\", i0.ÉµÉµpureFunction3(12, _c3, ctx_r1.inline, ctx_r1.both, ctx_r1.horizontal));\n    i0.ÉµÉµattribute(\"id\", ctx_r1._id)(\"tabindex\", ctx_r1.tabindex)(\"data-pc-name\", \"scroller\")(\"data-pc-section\", \"root\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.contentTemplate)(\"ngIfElse\", buildInContent_r8);\n    i0.ÉµÉµadvance(3);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1._showSpacer);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r1.loaderDisabled && ctx_r1._showLoader && ctx_r1.d_loading);\n  }\n}\nfunction Scroller_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Scroller_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Scroller_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction2(5, _c4, ctx_r1.items, i0.ÉµÉµpureFunction2(2, _c10, ctx_r1._items, ctx_r1.loadedColumns)));\n  }\n}\nfunction Scroller_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµprojection(0);\n    i0.ÉµÉµtemplate(1, Scroller_ng_template_1_ng_container_1_Template, 2, 8, \"ng-container\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.contentTemplate);\n  }\n}\nclass Scroller {\n  document;\n  platformId;\n  renderer;\n  cd;\n  zone;\n  /**\n   * Unique identifier of the element.\n   * @group Props\n   */\n  get id() {\n    return this._id;\n  }\n  set id(val) {\n    this._id = val;\n  }\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  get style() {\n    return this._style;\n  }\n  set style(val) {\n    this._style = val;\n  }\n  /**\n   * Style class of the element.\n   * @group Props\n   */\n  get styleClass() {\n    return this._styleClass;\n  }\n  set styleClass(val) {\n    this._styleClass = val;\n  }\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  get tabindex() {\n    return this._tabindex;\n  }\n  set tabindex(val) {\n    this._tabindex = val;\n  }\n  /**\n   * An array of objects to display.\n   * @group Props\n   */\n  get items() {\n    return this._items;\n  }\n  set items(val) {\n    this._items = val;\n  }\n  /**\n   * The height/width of item according to orientation.\n   * @group Props\n   */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(val) {\n    this._itemSize = val;\n  }\n  /**\n   * Height of the scroll viewport.\n   * @group Props\n   */\n  get scrollHeight() {\n    return this._scrollHeight;\n  }\n  set scrollHeight(val) {\n    this._scrollHeight = val;\n  }\n  /**\n   * Width of the scroll viewport.\n   * @group Props\n   */\n  get scrollWidth() {\n    return this._scrollWidth;\n  }\n  set scrollWidth(val) {\n    this._scrollWidth = val;\n  }\n  /**\n   * The orientation of scrollbar.\n   * @group Props\n   */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(val) {\n    this._orientation = val;\n  }\n  /**\n   * Used to specify how many items to load in each load method in lazy mode.\n   * @group Props\n   */\n  get step() {\n    return this._step;\n  }\n  set step(val) {\n    this._step = val;\n  }\n  /**\n   * Delay in scroll before new data is loaded.\n   * @group Props\n   */\n  get delay() {\n    return this._delay;\n  }\n  set delay(val) {\n    this._delay = val;\n  }\n  /**\n   * Delay after window's resize finishes.\n   * @group Props\n   */\n  get resizeDelay() {\n    return this._resizeDelay;\n  }\n  set resizeDelay(val) {\n    this._resizeDelay = val;\n  }\n  /**\n   * Used to append each loaded item to top without removing any items from the DOM. Using very large data may cause the browser to crash.\n   * @group Props\n   */\n  get appendOnly() {\n    return this._appendOnly;\n  }\n  set appendOnly(val) {\n    this._appendOnly = val;\n  }\n  /**\n   * Specifies whether the scroller should be displayed inline or not.\n   * @group Props\n   */\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = val;\n  }\n  /**\n   * Defines if data is loaded and interacted with in lazy manner.\n   * @group Props\n   */\n  get lazy() {\n    return this._lazy;\n  }\n  set lazy(val) {\n    this._lazy = val;\n  }\n  /**\n   * If disabled, the scroller feature is eliminated and the content is displayed directly.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(val) {\n    this._disabled = val;\n  }\n  /**\n   * Used to implement a custom loader instead of using the loader feature in the scroller.\n   * @group Props\n   */\n  get loaderDisabled() {\n    return this._loaderDisabled;\n  }\n  set loaderDisabled(val) {\n    this._loaderDisabled = val;\n  }\n  /**\n   * Columns to display.\n   * @group Props\n   */\n  get columns() {\n    return this._columns;\n  }\n  set columns(val) {\n    this._columns = val;\n  }\n  /**\n   * Used to implement a custom spacer instead of using the spacer feature in the scroller.\n   * @group Props\n   */\n  get showSpacer() {\n    return this._showSpacer;\n  }\n  set showSpacer(val) {\n    this._showSpacer = val;\n  }\n  /**\n   * Defines whether to show loader.\n   * @group Props\n   */\n  get showLoader() {\n    return this._showLoader;\n  }\n  set showLoader(val) {\n    this._showLoader = val;\n  }\n  /**\n   * Determines how many additional elements to add to the DOM outside of the view. According to the scrolls made up and down, extra items are added in a certain algorithm in the form of multiples of this number. Default value is half the number of items shown in the view.\n   * @group Props\n   */\n  get numToleratedItems() {\n    return this._numToleratedItems;\n  }\n  set numToleratedItems(val) {\n    this._numToleratedItems = val;\n  }\n  /**\n   * Defines whether the data is loaded.\n   * @group Props\n   */\n  get loading() {\n    return this._loading;\n  }\n  set loading(val) {\n    this._loading = val;\n  }\n  /**\n   * Defines whether to dynamically change the height or width of scrollable container.\n   * @group Props\n   */\n  get autoSize() {\n    return this._autoSize;\n  }\n  set autoSize(val) {\n    this._autoSize = val;\n  }\n  /**\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity.\n   * @group Props\n   */\n  get trackBy() {\n    return this._trackBy;\n  }\n  set trackBy(val) {\n    this._trackBy = val;\n  }\n  /**\n   * Defines whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n   * @group Props\n   */\n  get options() {\n    return this._options;\n  }\n  set options(val) {\n    this._options = val;\n    if (val && typeof val === 'object') {\n      //@ts-ignore\n      Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n    }\n  }\n  /**\n   * Callback to invoke in lazy mode to load new data.\n   * @param {ScrollerLazyLoadEvent} event - Custom lazy load event.\n   * @group Emits\n   */\n  onLazyLoad = new EventEmitter();\n  /**\n   * Callback to invoke when scroll position changes.\n   * @param {ScrollerScrollEvent} event - Custom scroll event.\n   * @group Emits\n   */\n  onScroll = new EventEmitter();\n  /**\n   * Callback to invoke when scroll position and item's range in view changes.\n   * @param {ScrollerScrollEvent} event - Custom scroll index change event.\n   * @group Emits\n   */\n  onScrollIndexChange = new EventEmitter();\n  elementViewChild;\n  contentViewChild;\n  templates;\n  _id;\n  _style;\n  _styleClass;\n  _tabindex = 0;\n  _items;\n  _itemSize = 0;\n  _scrollHeight;\n  _scrollWidth;\n  _orientation = 'vertical';\n  _step = 0;\n  _delay = 0;\n  _resizeDelay = 10;\n  _appendOnly = false;\n  _inline = false;\n  _lazy = false;\n  _disabled = false;\n  _loaderDisabled = false;\n  _columns;\n  _showSpacer = true;\n  _showLoader = false;\n  _numToleratedItems;\n  _loading;\n  _autoSize = false;\n  _trackBy;\n  _options;\n  d_loading = false;\n  d_numToleratedItems;\n  contentEl;\n  contentTemplate;\n  itemTemplate;\n  loaderTemplate;\n  loaderIconTemplate;\n  first = 0;\n  last = 0;\n  page = 0;\n  isRangeChanged = false;\n  numItemsInViewport = 0;\n  lastScrollPos = 0;\n  lazyLoadState = {};\n  loaderArr = [];\n  spacerStyle = {};\n  contentStyle = {};\n  scrollTimeout;\n  resizeTimeout;\n  initialized = false;\n  windowResizeListener;\n  defaultWidth;\n  defaultHeight;\n  defaultContentWidth;\n  defaultContentHeight;\n  get vertical() {\n    return this._orientation === 'vertical';\n  }\n  get horizontal() {\n    return this._orientation === 'horizontal';\n  }\n  get both() {\n    return this._orientation === 'both';\n  }\n  get loadedItems() {\n    if (this._items && !this.d_loading) {\n      if (this.both) return this._items.slice(this._appendOnly ? 0 : this.first.rows, this.last.rows).map(item => this._columns ? item : item.slice(this._appendOnly ? 0 : this.first.cols, this.last.cols));else if (this.horizontal && this._columns) return this._items;else return this._items.slice(this._appendOnly ? 0 : this.first, this.last);\n    }\n    return [];\n  }\n  get loadedRows() {\n    return this.d_loading ? this._loaderDisabled ? this.loaderArr : [] : this.loadedItems;\n  }\n  get loadedColumns() {\n    if (this._columns && (this.both || this.horizontal)) {\n      return this.d_loading && this._loaderDisabled ? this.both ? this.loaderArr[0] : this.loaderArr : this._columns.slice(this.both ? this.first.cols : this.first, this.both ? this.last.cols : this.last);\n    }\n    return this._columns;\n  }\n  constructor(document, platformId, renderer, cd, zone) {\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n  }\n  ngOnInit() {\n    this.setInitialState();\n  }\n  ngOnChanges(simpleChanges) {\n    let isLoadingChanged = false;\n    if (simpleChanges.loading) {\n      const {\n        previousValue,\n        currentValue\n      } = simpleChanges.loading;\n      if (this.lazy && previousValue !== currentValue && currentValue !== this.d_loading) {\n        this.d_loading = currentValue;\n        isLoadingChanged = true;\n      }\n    }\n    if (simpleChanges.orientation) {\n      this.lastScrollPos = this.both ? {\n        top: 0,\n        left: 0\n      } : 0;\n    }\n    if (simpleChanges.numToleratedItems) {\n      const {\n        previousValue,\n        currentValue\n      } = simpleChanges.numToleratedItems;\n      if (previousValue !== currentValue && currentValue !== this.d_numToleratedItems) {\n        this.d_numToleratedItems = currentValue;\n      }\n    }\n    if (simpleChanges.options) {\n      const {\n        previousValue,\n        currentValue\n      } = simpleChanges.options;\n      if (this.lazy && previousValue?.loading !== currentValue?.loading && currentValue?.loading !== this.d_loading) {\n        this.d_loading = currentValue.loading;\n        isLoadingChanged = true;\n      }\n      if (previousValue?.numToleratedItems !== currentValue?.numToleratedItems && currentValue?.numToleratedItems !== this.d_numToleratedItems) {\n        this.d_numToleratedItems = currentValue.numToleratedItems;\n      }\n    }\n    if (this.initialized) {\n      const isChanged = !isLoadingChanged && (simpleChanges.items?.previousValue?.length !== simpleChanges.items?.currentValue?.length || simpleChanges.itemSize || simpleChanges.scrollHeight || simpleChanges.scrollWidth);\n      if (isChanged) {\n        this.init();\n        this.calculateAutoSize();\n      }\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n        case 'loadericon':\n          this.loaderIconTemplate = item.template;\n          break;\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    Promise.resolve().then(() => {\n      this.viewInit();\n    });\n  }\n  ngAfterViewChecked() {\n    if (!this.initialized) {\n      this.viewInit();\n    }\n  }\n  ngOnDestroy() {\n    this.unbindResizeListener();\n    this.contentEl = null;\n    this.initialized = false;\n  }\n  viewInit() {\n    if (isPlatformBrowser(this.platformId) && !this.initialized) {\n      if (DomHandler.isVisible(this.elementViewChild?.nativeElement)) {\n        this.setInitialState();\n        this.setContentEl(this.contentEl);\n        this.init();\n        this.defaultWidth = DomHandler.getWidth(this.elementViewChild?.nativeElement);\n        this.defaultHeight = DomHandler.getHeight(this.elementViewChild?.nativeElement);\n        this.defaultContentWidth = DomHandler.getWidth(this.contentEl);\n        this.defaultContentHeight = DomHandler.getHeight(this.contentEl);\n        this.initialized = true;\n      }\n    }\n  }\n  init() {\n    if (!this._disabled) {\n      this.setSize();\n      this.calculateOptions();\n      this.setSpacerSize();\n      this.bindResizeListener();\n      this.cd.detectChanges();\n    }\n  }\n  setContentEl(el) {\n    this.contentEl = el || this.contentViewChild?.nativeElement || DomHandler.findSingle(this.elementViewChild?.nativeElement, '.p-scroller-content');\n  }\n  setInitialState() {\n    this.first = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    this.last = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    this.numItemsInViewport = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    this.lastScrollPos = this.both ? {\n      top: 0,\n      left: 0\n    } : 0;\n    this.d_loading = this._loading || false;\n    this.d_numToleratedItems = this._numToleratedItems;\n    this.loaderArr = [];\n    this.spacerStyle = {};\n    this.contentStyle = {};\n  }\n  getElementRef() {\n    return this.elementViewChild;\n  }\n  getPageByFirst(first) {\n    return Math.floor(((first ?? this.first) + this.d_numToleratedItems * 4) / (this._step || 1));\n  }\n  isPageChanged(first) {\n    return this._step ? this.page !== this.getPageByFirst(first ?? this.first) : true;\n  }\n  scrollTo(options) {\n    // this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n    this.elementViewChild?.nativeElement?.scrollTo(options);\n  }\n  scrollToIndex(index, behavior = 'auto') {\n    const valid = this.both ? index.every(i => i > -1) : index > -1;\n    if (valid) {\n      const first = this.first;\n      const {\n        scrollTop = 0,\n        scrollLeft = 0\n      } = this.elementViewChild?.nativeElement;\n      const {\n        numToleratedItems\n      } = this.calculateNumItems();\n      const contentPos = this.getContentPosition();\n      const itemSize = this.itemSize;\n      const calculateFirst = (_index = 0, _numT) => _index <= _numT ? 0 : _index;\n      const calculateCoord = (_first, _size, _cpos) => _first * _size + _cpos;\n      const scrollTo = (left = 0, top = 0) => this.scrollTo({\n        left,\n        top,\n        behavior\n      });\n      let newFirst = this.both ? {\n        rows: 0,\n        cols: 0\n      } : 0;\n      let isRangeChanged = false,\n        isScrollChanged = false;\n      if (this.both) {\n        newFirst = {\n          rows: calculateFirst(index[0], numToleratedItems[0]),\n          cols: calculateFirst(index[1], numToleratedItems[1])\n        };\n        scrollTo(calculateCoord(newFirst.cols, itemSize[1], contentPos.left), calculateCoord(newFirst.rows, itemSize[0], contentPos.top));\n        isScrollChanged = this.lastScrollPos.top !== scrollTop || this.lastScrollPos.left !== scrollLeft;\n        isRangeChanged = newFirst.rows !== first.rows || newFirst.cols !== first.cols;\n      } else {\n        newFirst = calculateFirst(index, numToleratedItems);\n        this.horizontal ? scrollTo(calculateCoord(newFirst, itemSize, contentPos.left), scrollTop) : scrollTo(scrollLeft, calculateCoord(newFirst, itemSize, contentPos.top));\n        isScrollChanged = this.lastScrollPos !== (this.horizontal ? scrollLeft : scrollTop);\n        isRangeChanged = newFirst !== first;\n      }\n      this.isRangeChanged = isRangeChanged;\n      isScrollChanged && (this.first = newFirst);\n    }\n  }\n  scrollInView(index, to, behavior = 'auto') {\n    if (to) {\n      const {\n        first,\n        viewport\n      } = this.getRenderedRange();\n      const scrollTo = (left = 0, top = 0) => this.scrollTo({\n        left,\n        top,\n        behavior\n      });\n      const isToStart = to === 'to-start';\n      const isToEnd = to === 'to-end';\n      if (isToStart) {\n        if (this.both) {\n          if (viewport.first.rows - first.rows > index[0]) {\n            scrollTo(viewport.first.cols * this._itemSize[1], (viewport.first.rows - 1) * this._itemSize[0]);\n          } else if (viewport.first.cols - first.cols > index[1]) {\n            scrollTo((viewport.first.cols - 1) * this._itemSize[1], viewport.first.rows * this._itemSize[0]);\n          }\n        } else {\n          if (viewport.first - first > index) {\n            const pos = (viewport.first - 1) * this._itemSize;\n            this.horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n          }\n        }\n      } else if (isToEnd) {\n        if (this.both) {\n          if (viewport.last.rows - first.rows <= index[0] + 1) {\n            scrollTo(viewport.first.cols * this._itemSize[1], (viewport.first.rows + 1) * this._itemSize[0]);\n          } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n            scrollTo((viewport.first.cols + 1) * this._itemSize[1], viewport.first.rows * this._itemSize[0]);\n          }\n        } else {\n          if (viewport.last - first <= index + 1) {\n            const pos = (viewport.first + 1) * this._itemSize;\n            this.horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n          }\n        }\n      }\n    } else {\n      this.scrollToIndex(index, behavior);\n    }\n  }\n  getRenderedRange() {\n    const calculateFirstInViewport = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n    let firstInViewport = this.first;\n    let lastInViewport = 0;\n    if (this.elementViewChild?.nativeElement) {\n      const {\n        scrollTop,\n        scrollLeft\n      } = this.elementViewChild.nativeElement;\n      if (this.both) {\n        firstInViewport = {\n          rows: calculateFirstInViewport(scrollTop, this._itemSize[0]),\n          cols: calculateFirstInViewport(scrollLeft, this._itemSize[1])\n        };\n        lastInViewport = {\n          rows: firstInViewport.rows + this.numItemsInViewport.rows,\n          cols: firstInViewport.cols + this.numItemsInViewport.cols\n        };\n      } else {\n        const scrollPos = this.horizontal ? scrollLeft : scrollTop;\n        firstInViewport = calculateFirstInViewport(scrollPos, this._itemSize);\n        lastInViewport = firstInViewport + this.numItemsInViewport;\n      }\n    }\n    return {\n      first: this.first,\n      last: this.last,\n      viewport: {\n        first: firstInViewport,\n        last: lastInViewport\n      }\n    };\n  }\n  calculateNumItems() {\n    const contentPos = this.getContentPosition();\n    const contentWidth = (this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetWidth - contentPos.left : 0) || 0;\n    const contentHeight = (this.elementViewChild?.nativeElement ? this.elementViewChild.nativeElement.offsetHeight - contentPos.top : 0) || 0;\n    const calculateNumItemsInViewport = (_contentSize, _itemSize) => Math.ceil(_contentSize / (_itemSize || _contentSize));\n    const calculateNumToleratedItems = _numItems => Math.ceil(_numItems / 2);\n    const numItemsInViewport = this.both ? {\n      rows: calculateNumItemsInViewport(contentHeight, this._itemSize[0]),\n      cols: calculateNumItemsInViewport(contentWidth, this._itemSize[1])\n    } : calculateNumItemsInViewport(this.horizontal ? contentWidth : contentHeight, this._itemSize);\n    const numToleratedItems = this.d_numToleratedItems || (this.both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n    return {\n      numItemsInViewport,\n      numToleratedItems\n    };\n  }\n  calculateOptions() {\n    const {\n      numItemsInViewport,\n      numToleratedItems\n    } = this.calculateNumItems();\n    const calculateLast = (_first, _num, _numT, _isCols = false) => this.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n    const first = this.first;\n    const last = this.both ? {\n      rows: calculateLast(this.first.rows, numItemsInViewport.rows, numToleratedItems[0]),\n      cols: calculateLast(this.first.cols, numItemsInViewport.cols, numToleratedItems[1], true)\n    } : calculateLast(this.first, numItemsInViewport, numToleratedItems);\n    this.last = last;\n    this.numItemsInViewport = numItemsInViewport;\n    this.d_numToleratedItems = numToleratedItems;\n    if (this.showLoader) {\n      this.loaderArr = this.both ? Array.from({\n        length: numItemsInViewport.rows\n      }).map(() => Array.from({\n        length: numItemsInViewport.cols\n      })) : Array.from({\n        length: numItemsInViewport\n      });\n    }\n    if (this._lazy) {\n      Promise.resolve().then(() => {\n        this.lazyLoadState = {\n          first: this._step ? this.both ? {\n            rows: 0,\n            cols: first.cols\n          } : 0 : first,\n          last: Math.min(this._step ? this._step : this.last, this.items.length)\n        };\n        this.handleEvents('onLazyLoad', this.lazyLoadState);\n      });\n    }\n  }\n  calculateAutoSize() {\n    if (this._autoSize && !this.d_loading) {\n      Promise.resolve().then(() => {\n        if (this.contentEl) {\n          this.contentEl.style.minHeight = this.contentEl.style.minWidth = 'auto';\n          this.contentEl.style.position = 'relative';\n          this.elementViewChild.nativeElement.style.contain = 'none';\n          const [contentWidth, contentHeight] = [DomHandler.getWidth(this.contentEl), DomHandler.getHeight(this.contentEl)];\n          contentWidth !== this.defaultContentWidth && (this.elementViewChild.nativeElement.style.width = '');\n          contentHeight !== this.defaultContentHeight && (this.elementViewChild.nativeElement.style.height = '');\n          const [width, height] = [DomHandler.getWidth(this.elementViewChild.nativeElement), DomHandler.getHeight(this.elementViewChild.nativeElement)];\n          (this.both || this.horizontal) && (this.elementViewChild.nativeElement.style.width = width < this.defaultWidth ? width + 'px' : this._scrollWidth || this.defaultWidth + 'px');\n          (this.both || this.vertical) && (this.elementViewChild.nativeElement.style.height = height < this.defaultHeight ? height + 'px' : this._scrollHeight || this.defaultHeight + 'px');\n          this.contentEl.style.minHeight = this.contentEl.style.minWidth = '';\n          this.contentEl.style.position = '';\n          this.elementViewChild.nativeElement.style.contain = '';\n        }\n      });\n    }\n  }\n  getLast(last = 0, isCols = false) {\n    return this._items ? Math.min(isCols ? (this._columns || this._items[0]).length : this._items.length, last) : 0;\n  }\n  getContentPosition() {\n    if (this.contentEl) {\n      const style = getComputedStyle(this.contentEl);\n      const left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n      const right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n      const top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n      const bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n      return {\n        left,\n        right,\n        top,\n        bottom,\n        x: left + right,\n        y: top + bottom\n      };\n    }\n    return {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      x: 0,\n      y: 0\n    };\n  }\n  setSize() {\n    if (this.elementViewChild?.nativeElement) {\n      const parentElement = this.elementViewChild.nativeElement.parentElement.parentElement;\n      const width = this._scrollWidth || `${this.elementViewChild.nativeElement.offsetWidth || parentElement.offsetWidth}px`;\n      const height = this._scrollHeight || `${this.elementViewChild.nativeElement.offsetHeight || parentElement.offsetHeight}px`;\n      const setProp = (_name, _value) => this.elementViewChild.nativeElement.style[_name] = _value;\n      if (this.both || this.horizontal) {\n        setProp('height', height);\n        setProp('width', width);\n      } else {\n        setProp('height', height);\n      }\n    }\n  }\n  setSpacerSize() {\n    if (this._items) {\n      const contentPos = this.getContentPosition();\n      const setProp = (_name, _value, _size, _cpos = 0) => this.spacerStyle = {\n        ...this.spacerStyle,\n        ...{\n          [`${_name}`]: (_value || []).length * _size + _cpos + 'px'\n        }\n      };\n      if (this.both) {\n        setProp('height', this._items, this._itemSize[0], contentPos.y);\n        setProp('width', this._columns || this._items[1], this._itemSize[1], contentPos.x);\n      } else {\n        this.horizontal ? setProp('width', this._columns || this._items, this._itemSize, contentPos.x) : setProp('height', this._items, this._itemSize, contentPos.y);\n      }\n    }\n  }\n  setContentPosition(pos) {\n    if (this.contentEl && !this._appendOnly) {\n      const first = pos ? pos.first : this.first;\n      const calculateTranslateVal = (_first, _size) => _first * _size;\n      const setTransform = (_x = 0, _y = 0) => this.contentStyle = {\n        ...this.contentStyle,\n        ...{\n          transform: `translate3d(${_x}px, ${_y}px, 0)`\n        }\n      };\n      if (this.both) {\n        setTransform(calculateTranslateVal(first.cols, this._itemSize[1]), calculateTranslateVal(first.rows, this._itemSize[0]));\n      } else {\n        const translateVal = calculateTranslateVal(first, this._itemSize);\n        this.horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n      }\n    }\n  }\n  onScrollPositionChange(event) {\n    const target = event.target;\n    const contentPos = this.getContentPosition();\n    const calculateScrollPos = (_pos, _cpos) => _pos ? _pos > _cpos ? _pos - _cpos : _pos : 0;\n    const calculateCurrentIndex = (_pos, _size) => Math.floor(_pos / (_size || _pos));\n    const calculateTriggerIndex = (_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n      return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n    };\n    const calculateFirst = (_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) => {\n      if (_currentIndex <= _numT) return 0;else return Math.max(0, _isScrollDownOrRight ? _currentIndex < _triggerIndex ? _first : _currentIndex - _numT : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n    };\n    const calculateLast = (_currentIndex, _first, _last, _num, _numT, _isCols = false) => {\n      let lastValue = _first + _num + 2 * _numT;\n      if (_currentIndex >= _numT) {\n        lastValue += _numT + 1;\n      }\n      return this.getLast(lastValue, _isCols);\n    };\n    const scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n    const scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n    let newFirst = this.both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    let newLast = this.last;\n    let isRangeChanged = false;\n    let newScrollPos = this.lastScrollPos;\n    if (this.both) {\n      const isScrollDown = this.lastScrollPos.top <= scrollTop;\n      const isScrollRight = this.lastScrollPos.left <= scrollLeft;\n      if (!this._appendOnly || this._appendOnly && (isScrollDown || isScrollRight)) {\n        const currentIndex = {\n          rows: calculateCurrentIndex(scrollTop, this._itemSize[0]),\n          cols: calculateCurrentIndex(scrollLeft, this._itemSize[1])\n        };\n        const triggerIndex = {\n          rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n          cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n        };\n        newFirst = {\n          rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n          cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n        };\n        newLast = {\n          rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n          cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n        };\n        isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n        newScrollPos = {\n          top: scrollTop,\n          left: scrollLeft\n        };\n      }\n    } else {\n      const scrollPos = this.horizontal ? scrollLeft : scrollTop;\n      const isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n      if (!this._appendOnly || this._appendOnly && isScrollDownOrRight) {\n        const currentIndex = calculateCurrentIndex(scrollPos, this._itemSize);\n        const triggerIndex = calculateTriggerIndex(currentIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n        newFirst = calculateFirst(currentIndex, triggerIndex, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n        newLast = calculateLast(currentIndex, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n        isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n        newScrollPos = scrollPos;\n      }\n    }\n    return {\n      first: newFirst,\n      last: newLast,\n      isRangeChanged,\n      scrollPos: newScrollPos\n    };\n  }\n  onScrollChange(event) {\n    const {\n      first,\n      last,\n      isRangeChanged,\n      scrollPos\n    } = this.onScrollPositionChange(event);\n    if (isRangeChanged) {\n      const newState = {\n        first,\n        last\n      };\n      this.setContentPosition(newState);\n      this.first = first;\n      this.last = last;\n      this.lastScrollPos = scrollPos;\n      this.handleEvents('onScrollIndexChange', newState);\n      if (this._lazy && this.isPageChanged(first)) {\n        const lazyLoadState = {\n          first: this._step ? Math.min(this.getPageByFirst(first) * this._step, this.items.length - this._step) : first,\n          last: Math.min(this._step ? (this.getPageByFirst(first) + 1) * this._step : last, this.items.length)\n        };\n        const isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n        isLazyStateChanged && this.handleEvents('onLazyLoad', lazyLoadState);\n        this.lazyLoadState = lazyLoadState;\n      }\n    }\n  }\n  onContainerScroll(event) {\n    this.handleEvents('onScroll', {\n      originalEvent: event\n    });\n    if (this._delay && this.isPageChanged()) {\n      if (this.scrollTimeout) {\n        clearTimeout(this.scrollTimeout);\n      }\n      if (!this.d_loading && this.showLoader) {\n        const {\n          isRangeChanged\n        } = this.onScrollPositionChange(event);\n        const changed = isRangeChanged || (this._step ? this.isPageChanged() : false);\n        if (changed) {\n          this.d_loading = true;\n          this.cd.detectChanges();\n        }\n      }\n      this.scrollTimeout = setTimeout(() => {\n        this.onScrollChange(event);\n        if (this.d_loading && this.showLoader && (!this._lazy || this._loading === undefined)) {\n          this.d_loading = false;\n          this.page = this.getPageByFirst();\n          this.cd.detectChanges();\n        }\n      }, this._delay);\n    } else {\n      !this.d_loading && this.onScrollChange(event);\n    }\n  }\n  bindResizeListener() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!this.windowResizeListener) {\n        this.zone.runOutsideAngular(() => {\n          const window = this.document.defaultView;\n          const event = DomHandler.isTouchDevice() ? 'orientationchange' : 'resize';\n          this.windowResizeListener = this.renderer.listen(window, event, this.onWindowResize.bind(this));\n        });\n      }\n    }\n  }\n  unbindResizeListener() {\n    if (this.windowResizeListener) {\n      this.windowResizeListener();\n      this.windowResizeListener = null;\n    }\n  }\n  onWindowResize() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n    }\n    this.resizeTimeout = setTimeout(() => {\n      if (DomHandler.isVisible(this.elementViewChild?.nativeElement)) {\n        const [width, height] = [DomHandler.getWidth(this.elementViewChild?.nativeElement), DomHandler.getHeight(this.elementViewChild?.nativeElement)];\n        const [isDiffWidth, isDiffHeight] = [width !== this.defaultWidth, height !== this.defaultHeight];\n        const reinit = this.both ? isDiffWidth || isDiffHeight : this.horizontal ? isDiffWidth : this.vertical ? isDiffHeight : false;\n        reinit && this.zone.run(() => {\n          this.d_numToleratedItems = this._numToleratedItems;\n          this.defaultWidth = width;\n          this.defaultHeight = height;\n          this.defaultContentWidth = DomHandler.getWidth(this.contentEl);\n          this.defaultContentHeight = DomHandler.getHeight(this.contentEl);\n          this.init();\n        });\n      }\n    }, this._resizeDelay);\n  }\n  handleEvents(name, params) {\n    //@ts-ignore\n    return this.options && this.options[name] ? this.options[name](params) : this[name].emit(params);\n  }\n  getContentOptions() {\n    return {\n      contentStyleClass: `p-scroller-content ${this.d_loading ? 'p-scroller-loading' : ''}`,\n      items: this.loadedItems,\n      getItemOptions: index => this.getOptions(index),\n      loading: this.d_loading,\n      getLoaderOptions: (index, options) => this.getLoaderOptions(index, options),\n      itemSize: this._itemSize,\n      rows: this.loadedRows,\n      columns: this.loadedColumns,\n      spacerStyle: this.spacerStyle,\n      contentStyle: this.contentStyle,\n      vertical: this.vertical,\n      horizontal: this.horizontal,\n      both: this.both\n    };\n  }\n  getOptions(renderedIndex) {\n    const count = (this._items || []).length;\n    const index = this.both ? this.first.rows + renderedIndex : this.first + renderedIndex;\n    return {\n      index,\n      count,\n      first: index === 0,\n      last: index === count - 1,\n      even: index % 2 === 0,\n      odd: index % 2 !== 0\n    };\n  }\n  getLoaderOptions(index, extOptions) {\n    const count = this.loaderArr.length;\n    return {\n      index,\n      count,\n      first: index === 0,\n      last: index === count - 1,\n      even: index % 2 === 0,\n      odd: index % 2 !== 0,\n      ...extOptions\n    };\n  }\n  static Éµfac = function Scroller_Factory(t) {\n    return new (t || Scroller)(i0.ÉµÉµdirectiveInject(DOCUMENT), i0.ÉµÉµdirectiveInject(PLATFORM_ID), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(i0.NgZone));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: Scroller,\n    selectors: [[\"p-scroller\"]],\n    contentQueries: function Scroller_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ÉµÉµcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Scroller_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµviewQuery(_c0, 5);\n        i0.ÉµÉµviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.elementViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.contentViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-scroller-viewport\", \"p-element\"],\n    inputs: {\n      id: \"id\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      tabindex: \"tabindex\",\n      items: \"items\",\n      itemSize: \"itemSize\",\n      scrollHeight: \"scrollHeight\",\n      scrollWidth: \"scrollWidth\",\n      orientation: \"orientation\",\n      step: \"step\",\n      delay: \"delay\",\n      resizeDelay: \"resizeDelay\",\n      appendOnly: \"appendOnly\",\n      inline: \"inline\",\n      lazy: \"lazy\",\n      disabled: \"disabled\",\n      loaderDisabled: \"loaderDisabled\",\n      columns: \"columns\",\n      showSpacer: \"showSpacer\",\n      showLoader: \"showLoader\",\n      numToleratedItems: \"numToleratedItems\",\n      loading: \"loading\",\n      autoSize: \"autoSize\",\n      trackBy: \"trackBy\",\n      options: \"options\"\n    },\n    outputs: {\n      onLazyLoad: \"onLazyLoad\",\n      onScroll: \"onScroll\",\n      onScrollIndexChange: \"onScrollIndexChange\"\n    },\n    features: [i0.ÉµÉµNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 2,\n    consts: [[\"disabledContainer\", \"\"], [\"element\", \"\"], [\"buildInContent\", \"\"], [\"content\", \"\"], [\"buildInLoader\", \"\"], [\"buildInLoaderIcon\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"scroll\", \"ngStyle\", \"ngClass\"], [\"class\", \"p-scroller-spacer\", 3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"p-scroller-loader\", 3, \"ngClass\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-scroller-content\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"p-scroller-spacer\", 3, \"ngStyle\"], [1, \"p-scroller-loader\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [3, \"styleClass\"], [4, \"ngIf\"]],\n    template: function Scroller_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµprojectionDef();\n        i0.ÉµÉµtemplate(0, Scroller_ng_container_0_Template, 8, 16, \"ng-container\", 6)(1, Scroller_ng_template_1_Template, 2, 1, \"ng-template\", null, 0, i0.ÉµÉµtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const disabledContainer_r9 = i0.ÉµÉµreference(2);\n        i0.ÉµÉµproperty(\"ngIf\", !ctx._disabled)(\"ngIfElse\", disabledContainer_r9);\n      }\n    },\n    dependencies: () => [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, SpinnerIcon],\n    styles: [\"@layer primeng{p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{scale:2}.p-scroller-inline .p-scroller-content{position:static}}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(Scroller, [{\n    type: Component,\n    args: [{\n      selector: 'p-scroller',\n      template: `\n        <ng-container *ngIf=\"!_disabled; else disabledContainer\">\n            <div\n                #element\n                [attr.id]=\"_id\"\n                [attr.tabindex]=\"tabindex\"\n                [ngStyle]=\"_style\"\n                [class]=\"_styleClass\"\n                [ngClass]=\"{ 'p-scroller': true, 'p-scroller-inline': inline, 'p-both-scroll': both, 'p-horizontal-scroll': horizontal }\"\n                (scroll)=\"onContainerScroll($event)\"\n                [attr.data-pc-name]=\"'scroller'\"\n                [attr.data-pc-section]=\"'root'\"\n            >\n                <ng-container *ngIf=\"contentTemplate; else buildInContent\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: loadedItems, options: getContentOptions() }\"></ng-container>\n                </ng-container>\n                <ng-template #buildInContent>\n                    <div #content class=\"p-scroller-content\" [ngClass]=\"{ 'p-scroller-loading': d_loading }\" [ngStyle]=\"contentStyle\" [attr.data-pc-section]=\"'content'\">\n                        <ng-container *ngFor=\"let item of loadedItems; let index = index; trackBy: _trackBy || index\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item, options: getOptions(index) }\"></ng-container>\n                        </ng-container>\n                    </div>\n                </ng-template>\n                <div *ngIf=\"_showSpacer\" class=\"p-scroller-spacer\" [ngStyle]=\"spacerStyle\" [attr.data-pc-section]=\"'spacer'\"></div>\n                <div *ngIf=\"!loaderDisabled && _showLoader && d_loading\" class=\"p-scroller-loader\" [ngClass]=\"{ 'p-component-overlay': !loaderTemplate }\" [attr.data-pc-section]=\"'loader'\">\n                    <ng-container *ngIf=\"loaderTemplate; else buildInLoader\">\n                        <ng-container *ngFor=\"let item of loaderArr; let index = index\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: getLoaderOptions(index, both && { numCols: _numItemsInViewport.cols }) }\"></ng-container>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #buildInLoader>\n                        <ng-container *ngIf=\"loaderIconTemplate; else buildInLoaderIcon\">\n                            <ng-container *ngTemplateOutlet=\"loaderIconTemplate; context: { options: { styleClass: 'p-scroller-loading-icon' } }\"></ng-container>\n                        </ng-container>\n                        <ng-template #buildInLoaderIcon>\n                            <SpinnerIcon [styleClass]=\"'p-scroller-loading-icon pi-spin'\" [attr.data-pc-section]=\"'loadingIcon'\" />\n                        </ng-template>\n                    </ng-template>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #disabledContainer>\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: items, options: { rows: _items, columns: loadedColumns } }\"></ng-container>\n            </ng-container>\n        </ng-template>\n    `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-scroller-viewport p-element'\n      },\n      styles: [\"@layer primeng{p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{scale:2}.p-scroller-inline .p-scroller-content{position:static}}\\n\"]\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }], {\n    id: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    scrollWidth: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    resizeDelay: [{\n      type: Input\n    }],\n    appendOnly: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    loaderDisabled: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    showSpacer: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    numToleratedItems: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    autoSize: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    onScroll: [{\n      type: Output\n    }],\n    onScrollIndexChange: [{\n      type: Output\n    }],\n    elementViewChild: [{\n      type: ViewChild,\n      args: ['element']\n    }],\n    contentViewChild: [{\n      type: ViewChild,\n      args: ['content']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ScrollerModule {\n  static Éµfac = function ScrollerModule_Factory(t) {\n    return new (t || ScrollerModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: ScrollerModule,\n    declarations: [Scroller],\n    imports: [CommonModule, SharedModule, SpinnerIcon],\n    exports: [Scroller, SharedModule]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule, SharedModule, SpinnerIcon, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ScrollerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, SpinnerIcon],\n      exports: [Scroller, SharedModule],\n      declarations: [Scroller]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Scroller, ScrollerModule };\n", "import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { booleanAttribute, Directive, Input, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * AutoFocus manages focus on focusable element on load.\n * @group Components\n */\nclass AutoFocus {\n  host;\n  constructor(host) {\n    this.host = host;\n  }\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  focused = false;\n  ngAfterContentChecked() {\n    if (!this.focused) {\n      if (this.autofocus) {\n        setTimeout(() => {\n          const focusableElements = DomHandler.getFocusableElements(this.host.nativeElement);\n          if (focusableElements.length === 0) {\n            this.host.nativeElement.focus();\n          }\n          if (focusableElements.length > 0) {\n            focusableElements[0].focus();\n          }\n          this.focused = true;\n        });\n      }\n    }\n  }\n  static Éµfac = function AutoFocus_Factory(t) {\n    return new (t || AutoFocus)(i0.ÉµÉµdirectiveInject(i0.ElementRef));\n  };\n  static Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n    type: AutoFocus,\n    selectors: [[\"\", \"pAutoFocus\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      autofocus: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"autofocus\", \"autofocus\", booleanAttribute]\n    },\n    features: [i0.ÉµÉµInputTransformsFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AutoFocus, [{\n    type: Directive,\n    args: [{\n      selector: '[pAutoFocus]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass AutoFocusModule {\n  static Éµfac = function AutoFocusModule_Factory(t) {\n    return new (t || AutoFocusModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: AutoFocusModule,\n    declarations: [AutoFocus],\n    imports: [CommonModule],\n    exports: [AutoFocus]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AutoFocusModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [AutoFocus],\n      declarations: [AutoFocus]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoFocus, AutoFocusModule };\n", "import { animation, style, animate, trigger, transition, useAnimation } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils, ZIndexUtils } from 'primeng/utils';\nconst _c0 = [\"overlay\"];\nconst _c1 = [\"content\"];\nconst _c2 = [\"*\"];\nconst _c3 = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) => ({\n  \"p-overlay p-component\": true,\n  \"p-overlay-modal p-component-overlay p-component-overlay-enter\": a0,\n  \"p-overlay-center\": a1,\n  \"p-overlay-top\": a2,\n  \"p-overlay-top-start\": a3,\n  \"p-overlay-top-end\": a4,\n  \"p-overlay-bottom\": a5,\n  \"p-overlay-bottom-start\": a6,\n  \"p-overlay-bottom-end\": a7,\n  \"p-overlay-left\": a8,\n  \"p-overlay-left-start\": a9,\n  \"p-overlay-left-end\": a10,\n  \"p-overlay-right\": a11,\n  \"p-overlay-right-start\": a12,\n  \"p-overlay-right-end\": a13\n});\nconst _c4 = (a0, a1, a2) => ({\n  showTransitionParams: a0,\n  hideTransitionParams: a1,\n  transform: a2\n});\nconst _c5 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nconst _c6 = a0 => ({\n  mode: a0\n});\nconst _c7 = a0 => ({\n  $implicit: a0\n});\nfunction Overlay_div_0_div_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Overlay_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 3, 1);\n    i0.ÉµÉµlistener(\"click\", function Overlay_div_0_div_2_Template_div_click_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r3);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.onOverlayContentClick($event));\n    })(\"@overlayContentAnimation.start\", function Overlay_div_0_div_2_Template_div_animation_overlayContentAnimation_start_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r3);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.onOverlayContentAnimationStart($event));\n    })(\"@overlayContentAnimation.done\", function Overlay_div_0_div_2_Template_div_animation_overlayContentAnimation_done_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r3);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.onOverlayContentAnimationDone($event));\n    });\n    i0.ÉµÉµprojection(2);\n    i0.ÉµÉµtemplate(3, Overlay_div_0_div_2_ng_container_3_Template, 1, 0, \"ng-container\", 4);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµclassMap(ctx_r1.contentStyleClass);\n    i0.ÉµÉµproperty(\"ngStyle\", ctx_r1.contentStyle)(\"ngClass\", \"p-overlay-content\")(\"@overlayContentAnimation\", i0.ÉµÉµpureFunction1(11, _c5, i0.ÉµÉµpureFunction3(7, _c4, ctx_r1.showTransitionOptions, ctx_r1.hideTransitionOptions, ctx_r1.transformOptions[ctx_r1.modal ? ctx_r1.overlayResponsiveDirection : \"default\"])));\n    i0.ÉµÉµadvance(3);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(15, _c7, i0.ÉµÉµpureFunction1(13, _c6, ctx_r1.overlayMode)));\n  }\n}\nfunction Overlay_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 3, 0);\n    i0.ÉµÉµlistener(\"click\", function Overlay_div_0_Template_div_click_0_listener() {\n      i0.ÉµÉµrestoreView(_r1);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.onOverlayClick());\n    });\n    i0.ÉµÉµtemplate(2, Overlay_div_0_div_2_Template, 4, 17, \"div\", 2);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.styleClass);\n    i0.ÉµÉµproperty(\"ngStyle\", ctx_r1.style)(\"ngClass\", i0.ÉµÉµpureFunctionV(5, _c3, [ctx_r1.modal, ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"center\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"top\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"top-start\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"top-end\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"bottom\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"bottom-start\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"bottom-end\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"left\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"left-start\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"left-end\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"right\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"right-start\", ctx_r1.modal && ctx_r1.overlayResponsiveDirection === \"right-end\"]));\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.visible);\n  }\n}\nconst OVERLAY_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Overlay),\n  multi: true\n};\nconst showOverlayContentAnimation = animation([style({\n  transform: '{{transform}}',\n  opacity: 0\n}), animate('{{showTransitionParams}}')]);\nconst hideOverlayContentAnimation = animation([animate('{{hideTransitionParams}}', style({\n  transform: '{{transform}}',\n  opacity: 0\n}))]);\n/**\n * This API allows overlay components to be controlled from the PrimeNGConfig. In this way, all overlay components in the application can have the same behavior.\n * @group Components\n */\nclass Overlay {\n  document;\n  platformId;\n  el;\n  renderer;\n  config;\n  overlayService;\n  cd;\n  zone;\n  /**\n   * The visible property is an input that determines the visibility of the component.\n   * @defaultValue false\n   * @group Props\n   */\n  get visible() {\n    return this._visible;\n  }\n  set visible(value) {\n    this._visible = value;\n    if (this._visible && !this.modalVisible) {\n      this.modalVisible = true;\n    }\n  }\n  /**\n   * The mode property is an input that determines the overlay mode type or string.\n   * @defaultValue null\n   * @group Props\n   */\n  get mode() {\n    return this._mode || this.overlayOptions?.mode;\n  }\n  set mode(value) {\n    this._mode = value;\n  }\n  /**\n   * The style property is an input that determines the style object for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get style() {\n    return ObjectUtils.merge(this._style, this.modal ? this.overlayResponsiveOptions?.style : this.overlayOptions?.style);\n  }\n  set style(value) {\n    this._style = value;\n  }\n  /**\n   * The styleClass property is an input that determines the CSS class(es) for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get styleClass() {\n    return ObjectUtils.merge(this._styleClass, this.modal ? this.overlayResponsiveOptions?.styleClass : this.overlayOptions?.styleClass);\n  }\n  set styleClass(value) {\n    this._styleClass = value;\n  }\n  /**\n   * The contentStyle property is an input that determines the style object for the content of the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get contentStyle() {\n    return ObjectUtils.merge(this._contentStyle, this.modal ? this.overlayResponsiveOptions?.contentStyle : this.overlayOptions?.contentStyle);\n  }\n  set contentStyle(value) {\n    this._contentStyle = value;\n  }\n  /**\n   * The contentStyleClass property is an input that determines the CSS class(es) for the content of the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get contentStyleClass() {\n    return ObjectUtils.merge(this._contentStyleClass, this.modal ? this.overlayResponsiveOptions?.contentStyleClass : this.overlayOptions?.contentStyleClass);\n  }\n  set contentStyleClass(value) {\n    this._contentStyleClass = value;\n  }\n  /**\n   * The target property is an input that specifies the target element or selector for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get target() {\n    const value = this._target || this.overlayOptions?.target;\n    return value === undefined ? '@prev' : value;\n  }\n  set target(value) {\n    this._target = value;\n  }\n  /**\n   * Overlay can be mounted into its location, body or DOM element instance using this option.\n   * @defaultValue null\n   * @group Props\n   */\n  get appendTo() {\n    return this._appendTo || this.overlayOptions?.appendTo;\n  }\n  set appendTo(value) {\n    this._appendTo = value;\n  }\n  /**\n   * The autoZIndex determines whether to automatically manage layering. Its default value is 'false'.\n   * @defaultValue false\n   * @group Props\n   */\n  get autoZIndex() {\n    const value = this._autoZIndex || this.overlayOptions?.autoZIndex;\n    return value === undefined ? true : value;\n  }\n  set autoZIndex(value) {\n    this._autoZIndex = value;\n  }\n  /**\n   * The baseZIndex is base zIndex value to use in layering.\n   * @defaultValue null\n   * @group Props\n   */\n  get baseZIndex() {\n    const value = this._baseZIndex || this.overlayOptions?.baseZIndex;\n    return value === undefined ? 0 : value;\n  }\n  set baseZIndex(value) {\n    this._baseZIndex = value;\n  }\n  /**\n   * Transition options of the show or hide animation.\n   * @defaultValue .12s cubic-bezier(0, 0, 0.2, 1)\n   * @group Props\n   */\n  get showTransitionOptions() {\n    const value = this._showTransitionOptions || this.overlayOptions?.showTransitionOptions;\n    return value === undefined ? '.12s cubic-bezier(0, 0, 0.2, 1)' : value;\n  }\n  set showTransitionOptions(value) {\n    this._showTransitionOptions = value;\n  }\n  /**\n   * The hideTransitionOptions property is an input that determines the CSS transition options for hiding the component.\n   * @defaultValue .1s linear\n   * @group Props\n   */\n  get hideTransitionOptions() {\n    const value = this._hideTransitionOptions || this.overlayOptions?.hideTransitionOptions;\n    return value === undefined ? '.1s linear' : value;\n  }\n  set hideTransitionOptions(value) {\n    this._hideTransitionOptions = value;\n  }\n  /**\n   * The listener property is an input that specifies the listener object for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get listener() {\n    return this._listener || this.overlayOptions?.listener;\n  }\n  set listener(value) {\n    this._listener = value;\n  }\n  /**\n   * It is the option used to determine in which mode it should appear according to the given media or breakpoint.\n   * @defaultValue null\n   * @group Props\n   */\n  get responsive() {\n    return this._responsive || this.overlayOptions?.responsive;\n  }\n  set responsive(val) {\n    this._responsive = val;\n  }\n  /**\n   * The options property is an input that specifies the overlay options for the component.\n   * @defaultValue null\n   * @group Props\n   */\n  get options() {\n    return this._options;\n  }\n  set options(val) {\n    this._options = val;\n  }\n  /**\n   * This EventEmitter is used to notify changes in the visibility state of a component.\n   * @param {Boolean} boolean - Value of visibility as boolean.\n   * @group Emits\n   */\n  visibleChange = new EventEmitter();\n  /**\n   * Callback to invoke before the overlay is shown.\n   * @param {OverlayOnBeforeShowEvent} event - Custom overlay before show event.\n   * @group Emits\n   */\n  onBeforeShow = new EventEmitter();\n  /**\n   * Callback to invoke when the overlay is shown.\n   * @param {OverlayOnShowEvent} event - Custom overlay show event.\n   * @group Emits\n   */\n  onShow = new EventEmitter();\n  /**\n   * Callback to invoke before the overlay is hidden.\n   * @param {OverlayOnBeforeHideEvent} event - Custom overlay before hide event.\n   * @group Emits\n   */\n  onBeforeHide = new EventEmitter();\n  /**\n   * Callback to invoke when the overlay is hidden\n   * @param {OverlayOnHideEvent} event - Custom hide event.\n   * @group Emits\n   */\n  onHide = new EventEmitter();\n  /**\n   * Callback to invoke when the animation is started.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onAnimationStart = new EventEmitter();\n  /**\n   * Callback to invoke when the animation is done.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onAnimationDone = new EventEmitter();\n  templates;\n  overlayViewChild;\n  contentViewChild;\n  contentTemplate;\n  _visible = false;\n  _mode;\n  _style;\n  _styleClass;\n  _contentStyle;\n  _contentStyleClass;\n  _target;\n  _appendTo;\n  _autoZIndex;\n  _baseZIndex;\n  _showTransitionOptions;\n  _hideTransitionOptions;\n  _listener;\n  _responsive;\n  _options;\n  modalVisible = false;\n  isOverlayClicked = false;\n  isOverlayContentClicked = false;\n  scrollHandler;\n  documentClickListener;\n  documentResizeListener;\n  documentKeyboardListener;\n  window;\n  transformOptions = {\n    default: 'scaleY(0.8)',\n    center: 'scale(0.7)',\n    top: 'translate3d(0px, -100%, 0px)',\n    'top-start': 'translate3d(0px, -100%, 0px)',\n    'top-end': 'translate3d(0px, -100%, 0px)',\n    bottom: 'translate3d(0px, 100%, 0px)',\n    'bottom-start': 'translate3d(0px, 100%, 0px)',\n    'bottom-end': 'translate3d(0px, 100%, 0px)',\n    left: 'translate3d(-100%, 0px, 0px)',\n    'left-start': 'translate3d(-100%, 0px, 0px)',\n    'left-end': 'translate3d(-100%, 0px, 0px)',\n    right: 'translate3d(100%, 0px, 0px)',\n    'right-start': 'translate3d(100%, 0px, 0px)',\n    'right-end': 'translate3d(100%, 0px, 0px)'\n  };\n  get modal() {\n    if (isPlatformBrowser(this.platformId)) {\n      return this.mode === 'modal' || this.overlayResponsiveOptions && this.window?.matchMedia(this.overlayResponsiveOptions.media?.replace('@media', '') || `(max-width: ${this.overlayResponsiveOptions.breakpoint})`).matches;\n    }\n  }\n  get overlayMode() {\n    return this.mode || (this.modal ? 'modal' : 'overlay');\n  }\n  get overlayOptions() {\n    return {\n      ...this.config?.overlayOptions,\n      ...this.options\n    }; // TODO: Improve performance\n  }\n  get overlayResponsiveOptions() {\n    return {\n      ...this.overlayOptions?.responsive,\n      ...this.responsive\n    }; // TODO: Improve performance\n  }\n  get overlayResponsiveDirection() {\n    return this.overlayResponsiveOptions?.direction || 'center';\n  }\n  get overlayEl() {\n    return this.overlayViewChild?.nativeElement;\n  }\n  get contentEl() {\n    return this.contentViewChild?.nativeElement;\n  }\n  get targetEl() {\n    return DomHandler.getTargetElement(this.target, this.el?.nativeElement);\n  }\n  constructor(document, platformId, el, renderer, config, overlayService, cd, zone) {\n    this.document = document;\n    this.platformId = platformId;\n    this.el = el;\n    this.renderer = renderer;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.cd = cd;\n    this.zone = zone;\n    this.window = this.document.defaultView;\n  }\n  ngAfterContentInit() {\n    this.templates?.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n        // TODO: new template types may be added.\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  show(overlay, isFocus = false) {\n    this.onVisibleChange(true);\n    this.handleEvents('onShow', {\n      overlay: overlay || this.overlayEl,\n      target: this.targetEl,\n      mode: this.overlayMode\n    });\n    isFocus && DomHandler.focus(this.targetEl);\n    this.modal && DomHandler.addClass(this.document?.body, 'p-overflow-hidden');\n  }\n  hide(overlay, isFocus = false) {\n    if (!this.visible) {\n      return;\n    } else {\n      this.onVisibleChange(false);\n      this.handleEvents('onHide', {\n        overlay: overlay || this.overlayEl,\n        target: this.targetEl,\n        mode: this.overlayMode\n      });\n      isFocus && DomHandler.focus(this.targetEl);\n      this.modal && DomHandler.removeClass(this.document?.body, 'p-overflow-hidden');\n    }\n  }\n  alignOverlay() {\n    !this.modal && DomHandler.alignOverlay(this.overlayEl, this.targetEl, this.appendTo);\n  }\n  onVisibleChange(visible) {\n    this._visible = visible;\n    this.visibleChange.emit(visible);\n  }\n  onOverlayClick() {\n    this.isOverlayClicked = true;\n  }\n  onOverlayContentClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.targetEl\n    });\n    this.isOverlayContentClicked = true;\n  }\n  onOverlayContentAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.handleEvents('onBeforeShow', {\n          overlay: this.overlayEl,\n          target: this.targetEl,\n          mode: this.overlayMode\n        });\n        if (this.autoZIndex) {\n          ZIndexUtils.set(this.overlayMode, this.overlayEl, this.baseZIndex + this.config?.zIndex[this.overlayMode]);\n        }\n        DomHandler.appendOverlay(this.overlayEl, this.appendTo === 'body' ? this.document.body : this.appendTo, this.appendTo);\n        this.alignOverlay();\n        break;\n      case 'void':\n        this.handleEvents('onBeforeHide', {\n          overlay: this.overlayEl,\n          target: this.targetEl,\n          mode: this.overlayMode\n        });\n        this.modal && DomHandler.addClass(this.overlayEl, 'p-component-overlay-leave');\n        break;\n    }\n    this.handleEvents('onAnimationStart', event);\n  }\n  onOverlayContentAnimationDone(event) {\n    const container = this.overlayEl || event.element.parentElement;\n    switch (event.toState) {\n      case 'visible':\n        this.show(container, true);\n        this.bindListeners();\n        break;\n      case 'void':\n        this.hide(container, true);\n        this.unbindListeners();\n        DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n        ZIndexUtils.clear(container);\n        this.modalVisible = false;\n        this.cd.markForCheck();\n        break;\n    }\n    this.handleEvents('onAnimationDone', event);\n  }\n  handleEvents(name, params) {\n    this[name].emit(params);\n    this.options && this.options[name] && this.options[name](params);\n    this.config?.overlayOptions && (this.config?.overlayOptions)[name] && (this.config?.overlayOptions)[name](params);\n  }\n  bindListeners() {\n    this.bindScrollListener();\n    this.bindDocumentClickListener();\n    this.bindDocumentResizeListener();\n    this.bindDocumentKeyboardListener();\n  }\n  unbindListeners() {\n    this.unbindScrollListener();\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindDocumentKeyboardListener();\n  }\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.targetEl, event => {\n        const valid = this.listener ? this.listener(event, {\n          type: 'scroll',\n          mode: this.overlayMode,\n          valid: true\n        }) : true;\n        valid && this.hide(event, true);\n      });\n    }\n    this.scrollHandler.bindScrollListener();\n  }\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', event => {\n        const isTargetClicked = this.targetEl && (this.targetEl.isSameNode(event.target) || !this.isOverlayClicked && this.targetEl.contains(event.target));\n        const isOutsideClicked = !isTargetClicked && !this.isOverlayContentClicked;\n        const valid = this.listener ? this.listener(event, {\n          type: 'outside',\n          mode: this.overlayMode,\n          valid: event.which !== 3 && isOutsideClicked\n        }) : isOutsideClicked;\n        valid && this.hide(event);\n        this.isOverlayClicked = this.isOverlayContentClicked = false;\n      });\n    }\n  }\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n  bindDocumentResizeListener() {\n    if (!this.documentResizeListener) {\n      this.documentResizeListener = this.renderer.listen(this.window, 'resize', event => {\n        const valid = this.listener ? this.listener(event, {\n          type: 'resize',\n          mode: this.overlayMode,\n          valid: !DomHandler.isTouchDevice()\n        }) : !DomHandler.isTouchDevice();\n        valid && this.hide(event, true);\n      });\n    }\n  }\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      this.documentResizeListener();\n      this.documentResizeListener = null;\n    }\n  }\n  bindDocumentKeyboardListener() {\n    if (this.documentKeyboardListener) {\n      return;\n    }\n    this.zone.runOutsideAngular(() => {\n      this.documentKeyboardListener = this.renderer.listen(this.window, 'keydown', event => {\n        if (this.overlayOptions.hideOnEscape === false || event.code !== 'Escape') {\n          return;\n        }\n        const valid = this.listener ? this.listener(event, {\n          type: 'keydown',\n          mode: this.overlayMode,\n          valid: !DomHandler.isTouchDevice()\n        }) : !DomHandler.isTouchDevice();\n        if (valid) {\n          this.zone.run(() => {\n            this.hide(event, true);\n          });\n        }\n      });\n    });\n  }\n  unbindDocumentKeyboardListener() {\n    if (this.documentKeyboardListener) {\n      this.documentKeyboardListener();\n      this.documentKeyboardListener = null;\n    }\n  }\n  ngOnDestroy() {\n    this.hide(this.overlayEl, true);\n    if (this.overlayEl) {\n      DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n      ZIndexUtils.clear(this.overlayEl);\n    }\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    this.unbindListeners();\n  }\n  static Éµfac = function Overlay_Factory(t) {\n    return new (t || Overlay)(i0.ÉµÉµdirectiveInject(DOCUMENT), i0.ÉµÉµdirectiveInject(PLATFORM_ID), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i1.PrimeNGConfig), i0.ÉµÉµdirectiveInject(i1.OverlayService), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(i0.NgZone));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: Overlay,\n    selectors: [[\"p-overlay\"]],\n    contentQueries: function Overlay_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ÉµÉµcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Overlay_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµviewQuery(_c0, 5);\n        i0.ÉµÉµviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.overlayViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.contentViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      visible: \"visible\",\n      mode: \"mode\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      contentStyle: \"contentStyle\",\n      contentStyleClass: \"contentStyleClass\",\n      target: \"target\",\n      appendTo: \"appendTo\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      listener: \"listener\",\n      responsive: \"responsive\",\n      options: \"options\"\n    },\n    outputs: {\n      visibleChange: \"visibleChange\",\n      onBeforeShow: \"onBeforeShow\",\n      onShow: \"onShow\",\n      onBeforeHide: \"onBeforeHide\",\n      onHide: \"onHide\",\n      onAnimationStart: \"onAnimationStart\",\n      onAnimationDone: \"onAnimationDone\"\n    },\n    features: [i0.ÉµÉµProvidersFeature([OVERLAY_VALUE_ACCESSOR])],\n    ngContentSelectors: _c2,\n    decls: 1,\n    vars: 1,\n    consts: [[\"overlay\", \"\"], [\"content\", \"\"], [3, \"ngStyle\", \"class\", \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"click\", \"ngStyle\", \"ngClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function Overlay_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµprojectionDef();\n        i0.ÉµÉµtemplate(0, Overlay_div_0_Template, 3, 20, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.ÉµÉµproperty(\"ngIf\", ctx.modalVisible);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle],\n    styles: [\"@layer primeng{.p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('overlayContentAnimation', [transition(':enter', [useAnimation(showOverlayContentAnimation)]), transition(':leave', [useAnimation(hideOverlayContentAnimation)])])]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(Overlay, [{\n    type: Component,\n    args: [{\n      selector: 'p-overlay',\n      template: `\n        <div\n            *ngIf=\"modalVisible\"\n            #overlay\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-overlay p-component': true,\n                'p-overlay-modal p-component-overlay p-component-overlay-enter': modal,\n                'p-overlay-center': modal && overlayResponsiveDirection === 'center',\n                'p-overlay-top': modal && overlayResponsiveDirection === 'top',\n                'p-overlay-top-start': modal && overlayResponsiveDirection === 'top-start',\n                'p-overlay-top-end': modal && overlayResponsiveDirection === 'top-end',\n                'p-overlay-bottom': modal && overlayResponsiveDirection === 'bottom',\n                'p-overlay-bottom-start': modal && overlayResponsiveDirection === 'bottom-start',\n                'p-overlay-bottom-end': modal && overlayResponsiveDirection === 'bottom-end',\n                'p-overlay-left': modal && overlayResponsiveDirection === 'left',\n                'p-overlay-left-start': modal && overlayResponsiveDirection === 'left-start',\n                'p-overlay-left-end': modal && overlayResponsiveDirection === 'left-end',\n                'p-overlay-right': modal && overlayResponsiveDirection === 'right',\n                'p-overlay-right-start': modal && overlayResponsiveDirection === 'right-start',\n                'p-overlay-right-end': modal && overlayResponsiveDirection === 'right-end'\n            }\"\n            (click)=\"onOverlayClick()\"\n        >\n            <div\n                *ngIf=\"visible\"\n                #content\n                [ngStyle]=\"contentStyle\"\n                [class]=\"contentStyleClass\"\n                [ngClass]=\"'p-overlay-content'\"\n                (click)=\"onOverlayContentClick($event)\"\n                [@overlayContentAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions, transform: transformOptions[modal ? overlayResponsiveDirection : 'default'] } }\"\n                (@overlayContentAnimation.start)=\"onOverlayContentAnimationStart($event)\"\n                (@overlayContentAnimation.done)=\"onOverlayContentAnimationDone($event)\"\n            >\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate; context: { $implicit: { mode: overlayMode } }\"></ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('overlayContentAnimation', [transition(':enter', [useAnimation(showOverlayContentAnimation)]), transition(':leave', [useAnimation(hideOverlayContentAnimation)])])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [OVERLAY_VALUE_ACCESSOR],\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@layer primeng{.p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}}\\n\"]\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i1.PrimeNGConfig\n  }, {\n    type: i1.OverlayService\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }], {\n    visible: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    contentStyle: [{\n      type: Input\n    }],\n    contentStyleClass: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    listener: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    onBeforeShow: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onBeforeHide: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onAnimationStart: [{\n      type: Output\n    }],\n    onAnimationDone: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    overlayViewChild: [{\n      type: ViewChild,\n      args: ['overlay']\n    }],\n    contentViewChild: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\nclass OverlayModule {\n  static Éµfac = function OverlayModule_Factory(t) {\n    return new (t || OverlayModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: OverlayModule,\n    declarations: [Overlay],\n    imports: [CommonModule, SharedModule],\n    exports: [Overlay, SharedModule]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(OverlayModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule],\n      exports: [Overlay, SharedModule],\n      declarations: [Overlay]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OVERLAY_VALUE_ACCESSOR, Overlay, OverlayModule };\n", "import { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { TemplateRef, PLATFORM_ID, booleanAttribute, numberAttribute, Directive, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ZIndexUtils } from 'primeng/utils';\nimport * as i1 from 'primeng/api';\n\n/**\n * Tooltip directive provides advisory information for a component.\n * @group Components\n */\nclass Tooltip {\n  platformId;\n  el;\n  zone;\n  config;\n  renderer;\n  viewContainer;\n  /**\n   * Position of the tooltip.\n   * @group Props\n   */\n  tooltipPosition;\n  /**\n   * Event to show the tooltip.\n   * @group Props\n   */\n  tooltipEvent = 'hover';\n  /**\n   *  Target element to attach the overlay, valid values are \"body\", \"target\" or a local ng-F variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  appendTo;\n  /**\n   * Type of CSS position.\n   * @group Props\n   */\n  positionStyle;\n  /**\n   * Style class of the tooltip.\n   * @group Props\n   */\n  tooltipStyleClass;\n  /**\n   * Whether the z-index should be managed automatically to always go on top or have a fixed value.\n   * @group Props\n   */\n  tooltipZIndex;\n  /**\n   * By default the tooltip contents are rendered as text. Set to false to support html tags in the content.\n   * @group Props\n   */\n  escape = true;\n  /**\n   * Delay to show the tooltip in milliseconds.\n   * @group Props\n   */\n  showDelay;\n  /**\n   * Delay to hide the tooltip in milliseconds.\n   * @group Props\n   */\n  hideDelay;\n  /**\n   * Time to wait in milliseconds to hide the tooltip even it is active.\n   * @group Props\n   */\n  life;\n  /**\n   * Specifies the additional vertical offset of the tooltip from its default position.\n   * @group Props\n   */\n  positionTop;\n  /**\n   * Specifies the additional horizontal offset of the tooltip from its default position.\n   * @group Props\n   */\n  positionLeft;\n  /**\n   * Whether to hide tooltip when hovering over tooltip content.\n   * @group Props\n   */\n  autoHide = true;\n  /**\n   * Automatically adjusts the element position when there is not enough space on the selected position.\n   * @group Props\n   */\n  fitContent = true;\n  /**\n   * Whether to hide tooltip on escape key press.\n   * @group Props\n   */\n  hideOnEscape = true;\n  /**\n   * Content of the tooltip.\n   * @group Props\n   */\n  content;\n  /**\n   * When present, it specifies that the component should be disabled.\n   * @defaultValue false\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(val) {\n    this._disabled = val;\n    this.deactivate();\n  }\n  /**\n   * Specifies the tooltip configuration options for the component.\n   * @group Props\n   */\n  tooltipOptions;\n  _tooltipOptions = {\n    tooltipLabel: null,\n    tooltipPosition: 'right',\n    tooltipEvent: 'hover',\n    appendTo: 'body',\n    positionStyle: null,\n    tooltipStyleClass: null,\n    tooltipZIndex: 'auto',\n    escape: true,\n    disabled: null,\n    showDelay: null,\n    hideDelay: null,\n    positionTop: null,\n    positionLeft: null,\n    life: null,\n    autoHide: true,\n    hideOnEscape: true,\n    id: UniqueComponentId() + '_tooltip'\n  };\n  _disabled;\n  container;\n  styleClass;\n  tooltipText;\n  showTimeout;\n  hideTimeout;\n  active;\n  mouseEnterListener;\n  mouseLeaveListener;\n  containerMouseleaveListener;\n  clickListener;\n  focusListener;\n  blurListener;\n  scrollHandler;\n  resizeListener;\n  constructor(platformId, el, zone, config, renderer, viewContainer) {\n    this.platformId = platformId;\n    this.el = el;\n    this.zone = zone;\n    this.config = config;\n    this.renderer = renderer;\n    this.viewContainer = viewContainer;\n  }\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        if (this.getOption('tooltipEvent') === 'hover') {\n          this.mouseEnterListener = this.onMouseEnter.bind(this);\n          this.mouseLeaveListener = this.onMouseLeave.bind(this);\n          this.clickListener = this.onInputClick.bind(this);\n          this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n          this.el.nativeElement.addEventListener('click', this.clickListener);\n          this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n        } else if (this.getOption('tooltipEvent') === 'focus') {\n          this.focusListener = this.onFocus.bind(this);\n          this.blurListener = this.onBlur.bind(this);\n          let target = this.getTarget(this.el.nativeElement);\n          target.addEventListener('focus', this.focusListener);\n          target.addEventListener('blur', this.blurListener);\n        }\n      });\n    }\n  }\n  ngOnChanges(simpleChange) {\n    if (simpleChange.tooltipPosition) {\n      this.setOption({\n        tooltipPosition: simpleChange.tooltipPosition.currentValue\n      });\n    }\n    if (simpleChange.tooltipEvent) {\n      this.setOption({\n        tooltipEvent: simpleChange.tooltipEvent.currentValue\n      });\n    }\n    if (simpleChange.appendTo) {\n      this.setOption({\n        appendTo: simpleChange.appendTo.currentValue\n      });\n    }\n    if (simpleChange.positionStyle) {\n      this.setOption({\n        positionStyle: simpleChange.positionStyle.currentValue\n      });\n    }\n    if (simpleChange.tooltipStyleClass) {\n      this.setOption({\n        tooltipStyleClass: simpleChange.tooltipStyleClass.currentValue\n      });\n    }\n    if (simpleChange.tooltipZIndex) {\n      this.setOption({\n        tooltipZIndex: simpleChange.tooltipZIndex.currentValue\n      });\n    }\n    if (simpleChange.escape) {\n      this.setOption({\n        escape: simpleChange.escape.currentValue\n      });\n    }\n    if (simpleChange.showDelay) {\n      this.setOption({\n        showDelay: simpleChange.showDelay.currentValue\n      });\n    }\n    if (simpleChange.hideDelay) {\n      this.setOption({\n        hideDelay: simpleChange.hideDelay.currentValue\n      });\n    }\n    if (simpleChange.life) {\n      this.setOption({\n        life: simpleChange.life.currentValue\n      });\n    }\n    if (simpleChange.positionTop) {\n      this.setOption({\n        positionTop: simpleChange.positionTop.currentValue\n      });\n    }\n    if (simpleChange.positionLeft) {\n      this.setOption({\n        positionLeft: simpleChange.positionLeft.currentValue\n      });\n    }\n    if (simpleChange.disabled) {\n      this.setOption({\n        disabled: simpleChange.disabled.currentValue\n      });\n    }\n    if (simpleChange.content) {\n      this.setOption({\n        tooltipLabel: simpleChange.content.currentValue\n      });\n      if (this.active) {\n        if (simpleChange.content.currentValue) {\n          if (this.container && this.container.offsetParent) {\n            this.updateText();\n            this.align();\n          } else {\n            this.show();\n          }\n        } else {\n          this.hide();\n        }\n      }\n    }\n    if (simpleChange.autoHide) {\n      this.setOption({\n        autoHide: simpleChange.autoHide.currentValue\n      });\n    }\n    if (simpleChange.id) {\n      this.setOption({\n        id: simpleChange.id.currentValue\n      });\n    }\n    if (simpleChange.tooltipOptions) {\n      this._tooltipOptions = {\n        ...this._tooltipOptions,\n        ...simpleChange.tooltipOptions.currentValue\n      };\n      this.deactivate();\n      if (this.active) {\n        if (this.getOption('tooltipLabel')) {\n          if (this.container && this.container.offsetParent) {\n            this.updateText();\n            this.align();\n          } else {\n            this.show();\n          }\n        } else {\n          this.hide();\n        }\n      }\n    }\n  }\n  isAutoHide() {\n    return this.getOption('autoHide');\n  }\n  onMouseEnter(e) {\n    if (!this.container && !this.showTimeout) {\n      this.activate();\n    }\n  }\n  onMouseLeave(e) {\n    if (!this.isAutoHide()) {\n      const valid = DomHandler.hasClass(e.relatedTarget, 'p-tooltip') || DomHandler.hasClass(e.relatedTarget, 'p-tooltip-text') || DomHandler.hasClass(e.relatedTarget, 'p-tooltip-arrow');\n      !valid && this.deactivate();\n    } else {\n      this.deactivate();\n    }\n  }\n  onFocus(e) {\n    this.activate();\n  }\n  onBlur(e) {\n    this.deactivate();\n  }\n  onInputClick(e) {\n    this.deactivate();\n  }\n  onPressEscape() {\n    if (this.hideOnEscape) {\n      this.deactivate();\n    }\n  }\n  activate() {\n    this.active = true;\n    this.clearHideTimeout();\n    if (this.getOption('showDelay')) this.showTimeout = setTimeout(() => {\n      this.show();\n    }, this.getOption('showDelay'));else this.show();\n    if (this.getOption('life')) {\n      let duration = this.getOption('showDelay') ? this.getOption('life') + this.getOption('showDelay') : this.getOption('life');\n      this.hideTimeout = setTimeout(() => {\n        this.hide();\n      }, duration);\n    }\n  }\n  deactivate() {\n    this.active = false;\n    this.clearShowTimeout();\n    if (this.getOption('hideDelay')) {\n      this.clearHideTimeout(); //life timeout\n      this.hideTimeout = setTimeout(() => {\n        this.hide();\n      }, this.getOption('hideDelay'));\n    } else {\n      this.hide();\n    }\n  }\n  create() {\n    if (this.container) {\n      this.clearHideTimeout();\n      this.remove();\n    }\n    this.container = document.createElement('div');\n    this.container.setAttribute('id', this.getOption('id'));\n    this.container.setAttribute('role', 'tooltip');\n    let tooltipArrow = document.createElement('div');\n    tooltipArrow.className = 'p-tooltip-arrow';\n    this.container.appendChild(tooltipArrow);\n    this.tooltipText = document.createElement('div');\n    this.tooltipText.className = 'p-tooltip-text';\n    this.updateText();\n    if (this.getOption('positionStyle')) {\n      this.container.style.position = this.getOption('positionStyle');\n    }\n    this.container.appendChild(this.tooltipText);\n    if (this.getOption('appendTo') === 'body') document.body.appendChild(this.container);else if (this.getOption('appendTo') === 'target') DomHandler.appendChild(this.container, this.el.nativeElement);else DomHandler.appendChild(this.container, this.getOption('appendTo'));\n    this.container.style.display = 'inline-block';\n    if (this.fitContent) {\n      this.container.style.width = 'fit-content';\n    }\n    if (this.isAutoHide()) {\n      this.container.style.pointerEvents = 'none';\n    } else {\n      this.container.style.pointerEvents = 'unset';\n      this.bindContainerMouseleaveListener();\n    }\n  }\n  bindContainerMouseleaveListener() {\n    if (!this.containerMouseleaveListener) {\n      const targetEl = this.container ?? this.container.nativeElement;\n      this.containerMouseleaveListener = this.renderer.listen(targetEl, 'mouseleave', e => {\n        this.deactivate();\n      });\n    }\n  }\n  unbindContainerMouseleaveListener() {\n    if (this.containerMouseleaveListener) {\n      this.bindContainerMouseleaveListener();\n      this.containerMouseleaveListener = null;\n    }\n  }\n  show() {\n    if (!this.getOption('tooltipLabel') || this.getOption('disabled')) {\n      return;\n    }\n    this.create();\n    this.align();\n    DomHandler.fadeIn(this.container, 250);\n    if (this.getOption('tooltipZIndex') === 'auto') ZIndexUtils.set('tooltip', this.container, this.config.zIndex.tooltip);else this.container.style.zIndex = this.getOption('tooltipZIndex');\n    this.bindDocumentResizeListener();\n    this.bindScrollListener();\n  }\n  hide() {\n    if (this.getOption('tooltipZIndex') === 'auto') {\n      ZIndexUtils.clear(this.container);\n    }\n    this.remove();\n  }\n  updateText() {\n    const content = this.getOption('tooltipLabel');\n    if (content instanceof TemplateRef) {\n      const embeddedViewRef = this.viewContainer.createEmbeddedView(content);\n      embeddedViewRef.detectChanges();\n      embeddedViewRef.rootNodes.forEach(node => this.tooltipText.appendChild(node));\n    } else if (this.getOption('escape')) {\n      this.tooltipText.innerHTML = '';\n      this.tooltipText.appendChild(document.createTextNode(content));\n    } else {\n      this.tooltipText.innerHTML = content;\n    }\n  }\n  align() {\n    let position = this.getOption('tooltipPosition');\n    switch (position) {\n      case 'top':\n        this.alignTop();\n        if (this.isOutOfBounds()) {\n          this.alignBottom();\n          if (this.isOutOfBounds()) {\n            this.alignRight();\n            if (this.isOutOfBounds()) {\n              this.alignLeft();\n            }\n          }\n        }\n        break;\n      case 'bottom':\n        this.alignBottom();\n        if (this.isOutOfBounds()) {\n          this.alignTop();\n          if (this.isOutOfBounds()) {\n            this.alignRight();\n            if (this.isOutOfBounds()) {\n              this.alignLeft();\n            }\n          }\n        }\n        break;\n      case 'left':\n        this.alignLeft();\n        if (this.isOutOfBounds()) {\n          this.alignRight();\n          if (this.isOutOfBounds()) {\n            this.alignTop();\n            if (this.isOutOfBounds()) {\n              this.alignBottom();\n            }\n          }\n        }\n        break;\n      case 'right':\n        this.alignRight();\n        if (this.isOutOfBounds()) {\n          this.alignLeft();\n          if (this.isOutOfBounds()) {\n            this.alignTop();\n            if (this.isOutOfBounds()) {\n              this.alignBottom();\n            }\n          }\n        }\n        break;\n    }\n  }\n  getHostOffset() {\n    if (this.getOption('appendTo') === 'body' || this.getOption('appendTo') === 'target') {\n      let offset = this.el.nativeElement.getBoundingClientRect();\n      let targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n      let targetTop = offset.top + DomHandler.getWindowScrollTop();\n      return {\n        left: targetLeft,\n        top: targetTop\n      };\n    } else {\n      return {\n        left: 0,\n        top: 0\n      };\n    }\n  }\n  alignRight() {\n    this.preAlign('right');\n    let hostOffset = this.getHostOffset();\n    let left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n    let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n    this.container.style.left = left + this.getOption('positionLeft') + 'px';\n    this.container.style.top = top + this.getOption('positionTop') + 'px';\n  }\n  alignLeft() {\n    this.preAlign('left');\n    let hostOffset = this.getHostOffset();\n    let left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n    let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n    this.container.style.left = left + this.getOption('positionLeft') + 'px';\n    this.container.style.top = top + this.getOption('positionTop') + 'px';\n  }\n  alignTop() {\n    this.preAlign('top');\n    let hostOffset = this.getHostOffset();\n    let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n    let top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n    this.container.style.left = left + this.getOption('positionLeft') + 'px';\n    this.container.style.top = top + this.getOption('positionTop') + 'px';\n  }\n  alignBottom() {\n    this.preAlign('bottom');\n    let hostOffset = this.getHostOffset();\n    let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n    let top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n    this.container.style.left = left + this.getOption('positionLeft') + 'px';\n    this.container.style.top = top + this.getOption('positionTop') + 'px';\n  }\n  setOption(option) {\n    this._tooltipOptions = {\n      ...this._tooltipOptions,\n      ...option\n    };\n  }\n  getOption(option) {\n    return this._tooltipOptions[option];\n  }\n  getTarget(el) {\n    return DomHandler.hasClass(el, 'p-inputwrapper') ? DomHandler.findSingle(el, 'input') : el;\n  }\n  preAlign(position) {\n    this.container.style.left = -999 + 'px';\n    this.container.style.top = -999 + 'px';\n    let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n    this.container.className = this.getOption('tooltipStyleClass') ? defaultClassName + ' ' + this.getOption('tooltipStyleClass') : defaultClassName;\n  }\n  isOutOfBounds() {\n    let offset = this.container.getBoundingClientRect();\n    let targetTop = offset.top;\n    let targetLeft = offset.left;\n    let width = DomHandler.getOuterWidth(this.container);\n    let height = DomHandler.getOuterHeight(this.container);\n    let viewport = DomHandler.getViewport();\n    return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n  }\n  onWindowResize(e) {\n    this.hide();\n  }\n  bindDocumentResizeListener() {\n    this.zone.runOutsideAngular(() => {\n      this.resizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.resizeListener);\n    });\n  }\n  unbindDocumentResizeListener() {\n    if (this.resizeListener) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.resizeListener = null;\n    }\n  }\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n        if (this.container) {\n          this.hide();\n        }\n      });\n    }\n    this.scrollHandler.bindScrollListener();\n  }\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n  unbindEvents() {\n    if (this.getOption('tooltipEvent') === 'hover') {\n      this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n      this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n      this.el.nativeElement.removeEventListener('click', this.clickListener);\n    } else if (this.getOption('tooltipEvent') === 'focus') {\n      let target = this.getTarget(this.el.nativeElement);\n      target.removeEventListener('focus', this.focusListener);\n      target.removeEventListener('blur', this.blurListener);\n    }\n    this.unbindDocumentResizeListener();\n  }\n  remove() {\n    if (this.container && this.container.parentElement) {\n      if (this.getOption('appendTo') === 'body') document.body.removeChild(this.container);else if (this.getOption('appendTo') === 'target') this.el.nativeElement.removeChild(this.container);else DomHandler.removeChild(this.container, this.getOption('appendTo'));\n    }\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.unbindContainerMouseleaveListener();\n    this.clearTimeouts();\n    this.container = null;\n    this.scrollHandler = null;\n  }\n  clearShowTimeout() {\n    if (this.showTimeout) {\n      clearTimeout(this.showTimeout);\n      this.showTimeout = null;\n    }\n  }\n  clearHideTimeout() {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n      this.hideTimeout = null;\n    }\n  }\n  clearTimeouts() {\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    if (this.container) {\n      ZIndexUtils.clear(this.container);\n    }\n    this.remove();\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n  }\n  static Éµfac = function Tooltip_Factory(t) {\n    return new (t || Tooltip)(i0.ÉµÉµdirectiveInject(PLATFORM_ID), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.NgZone), i0.ÉµÉµdirectiveInject(i1.PrimeNGConfig), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ViewContainerRef));\n  };\n  static Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n    type: Tooltip,\n    selectors: [[\"\", \"pTooltip\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    hostBindings: function Tooltip_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"keydown.escape\", function Tooltip_keydown_escape_HostBindingHandler($event) {\n          return ctx.onPressEscape($event);\n        }, false, i0.ÉµÉµresolveDocument);\n      }\n    },\n    inputs: {\n      tooltipPosition: \"tooltipPosition\",\n      tooltipEvent: \"tooltipEvent\",\n      appendTo: \"appendTo\",\n      positionStyle: \"positionStyle\",\n      tooltipStyleClass: \"tooltipStyleClass\",\n      tooltipZIndex: \"tooltipZIndex\",\n      escape: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"escape\", \"escape\", booleanAttribute],\n      showDelay: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showDelay\", \"showDelay\", numberAttribute],\n      hideDelay: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"hideDelay\", \"hideDelay\", numberAttribute],\n      life: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"life\", \"life\", numberAttribute],\n      positionTop: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"positionTop\", \"positionTop\", numberAttribute],\n      positionLeft: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"positionLeft\", \"positionLeft\", numberAttribute],\n      autoHide: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"autoHide\", \"autoHide\", booleanAttribute],\n      fitContent: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"fitContent\", \"fitContent\", booleanAttribute],\n      hideOnEscape: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"hideOnEscape\", \"hideOnEscape\", booleanAttribute],\n      content: [i0.ÉµÉµInputFlags.None, \"pTooltip\", \"content\"],\n      disabled: [i0.ÉµÉµInputFlags.None, \"tooltipDisabled\", \"disabled\"],\n      tooltipOptions: \"tooltipOptions\"\n    },\n    features: [i0.ÉµÉµInputTransformsFeature, i0.ÉµÉµNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(Tooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[pTooltip]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.PrimeNGConfig\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ViewContainerRef\n  }], {\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipEvent: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    positionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    tooltipZIndex: [{\n      type: Input\n    }],\n    escape: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    hideDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    life: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    positionTop: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    positionLeft: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    autoHide: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    fitContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideOnEscape: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    content: [{\n      type: Input,\n      args: ['pTooltip']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['tooltipDisabled']\n    }],\n    tooltipOptions: [{\n      type: Input\n    }],\n    onPressEscape: [{\n      type: HostListener,\n      args: ['document:keydown.escape', ['$event']]\n    }]\n  });\n})();\nclass TooltipModule {\n  static Éµfac = function TooltipModule_Factory(t) {\n    return new (t || TooltipModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: TooltipModule,\n    declarations: [Tooltip],\n    imports: [CommonModule],\n    exports: [Tooltip]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Tooltip],\n      declarations: [Tooltip]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipModule };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass TimesIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµTimesIcon_BaseFactory;\n    return function TimesIcon_Factory(t) {\n      return (ÉµTimesIcon_BaseFactory || (ÉµTimesIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(TimesIcon)))(t || TimesIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: TimesIcon,\n    selectors: [[\"TimesIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\", \"fill\", \"currentColor\"]],\n    template: function TimesIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(TimesIcon, [{\n    type: Component,\n    args: [{\n      selector: 'TimesIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimesIcon };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass ChevronDownIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµChevronDownIcon_BaseFactory;\n    return function ChevronDownIcon_Factory(t) {\n      return (ÉµChevronDownIcon_BaseFactory || (ÉµChevronDownIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(ChevronDownIcon)))(t || ChevronDownIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: ChevronDownIcon,\n    selectors: [[\"ChevronDownIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z\", \"fill\", \"currentColor\"]],\n    template: function ChevronDownIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ChevronDownIcon, [{\n    type: Component,\n    args: [{\n      selector: 'ChevronDownIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChevronDownIcon };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nimport { UniqueComponentId } from 'primeng/utils';\nclass SearchIcon extends BaseIcon {\n  pathId;\n  ngOnInit() {\n    this.pathId = 'url(#' + UniqueComponentId() + ')';\n  }\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµSearchIcon_BaseFactory;\n    return function SearchIcon_Factory(t) {\n      return (ÉµSearchIcon_BaseFactory || (ÉµSearchIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(SearchIcon)))(t || SearchIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: SearchIcon,\n    selectors: [[\"SearchIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 6,\n    vars: 7,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M2.67602 11.0265C3.6661 11.688 4.83011 12.0411 6.02086 12.0411C6.81149 12.0411 7.59438 11.8854 8.32483 11.5828C8.87005 11.357 9.37808 11.0526 9.83317 10.6803L12.9769 13.8241C13.0323 13.8801 13.0983 13.9245 13.171 13.9548C13.2438 13.985 13.3219 14.0003 13.4007 14C13.4795 14.0003 13.5575 13.985 13.6303 13.9548C13.7031 13.9245 13.7691 13.8801 13.8244 13.8241C13.9367 13.7116 13.9998 13.5592 13.9998 13.4003C13.9998 13.2414 13.9367 13.089 13.8244 12.9765L10.6807 9.8328C11.053 9.37773 11.3573 8.86972 11.5831 8.32452C11.8857 7.59408 12.0414 6.81119 12.0414 6.02056C12.0414 4.8298 11.6883 3.66579 11.0268 2.67572C10.3652 1.68564 9.42494 0.913972 8.32483 0.45829C7.22472 0.00260857 6.01418 -0.116618 4.84631 0.115686C3.67844 0.34799 2.60568 0.921393 1.76369 1.76338C0.921698 2.60537 0.348296 3.67813 0.115991 4.84601C-0.116313 6.01388 0.00291375 7.22441 0.458595 8.32452C0.914277 9.42464 1.68595 10.3649 2.67602 11.0265ZM3.35565 2.0158C4.14456 1.48867 5.07206 1.20731 6.02086 1.20731C7.29317 1.20731 8.51338 1.71274 9.41304 2.6124C10.3127 3.51206 10.8181 4.73226 10.8181 6.00457C10.8181 6.95337 10.5368 7.88088 10.0096 8.66978C9.48251 9.45868 8.73328 10.0736 7.85669 10.4367C6.98011 10.7997 6.01554 10.8947 5.08496 10.7096C4.15439 10.5245 3.2996 10.0676 2.62869 9.39674C1.95778 8.72583 1.50089 7.87104 1.31579 6.94046C1.13068 6.00989 1.22568 5.04532 1.58878 4.16874C1.95187 3.29215 2.56675 2.54292 3.35565 2.0158Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n    template: function SearchIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0)(1, \"g\");\n        i0.ÉµÉµelement(2, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(3, \"defs\")(4, \"clipPath\", 2);\n        i0.ÉµÉµelement(5, \"rect\", 3);\n        i0.ÉµÉµelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµattribute(\"clip-path\", ctx.pathId);\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµproperty(\"id\", ctx.pathId);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(SearchIcon, [{\n    type: Component,\n    args: [{\n      selector: 'SearchIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <g [attr.clip-path]=\"pathId\">\n                <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M2.67602 11.0265C3.6661 11.688 4.83011 12.0411 6.02086 12.0411C6.81149 12.0411 7.59438 11.8854 8.32483 11.5828C8.87005 11.357 9.37808 11.0526 9.83317 10.6803L12.9769 13.8241C13.0323 13.8801 13.0983 13.9245 13.171 13.9548C13.2438 13.985 13.3219 14.0003 13.4007 14C13.4795 14.0003 13.5575 13.985 13.6303 13.9548C13.7031 13.9245 13.7691 13.8801 13.8244 13.8241C13.9367 13.7116 13.9998 13.5592 13.9998 13.4003C13.9998 13.2414 13.9367 13.089 13.8244 12.9765L10.6807 9.8328C11.053 9.37773 11.3573 8.86972 11.5831 8.32452C11.8857 7.59408 12.0414 6.81119 12.0414 6.02056C12.0414 4.8298 11.6883 3.66579 11.0268 2.67572C10.3652 1.68564 9.42494 0.913972 8.32483 0.45829C7.22472 0.00260857 6.01418 -0.116618 4.84631 0.115686C3.67844 0.34799 2.60568 0.921393 1.76369 1.76338C0.921698 2.60537 0.348296 3.67813 0.115991 4.84601C-0.116313 6.01388 0.00291375 7.22441 0.458595 8.32452C0.914277 9.42464 1.68595 10.3649 2.67602 11.0265ZM3.35565 2.0158C4.14456 1.48867 5.07206 1.20731 6.02086 1.20731C7.29317 1.20731 8.51338 1.71274 9.41304 2.6124C10.3127 3.51206 10.8181 4.73226 10.8181 6.00457C10.8181 6.95337 10.5368 7.88088 10.0096 8.66978C9.48251 9.45868 8.73328 10.0736 7.85669 10.4367C6.98011 10.7997 6.01554 10.8947 5.08496 10.7096C4.15439 10.5245 3.2996 10.0676 2.62869 9.39674C1.95778 8.72583 1.50089 7.87104 1.31579 6.94046C1.13068 6.00989 1.22568 5.04532 1.58878 4.16874C1.95187 3.29215 2.56675 2.54292 3.35565 2.0158Z\"\n                    fill=\"currentColor\"\n                />\n            </g>\n            <defs>\n                <clipPath [id]=\"pathId\">\n                    <rect width=\"14\" height=\"14\" fill=\"white\" />\n                </clipPath>\n            </defs>\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SearchIcon };\n", "import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, booleanAttribute, numberAttribute, Component, Input, Output, signal, computed, effect, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { SearchIcon } from 'primeng/icons/search';\nconst _c0 = a0 => ({\n  height: a0\n});\nconst _c1 = (a0, a1, a2) => ({\n  \"p-dropdown-item\": true,\n  \"p-highlight\": a0,\n  \"p-disabled\": a1,\n  \"p-focus\": a2\n});\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nfunction DropdownItem_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    const ctx_r0 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate((tmp_1_0 = ctx_r0.label) !== null && tmp_1_0 !== undefined ? tmp_1_0 : \"empty\");\n  }\n}\nfunction DropdownItem_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nconst _c3 = [\"container\"];\nconst _c4 = [\"filter\"];\nconst _c5 = [\"focusInput\"];\nconst _c6 = [\"editableInput\"];\nconst _c7 = [\"items\"];\nconst _c8 = [\"scroller\"];\nconst _c9 = [\"overlay\"];\nconst _c10 = [\"firstHiddenFocusableEl\"];\nconst _c11 = [\"lastHiddenFocusableEl\"];\nconst _c12 = a0 => ({\n  options: a0\n});\nconst _c13 = (a0, a1) => ({\n  $implicit: a0,\n  options: a1\n});\nconst _c14 = () => ({});\nfunction Dropdown_span_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate(ctx_r2.label() === \"p-emptylabel\" ? \"\\xA0\" : ctx_r2.label());\n  }\n}\nfunction Dropdown_span_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0, 25);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(2, _c2, ctx_r2.selectedOption));\n  }\n}\nfunction Dropdown_span_2_ng_template_4_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate(ctx_r2.label() === \"p-emptylabel\" ? \"\\xA0\" : ctx_r2.placeholder());\n  }\n}\nfunction Dropdown_span_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Dropdown_span_2_ng_template_4_span_0_Template, 2, 1, \"span\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.displayPlaceholder());\n  }\n}\nfunction Dropdown_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"span\", 22, 2);\n    i0.ÉµÉµlistener(\"focus\", function Dropdown_span_2_Template_span_focus_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r2);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onInputFocus($event));\n    })(\"blur\", function Dropdown_span_2_Template_span_blur_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r2);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onInputBlur($event));\n    })(\"keydown\", function Dropdown_span_2_Template_span_keydown_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r2);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onKeyDown($event));\n    });\n    i0.ÉµÉµtemplate(2, Dropdown_span_2_ng_container_2_Template, 2, 1, \"ng-container\", 23)(3, Dropdown_span_2_ng_container_3_Template, 1, 4, \"ng-container\", 24)(4, Dropdown_span_2_ng_template_4_Template, 1, 1, \"ng-template\", null, 3, i0.ÉµÉµtemplateRefExtractor);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_16_0;\n    const defaultPlaceholder_r4 = i0.ÉµÉµreference(5);\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµproperty(\"ngClass\", ctx_r2.inputClass)(\"pTooltip\", ctx_r2.tooltip)(\"tooltipPosition\", ctx_r2.tooltipPosition)(\"positionStyle\", ctx_r2.tooltipPositionStyle)(\"tooltipStyleClass\", ctx_r2.tooltipStyleClass)(\"autofocus\", ctx_r2.autofocus);\n    i0.ÉµÉµattribute(\"aria-disabled\", ctx_r2.disabled)(\"id\", ctx_r2.inputId)(\"aria-label\", ctx_r2.ariaLabel || (ctx_r2.label() === \"p-emptylabel\" ? undefined : ctx_r2.label()))(\"aria-labelledby\", ctx_r2.ariaLabelledBy)(\"aria-haspopup\", \"listbox\")(\"aria-expanded\", (tmp_16_0 = ctx_r2.overlayVisible) !== null && tmp_16_0 !== undefined ? tmp_16_0 : false)(\"aria-controls\", ctx_r2.overlayVisible ? ctx_r2.id + \"_list\" : null)(\"tabindex\", !ctx_r2.disabled ? ctx_r2.tabindex : -1)(\"aria-activedescendant\", ctx_r2.focused ? ctx_r2.focusedOptionId : undefined)(\"aria-required\", ctx_r2.required)(\"required\", ctx_r2.required);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.selectedItemTemplate)(\"ngIfElse\", defaultPlaceholder_r4);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.selectedItemTemplate && ctx_r2.selectedOption);\n  }\n}\nfunction Dropdown_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"input\", 26, 4);\n    i0.ÉµÉµlistener(\"input\", function Dropdown_input_3_Template_input_input_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onEditableInput($event));\n    })(\"keydown\", function Dropdown_input_3_Template_input_keydown_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onKeyDown($event));\n    })(\"focus\", function Dropdown_input_3_Template_input_focus_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onInputFocus($event));\n    })(\"blur\", function Dropdown_input_3_Template_input_blur_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onInputBlur($event));\n    });\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµproperty(\"ngClass\", ctx_r2.inputClass)(\"disabled\", ctx_r2.disabled);\n    i0.ÉµÉµattribute(\"maxlength\", ctx_r2.maxlength)(\"placeholder\", ctx_r2.modelValue() === undefined || ctx_r2.modelValue() === null ? ctx_r2.placeholder() : undefined)(\"aria-label\", ctx_r2.ariaLabel || (ctx_r2.label() === \"p-emptylabel\" ? undefined : ctx_r2.label()));\n  }\n}\nfunction Dropdown_ng_container_4_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"TimesIcon\", 29);\n    i0.ÉµÉµlistener(\"click\", function Dropdown_ng_container_4_TimesIcon_1_Template_TimesIcon_click_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r2 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r2.clear($event));\n    });\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-dropdown-clear-icon\");\n    i0.ÉµÉµattribute(\"data-pc-section\", \"clearicon\");\n  }\n}\nfunction Dropdown_ng_container_4_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_container_4_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Dropdown_ng_container_4_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_container_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"span\", 30);\n    i0.ÉµÉµlistener(\"click\", function Dropdown_ng_container_4_span_2_Template_span_click_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r7);\n      const ctx_r2 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r2.clear($event));\n    });\n    i0.ÉµÉµtemplate(1, Dropdown_ng_container_4_span_2_1_Template, 1, 0, null, 31);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"clearicon\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_container_4_TimesIcon_1_Template, 1, 2, \"TimesIcon\", 27)(2, Dropdown_ng_container_4_span_2_Template, 2, 2, \"span\", 28);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.clearIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"span\", 34);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngClass\", ctx_r2.dropdownIcon);\n  }\n}\nfunction Dropdown_ng_container_6_ChevronDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"ChevronDownIcon\", 35);\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-dropdown-trigger-icon\");\n  }\n}\nfunction Dropdown_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_container_6_span_1_Template, 1, 1, \"span\", 32)(2, Dropdown_ng_container_6_ChevronDownIcon_2_Template, 1, 1, \"ChevronDownIcon\", 33);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.dropdownIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.dropdownIcon);\n  }\n}\nfunction Dropdown_span_7_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_span_7_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Dropdown_span_7_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 36);\n    i0.ÉµÉµtemplate(1, Dropdown_span_7_1_Template, 1, 0, null, 31);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.dropdownIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_template_10_div_4_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 43);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.filterTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(2, _c12, ctx_r2.filterOptions));\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_SearchIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"SearchIcon\", 35);\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-dropdown-filter-icon\");\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 47);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_template_10_div_4_ng_template_2_span_4_1_Template, 1, 0, null, 31);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 44)(1, \"input\", 45, 9);\n    i0.ÉµÉµlistener(\"input\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_input_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r10);\n      const ctx_r2 = i0.ÉµÉµnextContext(3);\n      return i0.ÉµÉµresetView(ctx_r2.onFilterInputChange($event));\n    })(\"keydown\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_keydown_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r10);\n      const ctx_r2 = i0.ÉµÉµnextContext(3);\n      return i0.ÉµÉµresetView(ctx_r2.onFilterKeyDown($event));\n    })(\"blur\", function Dropdown_ng_template_10_div_4_ng_template_2_Template_input_blur_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r10);\n      const ctx_r2 = i0.ÉµÉµnextContext(3);\n      return i0.ÉµÉµresetView(ctx_r2.onFilterBlur($event));\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtemplate(3, Dropdown_ng_template_10_div_4_ng_template_2_SearchIcon_3_Template, 1, 1, \"SearchIcon\", 33)(4, Dropdown_ng_template_10_div_4_ng_template_2_span_4_Template, 2, 1, \"span\", 46);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"value\", ctx_r2._filterValue() || \"\");\n    i0.ÉµÉµattribute(\"placeholder\", ctx_r2.filterPlaceholder)(\"aria-owns\", ctx_r2.id + \"_list\")(\"aria-label\", ctx_r2.ariaFilterLabel)(\"aria-activedescendant\", ctx_r2.focusedOptionId);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.filterIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 42);\n    i0.ÉµÉµlistener(\"click\", function Dropdown_ng_template_10_div_4_Template_div_click_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r9);\n      return i0.ÉµÉµresetView($event.stopPropagation());\n    });\n    i0.ÉµÉµtemplate(1, Dropdown_ng_template_10_div_4_ng_container_1_Template, 2, 4, \"ng-container\", 23)(2, Dropdown_ng_template_10_div_4_ng_template_2_Template, 5, 7, \"ng-template\", null, 8, i0.ÉµÉµtemplateRefExtractor);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const builtInFilterElement_r11 = i0.ÉµÉµreference(3);\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.filterTemplate)(\"ngIfElse\", builtInFilterElement_r11);\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Dropdown_ng_template_10_p_scroller_6_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 43);\n  }\n  if (rf & 2) {\n    const items_r13 = ctx.$implicit;\n    const scrollerOptions_r14 = ctx.options;\n    i0.ÉµÉµnextContext(2);\n    const buildInItems_r15 = i0.ÉµÉµreference(9);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", buildInItems_r15)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction2(2, _c13, items_r13, scrollerOptions_r14));\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 43);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r16 = ctx.options;\n    const ctx_r2 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.loaderTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(2, _c12, scrollerOptions_r16));\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_template_10_p_scroller_6_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 49);\n    i0.ÉµÉµelementContainerEnd();\n  }\n}\nfunction Dropdown_ng_template_10_p_scroller_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"p-scroller\", 48, 10);\n    i0.ÉµÉµlistener(\"onLazyLoad\", function Dropdown_ng_template_10_p_scroller_6_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r12);\n      const ctx_r2 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r2.onLazyLoad.emit($event));\n    });\n    i0.ÉµÉµtemplate(2, Dropdown_ng_template_10_p_scroller_6_ng_template_2_Template, 1, 5, \"ng-template\", 21)(3, Dropdown_ng_template_10_p_scroller_6_ng_container_3_Template, 2, 0, \"ng-container\", 17);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµstyleMap(i0.ÉµÉµpureFunction1(8, _c0, ctx_r2.scrollHeight));\n    i0.ÉµÉµproperty(\"items\", ctx_r2.visibleOptions())(\"itemSize\", ctx_r2.virtualScrollItemSize || ctx_r2._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r2.lazy)(\"options\", ctx_r2.virtualScrollOptions);\n    i0.ÉµÉµadvance(3);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.loaderTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_template_10_ng_container_7_ng_container_1_Template, 1, 0, \"ng-container\", 43);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ÉµÉµnextContext();\n    const buildInItems_r15 = i0.ÉµÉµreference(9);\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", buildInItems_r15)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction2(3, _c13, ctx_r2.visibleOptions(), i0.ÉµÉµpureFunction0(2, _c14)));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const option_r17 = i0.ÉµÉµnextContext(2).$implicit;\n    const ctx_r2 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate(ctx_r2.getOptionGroupLabel(option_r17.optionGroup));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµelementStart(1, \"li\", 53);\n    i0.ÉµÉµtemplate(2, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_span_2_Template, 2, 1, \"span\", 17)(3, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template, 1, 0, \"ng-container\", 43);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ÉµÉµnextContext();\n    const option_r17 = ctx_r17.$implicit;\n    const i_r19 = ctx_r17.index;\n    const scrollerOptions_r20 = i0.ÉµÉµnextContext().options;\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngStyle\", i0.ÉµÉµpureFunction1(5, _c0, scrollerOptions_r20.itemSize + \"px\"));\n    i0.ÉµÉµattribute(\"id\", ctx_r2.id + \"_\" + ctx_r2.getOptionIndex(i_r19, scrollerOptions_r20));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.groupTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.groupTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(7, _c2, option_r17.optionGroup));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµelementStart(1, \"p-dropdownItem\", 54);\n    i0.ÉµÉµlistener(\"onClick\", function Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template_p_dropdownItem_onClick_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r21);\n      const option_r17 = i0.ÉµÉµnextContext().$implicit;\n      const ctx_r2 = i0.ÉµÉµnextContext(3);\n      return i0.ÉµÉµresetView(ctx_r2.onOptionSelect($event, option_r17));\n    })(\"onMouseEnter\", function Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template_p_dropdownItem_onMouseEnter_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r21);\n      const i_r19 = i0.ÉµÉµnextContext().index;\n      const scrollerOptions_r20 = i0.ÉµÉµnextContext().options;\n      const ctx_r2 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r2.onOptionMouseEnter($event, ctx_r2.getOptionIndex(i_r19, scrollerOptions_r20)));\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ÉµÉµnextContext();\n    const option_r17 = ctx_r17.$implicit;\n    const i_r19 = ctx_r17.index;\n    const scrollerOptions_r20 = i0.ÉµÉµnextContext().options;\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"id\", ctx_r2.id + \"_\" + ctx_r2.getOptionIndex(i_r19, scrollerOptions_r20))(\"option\", option_r17)(\"selected\", ctx_r2.isSelected(option_r17))(\"label\", ctx_r2.getOptionLabel(option_r17))(\"disabled\", ctx_r2.isOptionDisabled(option_r17))(\"template\", ctx_r2.itemTemplate)(\"focused\", ctx_r2.focusedOptionIndex() === ctx_r2.getOptionIndex(i_r19, scrollerOptions_r20))(\"ariaPosInset\", ctx_r2.getAriaPosInset(ctx_r2.getOptionIndex(i_r19, scrollerOptions_r20)))(\"ariaSetSize\", ctx_r2.ariaSetSize);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_0_Template, 4, 9, \"ng-container\", 17)(1, Dropdown_ng_template_10_ng_template_8_ng_template_2_ng_container_1_Template, 2, 9, \"ng-container\", 17);\n  }\n  if (rf & 2) {\n    const option_r17 = ctx.$implicit;\n    const ctx_r2 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.isOptionGroup(option_r17));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.isOptionGroup(option_r17));\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r2.emptyFilterMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0, null, 12);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"li\", 55);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_template_10_ng_template_8_li_3_ng_container_1_Template, 2, 1, \"ng-container\", 23)(2, Dropdown_ng_template_10_ng_template_8_li_3_ng_container_2_Template, 2, 0, \"ng-container\", 31);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r20 = i0.ÉµÉµnextContext().options;\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngStyle\", i0.ÉµÉµpureFunction1(4, _c0, scrollerOptions_r20.itemSize + \"px\"));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.emptyFilterTemplate && !ctx_r2.emptyTemplate)(\"ngIfElse\", ctx_r2.emptyFilter);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.emptyFilterTemplate || ctx_r2.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r2.emptyMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0, null, 13);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"li\", 55);\n    i0.ÉµÉµtemplate(1, Dropdown_ng_template_10_ng_template_8_li_4_ng_container_1_Template, 2, 1, \"ng-container\", 23)(2, Dropdown_ng_template_10_ng_template_8_li_4_ng_container_2_Template, 2, 0, \"ng-container\", 31);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r20 = i0.ÉµÉµnextContext().options;\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngStyle\", i0.ÉµÉµpureFunction1(4, _c0, scrollerOptions_r20.itemSize + \"px\"));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.emptyTemplate)(\"ngIfElse\", ctx_r2.empty);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_10_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"ul\", 50, 11);\n    i0.ÉµÉµtemplate(2, Dropdown_ng_template_10_ng_template_8_ng_template_2_Template, 2, 2, \"ng-template\", 51)(3, Dropdown_ng_template_10_ng_template_8_li_3_Template, 3, 6, \"li\", 52)(4, Dropdown_ng_template_10_ng_template_8_li_4_Template, 3, 6, \"li\", 52);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const items_r22 = ctx.$implicit;\n    const scrollerOptions_r20 = ctx.options;\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµstyleMap(scrollerOptions_r20.contentStyle);\n    i0.ÉµÉµproperty(\"ngClass\", scrollerOptions_r20.contentStyleClass);\n    i0.ÉµÉµattribute(\"id\", ctx_r2.id + \"_list\")(\"aria-label\", ctx_r2.listLabel);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngForOf\", items_r22);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.filterValue && ctx_r2.isEmpty());\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.filterValue && ctx_r2.isEmpty());\n  }\n}\nfunction Dropdown_ng_template_10_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 37)(1, \"span\", 38, 5);\n    i0.ÉµÉµlistener(\"focus\", function Dropdown_ng_template_10_Template_span_focus_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r8);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onFirstHiddenFocus($event));\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtemplate(3, Dropdown_ng_template_10_ng_container_3_Template, 1, 0, \"ng-container\", 31)(4, Dropdown_ng_template_10_div_4_Template, 4, 2, \"div\", 39);\n    i0.ÉµÉµelementStart(5, \"div\", 40);\n    i0.ÉµÉµtemplate(6, Dropdown_ng_template_10_p_scroller_6_Template, 4, 10, \"p-scroller\", 41)(7, Dropdown_ng_template_10_ng_container_7_Template, 2, 6, \"ng-container\", 17)(8, Dropdown_ng_template_10_ng_template_8_Template, 5, 8, \"ng-template\", null, 6, i0.ÉµÉµtemplateRefExtractor);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtemplate(10, Dropdown_ng_template_10_ng_container_10_Template, 1, 0, \"ng-container\", 31);\n    i0.ÉµÉµelementStart(11, \"span\", 38, 7);\n    i0.ÉµÉµlistener(\"focus\", function Dropdown_ng_template_10_Template_span_focus_11_listener($event) {\n      i0.ÉµÉµrestoreView(_r8);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onLastHiddenFocus($event));\n    });\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r2.panelStyleClass);\n    i0.ÉµÉµproperty(\"ngClass\", \"p-dropdown-panel p-component\")(\"ngStyle\", ctx_r2.panelStyle);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµattribute(\"tabindex\", 0)(\"data-p-hidden-accessible\", true)(\"data-p-hidden-focusable\", true);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.headerTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.filter);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµstyleProp(\"max-height\", ctx_r2.virtualScroll ? \"auto\" : ctx_r2.scrollHeight || \"auto\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.virtualScroll);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.virtualScroll);\n    i0.ÉµÉµadvance(3);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.footerTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµattribute(\"tabindex\", 0)(\"data-p-hidden-accessible\", true)(\"data-p-hidden-focusable\", true);\n  }\n}\nconst DROPDOWN_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Dropdown),\n  multi: true\n};\nclass DropdownItem {\n  id;\n  option;\n  selected;\n  focused;\n  label;\n  disabled;\n  visible;\n  itemSize;\n  ariaPosInset;\n  ariaSetSize;\n  template;\n  onClick = new EventEmitter();\n  onMouseEnter = new EventEmitter();\n  ngOnInit() {}\n  onOptionClick(event) {\n    this.onClick.emit(event);\n  }\n  onOptionMouseEnter(event) {\n    this.onMouseEnter.emit(event);\n  }\n  static Éµfac = function DropdownItem_Factory(t) {\n    return new (t || DropdownItem)();\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: DropdownItem,\n    selectors: [[\"p-dropdownItem\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      id: \"id\",\n      option: \"option\",\n      selected: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"selected\", \"selected\", booleanAttribute],\n      focused: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"focused\", \"focused\", booleanAttribute],\n      label: \"label\",\n      disabled: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n      visible: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"visible\", \"visible\", booleanAttribute],\n      itemSize: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"itemSize\", \"itemSize\", numberAttribute],\n      ariaPosInset: \"ariaPosInset\",\n      ariaSetSize: \"ariaSetSize\",\n      template: \"template\"\n    },\n    outputs: {\n      onClick: \"onClick\",\n      onMouseEnter: \"onMouseEnter\"\n    },\n    features: [i0.ÉµÉµInputTransformsFeature],\n    decls: 3,\n    vars: 21,\n    consts: [[\"role\", \"option\", \"pRipple\", \"\", 3, \"click\", \"mouseenter\", \"id\", \"ngStyle\", \"ngClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function DropdownItem_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"li\", 0);\n        i0.ÉµÉµlistener(\"click\", function DropdownItem_Template_li_click_0_listener($event) {\n          return ctx.onOptionClick($event);\n        })(\"mouseenter\", function DropdownItem_Template_li_mouseenter_0_listener($event) {\n          return ctx.onOptionMouseEnter($event);\n        });\n        i0.ÉµÉµtemplate(1, DropdownItem_span_1_Template, 2, 1, \"span\", 1)(2, DropdownItem_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµproperty(\"id\", ctx.id)(\"ngStyle\", i0.ÉµÉµpureFunction1(13, _c0, ctx.itemSize + \"px\"))(\"ngClass\", i0.ÉµÉµpureFunction3(15, _c1, ctx.selected, ctx.disabled, ctx.focused));\n        i0.ÉµÉµattribute(\"aria-label\", ctx.label)(\"aria-setsize\", ctx.ariaSetSize)(\"aria-posinset\", ctx.ariaPosInset)(\"aria-selected\", ctx.selected)(\"data-p-focused\", ctx.focused)(\"data-p-highlight\", ctx.selected)(\"data-p-disabled\", ctx.disabled);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", !ctx.template);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(19, _c2, ctx.option));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(DropdownItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdownItem',\n      template: `\n        <li\n            [id]=\"id\"\n            (click)=\"onOptionClick($event)\"\n            (mouseenter)=\"onOptionMouseEnter($event)\"\n            role=\"option\"\n            pRipple\n            [attr.aria-label]=\"label\"\n            [attr.aria-setsize]=\"ariaSetSize\"\n            [attr.aria-posinset]=\"ariaPosInset\"\n            [attr.aria-selected]=\"selected\"\n            [attr.data-p-focused]=\"focused\"\n            [attr.data-p-highlight]=\"selected\"\n            [attr.data-p-disabled]=\"disabled\"\n            [ngStyle]=\"{ height: itemSize + 'px' }\"\n            [ngClass]=\"{ 'p-dropdown-item': true, 'p-highlight': selected, 'p-disabled': disabled, 'p-focus': focused }\"\n        >\n            <span *ngIf=\"!template\">{{ label ?? 'empty' }}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: { $implicit: option }\"></ng-container>\n        </li>\n    `,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    option: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    focused: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    visible: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    itemSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    ariaPosInset: [{\n      type: Input\n    }],\n    ariaSetSize: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Dropdown also known as Select, is used to choose an item from a collection of options.\n * @group Components\n */\nclass Dropdown {\n  el;\n  renderer;\n  cd;\n  zone;\n  filterService;\n  config;\n  /**\n   * Unique identifier of the component\n   * @group Props\n   */\n  id;\n  /**\n   * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   * @group Props\n   */\n  scrollHeight = '200px';\n  /**\n   * When specified, displays an input field to filter the items on keyup.\n   * @group Props\n   */\n  filter;\n  /**\n   * Name of the input element.\n   * @group Props\n   */\n  name;\n  /**\n   * Inline style of the element.\n   * @group Props\n   */\n  style;\n  /**\n   * Inline style of the overlay panel element.\n   * @group Props\n   */\n  panelStyle;\n  /**\n   * Style class of the element.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Style class of the overlay panel element.\n   * @group Props\n   */\n  panelStyleClass;\n  /**\n   * When present, it specifies that the component cannot be edited.\n   * @group Props\n   */\n  readonly;\n  /**\n   * When present, it specifies that an input field must be filled out before submitting the form.\n   * @group Props\n   */\n  required;\n  /**\n   * When present, custom value instead of predefined options can be entered using the editable input field.\n   * @group Props\n   */\n  editable;\n  /**\n   * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  appendTo;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex = 0;\n  /**\n   * Default text to display when no option is selected.\n   * @group Props\n   */\n  set placeholder(val) {\n    this._placeholder.set(val);\n  }\n  get placeholder() {\n    return this._placeholder.asReadonly();\n  }\n  /**\n   * Placeholder text to show when filter input is empty.\n   * @group Props\n   */\n  filterPlaceholder;\n  /**\n   * Locale to use in filtering. The default locale is the host environment's current locale.\n   * @group Props\n   */\n  filterLocale;\n  /**\n   * Identifier of the accessible input element.\n   * @group Props\n   */\n  inputId;\n  /**\n   * A property to uniquely identify a value in options.\n   * @group Props\n   */\n  dataKey;\n  /**\n   * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n   * @group Props\n   */\n  filterBy;\n  /**\n   * Fields used when filtering the options, defaults to optionLabel.\n   * @group Props\n   */\n  filterFields;\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Clears the filter value when hiding the dropdown.\n   * @group Props\n   */\n  resetFilterOnHide = false;\n  /**\n   * Icon class of the dropdown icon.\n   * @group Props\n   */\n  dropdownIcon;\n  /**\n   * Name of the label field of an option.\n   * @group Props\n   */\n  optionLabel;\n  /**\n   * Name of the value field of an option.\n   * @group Props\n   */\n  optionValue;\n  /**\n   * Name of the disabled field of an option.\n   * @group Props\n   */\n  optionDisabled;\n  /**\n   * Name of the label field of an option group.\n   * @group Props\n   */\n  optionGroupLabel = 'label';\n  /**\n   * Name of the options field of an option group.\n   * @group Props\n   */\n  optionGroupChildren = 'items';\n  /**\n   * Whether to display the first item as the label if no placeholder is defined and value is null.\n   * @deprecated since v17.3.0, set initial value by model instead.\n   * @group Props\n   */\n  autoDisplayFirst = true;\n  /**\n   * Whether to display options as grouped when nested options are provided.\n   * @group Props\n   */\n  group;\n  /**\n   * When enabled, a clear icon is displayed to clear the value.\n   * @group Props\n   */\n  showClear;\n  /**\n   * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n   * @group Props\n   */\n  emptyFilterMessage = '';\n  /**\n   * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n   * @group Props\n   */\n  emptyMessage = '';\n  /**\n   * Defines if data is loaded and interacted with in lazy manner.\n   * @group Props\n   */\n  lazy = false;\n  /**\n   * Whether the data should be loaded on demand during scroll.\n   * @group Props\n   */\n  virtualScroll;\n  /**\n   * Height of an item in the list for VirtualScrolling.\n   * @group Props\n   */\n  virtualScrollItemSize;\n  /**\n   * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n   * @group Props\n   */\n  virtualScrollOptions;\n  /**\n   * Whether to use overlay API feature. The properties of overlay API can be used like an object in it.\n   * @group Props\n   */\n  overlayOptions;\n  /**\n   * Defines a string that labels the filter input.\n   * @group Props\n   */\n  ariaFilterLabel;\n  /**\n   * Used to define a aria label attribute the current element.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Defines how the items are filtered.\n   * @group Props\n   */\n  filterMatchMode = 'contains';\n  /**\n   * Maximum number of character allows in the editable input field.\n   * @group Props\n   */\n  maxlength;\n  /**\n   * Advisory information to display in a tooltip on hover.\n   * @group Props\n   */\n  tooltip = '';\n  /**\n   * Position of the tooltip.\n   * @group Props\n   */\n  tooltipPosition = 'right';\n  /**\n   * Type of CSS position.\n   * @group Props\n   */\n  tooltipPositionStyle = 'absolute';\n  /**\n   * Style class of the tooltip.\n   * @group Props\n   */\n  tooltipStyleClass;\n  /**\n   * Fields used when filtering the options, defaults to optionLabel.\n   * @group Props\n   */\n  focusOnHover = false;\n  /**\n   * Determines if the option will be selected on focus.\n   * @group Props\n   */\n  selectOnFocus = false;\n  /**\n   * Whether to focus on the first visible or selected element when the overlay panel is shown.\n   * @group Props\n   */\n  autoOptionFocus = true;\n  /**\n   * Applies focus to the filter element when the overlay is shown.\n   * @group Props\n   */\n  autofocusFilter = true;\n  /**\n   * When present, it specifies that the component should be disabled.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(_disabled) {\n    if (_disabled) {\n      this.focused = false;\n      if (this.overlayVisible) this.hide();\n    }\n    this._disabled = _disabled;\n    if (!this.cd.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n  /**\n   * Item size of item to be virtual scrolled.\n   * @group Props\n   * @deprecated use virtualScrollItemSize property instead.\n   */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(val) {\n    this._itemSize = val;\n    console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n  }\n  _itemSize;\n  /**\n   * Whether to automatically manage layering.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get autoZIndex() {\n    return this._autoZIndex;\n  }\n  set autoZIndex(val) {\n    this._autoZIndex = val;\n    console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _autoZIndex;\n  /**\n   * Base zIndex value to use in layering.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get baseZIndex() {\n    return this._baseZIndex;\n  }\n  set baseZIndex(val) {\n    this._baseZIndex = val;\n    console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _baseZIndex;\n  /**\n   * Transition options of the show animation.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get showTransitionOptions() {\n    return this._showTransitionOptions;\n  }\n  set showTransitionOptions(val) {\n    this._showTransitionOptions = val;\n    console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _showTransitionOptions;\n  /**\n   * Transition options of the hide animation.\n   * @group Props\n   * @deprecated since v14.2.0, use overlayOptions property instead.\n   */\n  get hideTransitionOptions() {\n    return this._hideTransitionOptions;\n  }\n  set hideTransitionOptions(val) {\n    this._hideTransitionOptions = val;\n    console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n  }\n  _hideTransitionOptions;\n  /**\n   * When specified, filter displays with this value.\n   * @group Props\n   */\n  get filterValue() {\n    return this._filterValue();\n  }\n  set filterValue(val) {\n    setTimeout(() => {\n      this._filterValue.set(val);\n    });\n  }\n  /**\n   * An array of objects to display as the available options.\n   * @group Props\n   */\n  get options() {\n    const options = this._options();\n    return options;\n  }\n  set options(val) {\n    if (!ObjectUtils.deepEquals(val, this._options())) {\n      this._options.set(val);\n    }\n  }\n  /**\n   * Callback to invoke when value of dropdown changes.\n   * @param {DropdownChangeEvent} event - custom change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  /**\n   * Callback to invoke when data is filtered.\n   * @param {DropdownFilterEvent} event - custom filter event.\n   * @group Emits\n   */\n  onFilter = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown gets focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onFocus = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown loses focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onBlur = new EventEmitter();\n  /**\n   * Callback to invoke when component is clicked.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Emits\n   */\n  onClick = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown overlay gets visible.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onShow = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown overlay gets hidden.\n   * @param {AnimationEvent} event - Animation event.\n   * @group Emits\n   */\n  onHide = new EventEmitter();\n  /**\n   * Callback to invoke when dropdown clears the value.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onClear = new EventEmitter();\n  /**\n   * Callback to invoke in lazy mode to load new data.\n   * @param {DropdownLazyLoadEvent} event - Lazy load event.\n   * @group Emits\n   */\n  onLazyLoad = new EventEmitter();\n  containerViewChild;\n  filterViewChild;\n  focusInputViewChild;\n  editableInputViewChild;\n  itemsViewChild;\n  scroller;\n  overlayViewChild;\n  firstHiddenFocusableElementOnOverlay;\n  lastHiddenFocusableElementOnOverlay;\n  templates;\n  _disabled;\n  itemsWrapper;\n  itemTemplate;\n  groupTemplate;\n  loaderTemplate;\n  selectedItemTemplate;\n  headerTemplate;\n  filterTemplate;\n  footerTemplate;\n  emptyFilterTemplate;\n  emptyTemplate;\n  dropdownIconTemplate;\n  clearIconTemplate;\n  filterIconTemplate;\n  filterOptions;\n  _options = signal(null);\n  _placeholder = signal(undefined);\n  modelValue = signal(null);\n  value;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  hover;\n  focused;\n  overlayVisible;\n  optionsChanged;\n  panel;\n  dimensionsUpdated;\n  hoveredItem;\n  selectedOptionUpdated;\n  _filterValue = signal(null);\n  searchValue;\n  searchIndex;\n  searchTimeout;\n  previousSearchChar;\n  currentSearchChar;\n  preventModelTouched;\n  focusedOptionIndex = signal(-1);\n  labelId;\n  listId;\n  clicked = signal(false);\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n  get emptyFilterMessageLabel() {\n    return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n  }\n  get isVisibleClearIcon() {\n    return this.modelValue() != null && this.hasSelectedOption() && this.showClear && !this.disabled;\n  }\n  get listLabel() {\n    return this.config.getTranslation(TranslationKeys.ARIA)['listLabel'];\n  }\n  get containerClass() {\n    return {\n      'p-dropdown p-component p-inputwrapper': true,\n      'p-disabled': this.disabled,\n      'p-dropdown-clearable': this.showClear && !this.disabled,\n      'p-focus': this.focused,\n      'p-inputwrapper-filled': this.modelValue() !== undefined && this.modelValue() !== null && !this.modelValue().length,\n      'p-inputwrapper-focus': this.focused || this.overlayVisible\n    };\n  }\n  get inputClass() {\n    const label = this.label();\n    return {\n      'p-dropdown-label p-inputtext': true,\n      'p-placeholder': this.placeholder() && label === this.placeholder(),\n      'p-dropdown-label-empty': !this.editable && !this.selectedItemTemplate && (label === undefined || label === null || label === 'p-emptylabel' || label.length === 0)\n    };\n  }\n  get panelClass() {\n    return {\n      'p-dropdown-panel p-component': true,\n      'p-input-filled': this.config.inputStyle === 'filled',\n      'p-ripple-disabled': this.config.ripple === false\n    };\n  }\n  get focusedOptionId() {\n    return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n  }\n  visibleOptions = computed(() => {\n    const options = this.getAllVisibleAndNonVisibleOptions();\n    if (this._filterValue()) {\n      const _filterBy = this.filterBy || this.optionLabel;\n      const filteredOptions = !_filterBy && !this.filterFields && !this.optionValue ? this.options.filter(option => {\n        if (option.label) {\n          return option.label.toString().toLowerCase().indexOf(this._filterValue().toLowerCase().trim()) !== -1;\n        }\n        return option.toString().toLowerCase().indexOf(this._filterValue().toLowerCase().trim()) !== -1;\n      }) : this.filterService.filter(options, this.searchFields(), this._filterValue().trim(), this.filterMatchMode, this.filterLocale);\n      if (this.group) {\n        const optionGroups = this.options || [];\n        const filtered = [];\n        optionGroups.forEach(group => {\n          const groupChildren = this.getOptionGroupChildren(group);\n          const filteredItems = groupChildren.filter(item => filteredOptions.includes(item));\n          if (filteredItems.length > 0) filtered.push({\n            ...group,\n            [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems]\n          });\n        });\n        return this.flatOptions(filtered);\n      }\n      return filteredOptions;\n    }\n    return options;\n  });\n  label = computed(() => {\n    // use  getAllVisibleAndNonVisibleOptions verses just visible options\n    // this will find the selected option whether or not the user is currently filtering  because the filtered (i.e. visible) options, are a subset of all the options\n    const options = this.getAllVisibleAndNonVisibleOptions();\n    // use isOptionEqualsModelValue for the use case where the dropdown is initalized with a disabled option\n    const selectedOptionIndex = options.findIndex(option => this.isOptionValueEqualsModelValue(option));\n    return selectedOptionIndex !== -1 ? this.getOptionLabel(options[selectedOptionIndex]) : this.placeholder() || 'p-emptylabel';\n  });\n  filled = computed(() => {\n    if (typeof this.modelValue() === 'string') return !!this.modelValue();\n    return this.label() !== 'p-emptylabel' && this.modelValue() !== undefined && this.modelValue() !== null;\n  });\n  selectedOption;\n  editableInputValue = computed(() => this.getOptionLabel(this.selectedOption) || this.modelValue() || '');\n  constructor(el, renderer, cd, zone, filterService, config) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.zone = zone;\n    this.filterService = filterService;\n    this.config = config;\n    effect(() => {\n      const modelValue = this.modelValue();\n      const visibleOptions = this.visibleOptions();\n      if (visibleOptions && ObjectUtils.isNotEmpty(visibleOptions)) {\n        const selectedOptionIndex = this.findSelectedOptionIndex();\n        if (selectedOptionIndex !== -1 || modelValue === undefined || typeof modelValue === 'string' && modelValue.length === 0 || this.isModelValueNotSet() || this.editable) {\n          this.selectedOption = visibleOptions[selectedOptionIndex];\n        }\n      }\n      if (ObjectUtils.isEmpty(visibleOptions) && (modelValue === undefined || this.isModelValueNotSet()) && ObjectUtils.isNotEmpty(this.selectedOption)) {\n        this.selectedOption = null;\n      }\n      if (modelValue !== undefined && this.editable) {\n        this.updateEditableLabel();\n      }\n      this.cd.markForCheck();\n    });\n  }\n  isModelValueNotSet() {\n    return this.modelValue() === null && !this.isOptionValueEqualsModelValue(this.selectedOption);\n  }\n  displayPlaceholder() {\n    return ObjectUtils.isEmpty(this.selectedOption) && this.label() === this.placeholder();\n  }\n  getAllVisibleAndNonVisibleOptions() {\n    return this.group ? this.flatOptions(this.options) : this.options || [];\n  }\n  ngOnInit() {\n    this.id = this.id || UniqueComponentId();\n    this.autoUpdateModel();\n    if (this.filterBy) {\n      this.filterOptions = {\n        filter: value => this.onFilterInputChange(value),\n        reset: () => this.resetFilter()\n      };\n    }\n  }\n  ngAfterViewChecked() {\n    if (this.optionsChanged && this.overlayVisible) {\n      this.optionsChanged = false;\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          if (this.overlayViewChild) {\n            this.overlayViewChild.alignOverlay();\n          }\n        }, 1);\n      });\n    }\n    if (this.selectedOptionUpdated && this.itemsWrapper) {\n      let selectedItem = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, 'li.p-highlight');\n      if (selectedItem) {\n        DomHandler.scrollInView(this.itemsWrapper, selectedItem);\n      }\n      this.selectedOptionUpdated = false;\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyFilterTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n        case 'dropdownicon':\n          this.dropdownIconTemplate = item.template;\n          break;\n        case 'clearicon':\n          this.clearIconTemplate = item.template;\n          break;\n        case 'filtericon':\n          this.filterIconTemplate = item.template;\n          break;\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n  flatOptions(options) {\n    return (options || []).reduce((result, option, index) => {\n      result.push({\n        optionGroup: option,\n        group: true,\n        index\n      });\n      const optionGroupChildren = this.getOptionGroupChildren(option);\n      optionGroupChildren && optionGroupChildren.forEach(o => result.push(o));\n      return result;\n    }, []);\n  }\n  autoUpdateModel() {\n    if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption()) {\n      this.focusedOptionIndex.set(this.findFirstFocusedOptionIndex());\n      this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()], false);\n    }\n    if (this.autoDisplayFirst && (this.modelValue() === null || this.modelValue() === undefined)) {\n      if (!this.placeholder()) {\n        const ind = this.findFirstOptionIndex();\n        this.onOptionSelect(null, this.visibleOptions()[ind], false, true);\n      }\n    }\n  }\n  onOptionSelect(event, option, isHide = true, preventChange = false) {\n    if (!this.isSelected(option)) {\n      const value = this.getOptionValue(option);\n      this.updateModel(value, event);\n      this.focusedOptionIndex.set(this.findSelectedOptionIndex());\n      preventChange === false && this.onChange.emit({\n        originalEvent: event,\n        value: value\n      });\n    }\n    if (isHide) {\n      this.hide(true);\n    }\n  }\n  onOptionMouseEnter(event, index) {\n    if (this.focusOnHover) {\n      this.changeFocusedOptionIndex(event, index);\n    }\n  }\n  updateModel(value, event) {\n    this.value = value;\n    this.onModelChange(value);\n    this.modelValue.set(value);\n    this.selectedOptionUpdated = true;\n  }\n  writeValue(value) {\n    if (this.filter) {\n      this.resetFilter();\n    }\n    this.value = value;\n    this.allowModelChange() && this.onModelChange(value);\n    this.modelValue.set(this.value);\n    this.updateEditableLabel();\n    this.cd.markForCheck();\n  }\n  allowModelChange() {\n    return this.autoDisplayFirst && !this.placeholder() && (this.modelValue() === undefined || this.modelValue() === null) && !this.editable && this.options && this.options.length;\n  }\n  isSelected(option) {\n    return this.isValidOption(option) && this.isOptionValueEqualsModelValue(option);\n  }\n  isOptionValueEqualsModelValue(option) {\n    return ObjectUtils.equals(this.modelValue(), this.getOptionValue(option), this.equalityKey());\n  }\n  ngAfterViewInit() {\n    if (this.editable) {\n      this.updateEditableLabel();\n    }\n  }\n  updateEditableLabel() {\n    if (this.editableInputViewChild) {\n      this.editableInputViewChild.nativeElement.value = this.getOptionLabel(this.selectedOption) || this.modelValue() || '';\n    }\n  }\n  clearEditableLabel() {\n    if (this.editableInputViewChild) {\n      this.editableInputViewChild.nativeElement.value = '';\n    }\n  }\n  getOptionIndex(index, scrollerOptions) {\n    return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n  }\n  getOptionLabel(option) {\n    return this.optionLabel !== undefined && this.optionLabel !== null ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n  }\n  getOptionValue(option) {\n    return this.optionValue && this.optionValue !== null ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n  }\n  isOptionDisabled(option) {\n    if (this.getOptionValue(this.modelValue()) === this.getOptionValue(option) || this.getOptionLabel(this.modelValue() === this.getOptionLabel(option)) && option.disabled === false) {\n      return false;\n    } else {\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n    }\n  }\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel !== undefined && this.optionGroupLabel !== null ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n  }\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren !== undefined && this.optionGroupChildren !== null ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n  getAriaPosInset(index) {\n    return (this.optionGroupLabel ? index - this.visibleOptions().slice(0, index).filter(option => this.isOptionGroup(option)).length : index) + 1;\n  }\n  get ariaSetSize() {\n    return this.visibleOptions().filter(option => !this.isOptionGroup(option)).length;\n  }\n  /**\n   * Callback to invoke on filter reset.\n   * @group Method\n   */\n  resetFilter() {\n    this._filterValue.set(null);\n    if (this.filterViewChild && this.filterViewChild.nativeElement) {\n      this.filterViewChild.nativeElement.value = '';\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  onContainerClick(event) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    this.focusInputViewChild?.nativeElement.focus({\n      preventScroll: true\n    });\n    if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n      return;\n    } else if (!this.overlayViewChild || !this.overlayViewChild.el.nativeElement.contains(event.target)) {\n      this.overlayVisible ? this.hide(true) : this.show(true);\n    }\n    this.onClick.emit(event);\n    this.clicked.set(true);\n    this.cd.detectChanges();\n  }\n  isEmpty() {\n    return !this._options() || this.visibleOptions() && this.visibleOptions().length === 0;\n  }\n  onEditableInput(event) {\n    const value = event.target.value;\n    this.searchValue = '';\n    const matched = this.searchOptions(event, value);\n    !matched && this.focusedOptionIndex.set(-1);\n    this.onModelChange(value);\n    this.updateModel(value, event);\n    setTimeout(() => {\n      this.onChange.emit({\n        originalEvent: event,\n        value: value\n      });\n    }, 1);\n    !this.overlayVisible && ObjectUtils.isNotEmpty(value) && this.show();\n  }\n  /**\n   * Displays the panel.\n   * @group Method\n   */\n  show(isFocus) {\n    this.overlayVisible = true;\n    const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n    this.focusedOptionIndex.set(focusedOptionIndex);\n    if (isFocus) {\n      DomHandler.focus(this.focusInputViewChild?.nativeElement);\n    }\n    this.cd.markForCheck();\n  }\n  onOverlayAnimationStart(event) {\n    if (event.toState === 'visible') {\n      this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n      this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n      if (this.options && this.options.length) {\n        if (this.virtualScroll) {\n          const selectedIndex = this.modelValue() ? this.focusedOptionIndex() : -1;\n          if (selectedIndex !== -1) {\n            this.scroller?.scrollToIndex(selectedIndex);\n          }\n        } else {\n          let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n          if (selectedListItem) {\n            selectedListItem.scrollIntoView({\n              block: 'nearest',\n              inline: 'nearest'\n            });\n          }\n        }\n      }\n      if (this.filterViewChild && this.filterViewChild.nativeElement) {\n        this.preventModelTouched = true;\n        if (this.autofocusFilter && !this.editable) {\n          this.filterViewChild.nativeElement.focus();\n        }\n      }\n      this.onShow.emit(event);\n    }\n    if (event.toState === 'void') {\n      this.itemsWrapper = null;\n      this.onModelTouched();\n      this.onHide.emit(event);\n    }\n  }\n  /**\n   * Hides the panel.\n   * @group Method\n   */\n  hide(isFocus) {\n    this.overlayVisible = false;\n    this.focusedOptionIndex.set(-1);\n    this.clicked.set(false);\n    this.searchValue = '';\n    if (this.overlayOptions?.mode === 'modal') {\n      DomHandler.unblockBodyScroll();\n    }\n    if (this.filter && this.resetFilterOnHide) {\n      this.resetFilter();\n    }\n    if (isFocus) {\n      if (this.focusInputViewChild) {\n        DomHandler.focus(this.focusInputViewChild?.nativeElement);\n      }\n      if (this.editable && this.editableInputViewChild) {\n        DomHandler.focus(this.editableInputViewChild?.nativeElement);\n      }\n    }\n    this.cd.markForCheck();\n  }\n  onInputFocus(event) {\n    if (this.disabled) {\n      // For ScreenReaders\n      return;\n    }\n    this.focused = true;\n    const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n    this.focusedOptionIndex.set(focusedOptionIndex);\n    this.overlayVisible && this.scrollInView(this.focusedOptionIndex());\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    this.onBlur.emit(event);\n    if (!this.preventModelTouched) {\n      this.onModelTouched();\n    }\n    this.preventModelTouched = false;\n  }\n  onKeyDown(event, search) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n    switch (event.code) {\n      //down\n      case 'ArrowDown':\n        this.onArrowDownKey(event);\n        break;\n      //up\n      case 'ArrowUp':\n        this.onArrowUpKey(event, this.editable);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.onArrowLeftKey(event, this.editable);\n        break;\n      case 'Delete':\n        this.onDeleteKey(event);\n        break;\n      case 'Home':\n        this.onHomeKey(event, this.editable);\n        break;\n      case 'End':\n        this.onEndKey(event, this.editable);\n        break;\n      case 'PageDown':\n        this.onPageDownKey(event);\n        break;\n      case 'PageUp':\n        this.onPageUpKey(event);\n        break;\n      //space\n      case 'Space':\n        this.onSpaceKey(event, search);\n        break;\n      //enter\n      case 'Enter':\n      case 'NumpadEnter':\n        this.onEnterKey(event);\n        break;\n      //escape and tab\n      case 'Escape':\n        this.onEscapeKey(event);\n        break;\n      case 'Tab':\n        this.onTabKey(event);\n        break;\n      case 'Backspace':\n        this.onBackspaceKey(event, this.editable);\n        break;\n      case 'ShiftLeft':\n      case 'ShiftRight':\n        //NOOP\n        break;\n      default:\n        if (!event.metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n          !this.overlayVisible && this.show();\n          !this.editable && this.searchOptions(event, event.key);\n        }\n        break;\n    }\n    this.clicked.set(false);\n  }\n  onFilterKeyDown(event) {\n    switch (event.code) {\n      case 'ArrowDown':\n        this.onArrowDownKey(event);\n        break;\n      case 'ArrowUp':\n        this.onArrowUpKey(event, true);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.onArrowLeftKey(event, true);\n        break;\n      case 'Home':\n        this.onHomeKey(event, true);\n        break;\n      case 'End':\n        this.onEndKey(event, true);\n        break;\n      case 'Enter':\n        this.onEnterKey(event, true);\n        break;\n      case 'Escape':\n        this.onEscapeKey(event);\n        break;\n      case 'Tab':\n        this.onTabKey(event, true);\n        break;\n      default:\n        break;\n    }\n  }\n  onFilterBlur(event) {\n    this.focusedOptionIndex.set(-1);\n  }\n  onArrowDownKey(event) {\n    if (!this.overlayVisible) {\n      this.show();\n      this.editable && this.changeFocusedOptionIndex(event, this.findSelectedOptionIndex());\n    } else {\n      const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.clicked() ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();\n      this.changeFocusedOptionIndex(event, optionIndex);\n    }\n    // const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n    // this.changeFocusedOptionIndex(event, optionIndex);\n    // !this.overlayVisible && this.show();\n    event.preventDefault();\n  }\n  changeFocusedOptionIndex(event, index) {\n    if (this.focusedOptionIndex() !== index) {\n      this.focusedOptionIndex.set(index);\n      this.scrollInView();\n      if (this.selectOnFocus) {\n        const option = this.visibleOptions()[index];\n        this.onOptionSelect(event, option, false);\n      }\n    }\n  }\n  get virtualScrollerDisabled() {\n    return !this.virtualScroll;\n  }\n  scrollInView(index = -1) {\n    const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n    if (this.itemsViewChild && this.itemsViewChild.nativeElement) {\n      const element = DomHandler.findSingle(this.itemsViewChild.nativeElement, `li[id=\"${id}\"]`);\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      } else if (!this.virtualScrollerDisabled) {\n        setTimeout(() => {\n          this.virtualScroll && this.scroller?.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n        }, 0);\n      }\n    }\n  }\n  hasSelectedOption() {\n    return this.modelValue() !== undefined;\n  }\n  isValidSelectedOption(option) {\n    return this.isValidOption(option) && this.isSelected(option);\n  }\n  equalityKey() {\n    return this.optionValue ? null : this.dataKey;\n  }\n  findFirstFocusedOptionIndex() {\n    const selectedIndex = this.findSelectedOptionIndex();\n    return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n  }\n  findFirstOptionIndex() {\n    return this.visibleOptions().findIndex(option => this.isValidOption(option));\n  }\n  findSelectedOptionIndex() {\n    return this.hasSelectedOption() ? this.visibleOptions().findIndex(option => this.isValidSelectedOption(option)) : -1;\n  }\n  findNextOptionIndex(index) {\n    const matchedOptionIndex = index < this.visibleOptions().length - 1 ? this.visibleOptions().slice(index + 1).findIndex(option => this.isValidOption(option)) : -1;\n    return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n  }\n  findPrevOptionIndex(index) {\n    const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), option => this.isValidOption(option)) : -1;\n    return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n  }\n  findLastOptionIndex() {\n    return ObjectUtils.findLastIndex(this.visibleOptions(), option => this.isValidOption(option));\n  }\n  findLastFocusedOptionIndex() {\n    const selectedIndex = this.findSelectedOptionIndex();\n    return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n  }\n  isValidOption(option) {\n    return option !== undefined && option !== null && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n  }\n  isOptionGroup(option) {\n    return this.optionGroupLabel !== undefined && this.optionGroupLabel !== null && option.optionGroup !== undefined && option.optionGroup !== null && option.group;\n  }\n  onArrowUpKey(event, pressedInInputText = false) {\n    if (event.altKey && !pressedInInputText) {\n      if (this.focusedOptionIndex() !== -1) {\n        const option = this.visibleOptions()[this.focusedOptionIndex()];\n        this.onOptionSelect(event, option);\n      }\n      this.overlayVisible && this.hide();\n      event.preventDefault();\n    } else {\n      const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.clicked() ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();\n      this.changeFocusedOptionIndex(event, optionIndex);\n      !this.overlayVisible && this.show();\n      event.preventDefault();\n    }\n  }\n  onArrowLeftKey(event, pressedInInputText = false) {\n    pressedInInputText && this.focusedOptionIndex.set(-1);\n  }\n  onDeleteKey(event) {\n    if (this.showClear) {\n      this.clear(event);\n      event.preventDefault();\n    }\n  }\n  onHomeKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      const target = event.currentTarget;\n      if (event.shiftKey) {\n        target.setSelectionRange(0, target.value.length);\n      } else {\n        target.setSelectionRange(0, 0);\n        this.focusedOptionIndex.set(-1);\n      }\n    } else {\n      this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n      !this.overlayVisible && this.show();\n    }\n    event.preventDefault();\n  }\n  onEndKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      const target = event.currentTarget;\n      if (event.shiftKey) {\n        target.setSelectionRange(0, target.value.length);\n      } else {\n        const len = target.value.length;\n        target.setSelectionRange(len, len);\n        this.focusedOptionIndex.set(-1);\n      }\n    } else {\n      this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n      !this.overlayVisible && this.show();\n    }\n    event.preventDefault();\n  }\n  onPageDownKey(event) {\n    this.scrollInView(this.visibleOptions().length - 1);\n    event.preventDefault();\n  }\n  onPageUpKey(event) {\n    this.scrollInView(0);\n    event.preventDefault();\n  }\n  onSpaceKey(event, pressedInInputText = false) {\n    !this.editable && !pressedInInputText && this.onEnterKey(event);\n  }\n  onEnterKey(event, pressedInInput = false) {\n    if (!this.overlayVisible) {\n      this.focusedOptionIndex.set(-1);\n      this.onArrowDownKey(event);\n    } else {\n      if (this.focusedOptionIndex() !== -1) {\n        const option = this.visibleOptions()[this.focusedOptionIndex()];\n        this.onOptionSelect(event, option);\n      }\n      !pressedInInput && this.hide();\n    }\n    event.preventDefault();\n  }\n  onEscapeKey(event) {\n    this.overlayVisible && this.hide(true);\n    event.preventDefault();\n  }\n  onTabKey(event, pressedInInputText = false) {\n    if (!pressedInInputText) {\n      if (this.overlayVisible && this.hasFocusableElements()) {\n        DomHandler.focus(event.shiftKey ? this.lastHiddenFocusableElementOnOverlay.nativeElement : this.firstHiddenFocusableElementOnOverlay.nativeElement);\n        event.preventDefault();\n      } else {\n        if (this.focusedOptionIndex() !== -1 && this.overlayVisible) {\n          const option = this.visibleOptions()[this.focusedOptionIndex()];\n          this.onOptionSelect(event, option);\n        }\n        this.overlayVisible && this.hide(this.filter);\n      }\n    }\n  }\n  onFirstHiddenFocus(event) {\n    const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getFirstFocusableElement(this.overlayViewChild.el?.nativeElement, ':not(.p-hidden-focusable)') : this.focusInputViewChild?.nativeElement;\n    DomHandler.focus(focusableEl);\n  }\n  onLastHiddenFocus(event) {\n    const focusableEl = event.relatedTarget === this.focusInputViewChild?.nativeElement ? DomHandler.getLastFocusableElement(this.overlayViewChild?.overlayViewChild?.nativeElement, ':not([data-p-hidden-focusable=\"true\"])') : this.focusInputViewChild?.nativeElement;\n    DomHandler.focus(focusableEl);\n  }\n  hasFocusableElements() {\n    return DomHandler.getFocusableElements(this.overlayViewChild.overlayViewChild.nativeElement, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n  }\n  onBackspaceKey(event, pressedInInputText = false) {\n    if (pressedInInputText) {\n      !this.overlayVisible && this.show();\n    }\n  }\n  searchFields() {\n    return this.filterBy?.split(',') || this.filterFields || [this.optionLabel];\n  }\n  searchOptions(event, char) {\n    this.searchValue = (this.searchValue || '') + char;\n    let optionIndex = -1;\n    let matched = false;\n    if (this.focusedOptionIndex() !== -1) {\n      optionIndex = this.visibleOptions().slice(this.focusedOptionIndex()).findIndex(option => this.isOptionMatched(option));\n      optionIndex = optionIndex === -1 ? this.visibleOptions().slice(0, this.focusedOptionIndex()).findIndex(option => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex();\n    } else {\n      optionIndex = this.visibleOptions().findIndex(option => this.isOptionMatched(option));\n    }\n    if (optionIndex !== -1) {\n      matched = true;\n    }\n    if (optionIndex === -1 && this.focusedOptionIndex() === -1) {\n      optionIndex = this.findFirstFocusedOptionIndex();\n    }\n    if (optionIndex !== -1) {\n      this.changeFocusedOptionIndex(event, optionIndex);\n    }\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout);\n    }\n    this.searchTimeout = setTimeout(() => {\n      this.searchValue = '';\n      this.searchTimeout = null;\n    }, 500);\n    return matched;\n  }\n  isOptionMatched(option) {\n    return this.isValidOption(option) && this.getOptionLabel(option).toString().toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n  }\n  onFilterInputChange(event) {\n    let value = event.target.value;\n    this._filterValue.set(value);\n    this.focusedOptionIndex.set(-1);\n    this.onFilter.emit({\n      originalEvent: event,\n      filter: this._filterValue()\n    });\n    !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);\n    setTimeout(() => {\n      this.overlayViewChild.alignOverlay();\n    });\n    this.cd.markForCheck();\n  }\n  applyFocus() {\n    if (this.editable) DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();else DomHandler.focus(this.focusInputViewChild?.nativeElement);\n  }\n  /**\n   * Applies focus.\n   * @group Method\n   */\n  focus() {\n    this.applyFocus();\n  }\n  /**\n   * Clears the model.\n   * @group Method\n   */\n  clear(event) {\n    this.updateModel(null, event);\n    this.clearEditableLabel();\n    this.onModelTouched();\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n    this.onClear.emit(event);\n    this.resetFilter();\n  }\n  static Éµfac = function Dropdown_Factory(t) {\n    return new (t || Dropdown)(i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(i0.NgZone), i0.ÉµÉµdirectiveInject(i3.FilterService), i0.ÉµÉµdirectiveInject(i3.PrimeNGConfig));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: Dropdown,\n    selectors: [[\"p-dropdown\"]],\n    contentQueries: function Dropdown_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ÉµÉµcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Dropdown_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµviewQuery(_c3, 5);\n        i0.ÉµÉµviewQuery(_c4, 5);\n        i0.ÉµÉµviewQuery(_c5, 5);\n        i0.ÉµÉµviewQuery(_c6, 5);\n        i0.ÉµÉµviewQuery(_c7, 5);\n        i0.ÉµÉµviewQuery(_c8, 5);\n        i0.ÉµÉµviewQuery(_c9, 5);\n        i0.ÉµÉµviewQuery(_c10, 5);\n        i0.ÉµÉµviewQuery(_c11, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.containerViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.filterViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.focusInputViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.editableInputViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.itemsViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.scroller = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.overlayViewChild = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.firstHiddenFocusableElementOnOverlay = _t.first);\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.lastHiddenFocusableElementOnOverlay = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n    hostVars: 4,\n    hostBindings: function Dropdown_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ÉµÉµclassProp(\"p-inputwrapper-filled\", ctx.filled())(\"p-inputwrapper-focus\", ctx.focused || ctx.overlayVisible);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      scrollHeight: \"scrollHeight\",\n      filter: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"filter\", \"filter\", booleanAttribute],\n      name: \"name\",\n      style: \"style\",\n      panelStyle: \"panelStyle\",\n      styleClass: \"styleClass\",\n      panelStyleClass: \"panelStyleClass\",\n      readonly: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"readonly\", \"readonly\", booleanAttribute],\n      required: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n      editable: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"editable\", \"editable\", booleanAttribute],\n      appendTo: \"appendTo\",\n      tabindex: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"tabindex\", \"tabindex\", numberAttribute],\n      placeholder: \"placeholder\",\n      filterPlaceholder: \"filterPlaceholder\",\n      filterLocale: \"filterLocale\",\n      inputId: \"inputId\",\n      dataKey: \"dataKey\",\n      filterBy: \"filterBy\",\n      filterFields: \"filterFields\",\n      autofocus: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"autofocus\", \"autofocus\", booleanAttribute],\n      resetFilterOnHide: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"resetFilterOnHide\", \"resetFilterOnHide\", booleanAttribute],\n      dropdownIcon: \"dropdownIcon\",\n      optionLabel: \"optionLabel\",\n      optionValue: \"optionValue\",\n      optionDisabled: \"optionDisabled\",\n      optionGroupLabel: \"optionGroupLabel\",\n      optionGroupChildren: \"optionGroupChildren\",\n      autoDisplayFirst: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"autoDisplayFirst\", \"autoDisplayFirst\", booleanAttribute],\n      group: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"group\", \"group\", booleanAttribute],\n      showClear: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showClear\", \"showClear\", booleanAttribute],\n      emptyFilterMessage: \"emptyFilterMessage\",\n      emptyMessage: \"emptyMessage\",\n      lazy: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"lazy\", \"lazy\", booleanAttribute],\n      virtualScroll: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"virtualScroll\", \"virtualScroll\", booleanAttribute],\n      virtualScrollItemSize: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"virtualScrollItemSize\", \"virtualScrollItemSize\", numberAttribute],\n      virtualScrollOptions: \"virtualScrollOptions\",\n      overlayOptions: \"overlayOptions\",\n      ariaFilterLabel: \"ariaFilterLabel\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      filterMatchMode: \"filterMatchMode\",\n      maxlength: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"maxlength\", \"maxlength\", numberAttribute],\n      tooltip: \"tooltip\",\n      tooltipPosition: \"tooltipPosition\",\n      tooltipPositionStyle: \"tooltipPositionStyle\",\n      tooltipStyleClass: \"tooltipStyleClass\",\n      focusOnHover: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"focusOnHover\", \"focusOnHover\", booleanAttribute],\n      selectOnFocus: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"selectOnFocus\", \"selectOnFocus\", booleanAttribute],\n      autoOptionFocus: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"autoOptionFocus\", \"autoOptionFocus\", booleanAttribute],\n      autofocusFilter: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"autofocusFilter\", \"autofocusFilter\", booleanAttribute],\n      disabled: \"disabled\",\n      itemSize: \"itemSize\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      filterValue: \"filterValue\",\n      options: \"options\"\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onFilter: \"onFilter\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\",\n      onClick: \"onClick\",\n      onShow: \"onShow\",\n      onHide: \"onHide\",\n      onClear: \"onClear\",\n      onLazyLoad: \"onLazyLoad\"\n    },\n    features: [i0.ÉµÉµProvidersFeature([DROPDOWN_VALUE_ACCESSOR]), i0.ÉµÉµInputTransformsFeature],\n    decls: 11,\n    vars: 20,\n    consts: [[\"container\", \"\"], [\"overlay\", \"\"], [\"focusInput\", \"\"], [\"defaultPlaceholder\", \"\"], [\"editableInput\", \"\"], [\"firstHiddenFocusableEl\", \"\"], [\"buildInItems\", \"\"], [\"lastHiddenFocusableEl\", \"\"], [\"builtInFilterElement\", \"\"], [\"filter\", \"\"], [\"scroller\", \"\"], [\"items\", \"\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"], [3, \"click\", \"ngClass\", \"ngStyle\"], [\"role\", \"combobox\", \"pAutoFocus\", \"\", 3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"autofocus\", \"focus\", \"blur\", \"keydown\", 4, \"ngIf\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 3, \"ngClass\", \"disabled\", \"input\", \"keydown\", \"focus\", \"blur\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"button\", \"aria-label\", \"dropdown trigger\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-trigger\"], [\"class\", \"p-dropdown-trigger-icon\", 4, \"ngIf\"], [3, \"visibleChange\", \"onAnimationStart\", \"onHide\", \"visible\", \"options\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\"], [\"pTemplate\", \"content\"], [\"role\", \"combobox\", \"pAutoFocus\", \"\", 3, \"focus\", \"blur\", \"keydown\", \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"autofocus\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 3, \"input\", \"keydown\", \"focus\", \"blur\", \"ngClass\", \"disabled\"], [3, \"styleClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-dropdown-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"click\", \"styleClass\"], [1, \"p-dropdown-clear-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-dropdown-trigger-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [1, \"p-dropdown-trigger-icon\", 3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-dropdown-trigger-icon\"], [3, \"ngClass\", \"ngStyle\"], [\"role\", \"presentation\", 1, \"p-hidden-accessible\", \"p-hidden-focusable\", 3, \"focus\"], [\"class\", \"p-dropdown-header\", 3, \"click\", 4, \"ngIf\"], [1, \"p-dropdown-items-wrapper\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [1, \"p-dropdown-header\", 3, \"click\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-dropdown-filter-container\"], [\"type\", \"text\", \"role\", \"searchbox\", \"autocomplete\", \"off\", 1, \"p-dropdown-filter\", \"p-inputtext\", \"p-component\", 3, \"input\", \"keydown\", \"blur\", \"value\"], [\"class\", \"p-dropdown-filter-icon\", 4, \"ngIf\"], [1, \"p-dropdown-filter-icon\"], [3, \"onLazyLoad\", \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-dropdown-items\", 3, \"ngClass\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"p-dropdown-empty-message\", \"role\", \"option\", 3, \"ngStyle\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"p-dropdown-item-group\", 3, \"ngStyle\"], [3, \"onClick\", \"onMouseEnter\", \"id\", \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"focused\", \"ariaPosInset\", \"ariaSetSize\"], [\"role\", \"option\", 1, \"p-dropdown-empty-message\", 3, \"ngStyle\"]],\n    template: function Dropdown_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ÉµÉµgetCurrentView();\n        i0.ÉµÉµelementStart(0, \"div\", 14, 0);\n        i0.ÉµÉµlistener(\"click\", function Dropdown_Template_div_click_0_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onContainerClick($event));\n        });\n        i0.ÉµÉµtemplate(2, Dropdown_span_2_Template, 6, 20, \"span\", 15)(3, Dropdown_input_3_Template, 2, 5, \"input\", 16)(4, Dropdown_ng_container_4_Template, 3, 2, \"ng-container\", 17);\n        i0.ÉµÉµelementStart(5, \"div\", 18);\n        i0.ÉµÉµtemplate(6, Dropdown_ng_container_6_Template, 3, 2, \"ng-container\", 17)(7, Dropdown_span_7_Template, 2, 1, \"span\", 19);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(8, \"p-overlay\", 20, 1);\n        i0.ÉµÉµtwoWayListener(\"visibleChange\", function Dropdown_Template_p_overlay_visibleChange_8_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          i0.ÉµÉµtwoWayBindingSet(ctx.overlayVisible, $event) || (ctx.overlayVisible = $event);\n          return i0.ÉµÉµresetView($event);\n        });\n        i0.ÉµÉµlistener(\"onAnimationStart\", function Dropdown_Template_p_overlay_onAnimationStart_8_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onOverlayAnimationStart($event));\n        })(\"onHide\", function Dropdown_Template_p_overlay_onHide_8_listener() {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.hide());\n        });\n        i0.ÉµÉµtemplate(10, Dropdown_ng_template_10_Template, 13, 17, \"ng-template\", 21);\n        i0.ÉµÉµelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_9_0;\n        i0.ÉµÉµclassMap(ctx.styleClass);\n        i0.ÉµÉµproperty(\"ngClass\", ctx.containerClass)(\"ngStyle\", ctx.style);\n        i0.ÉµÉµattribute(\"id\", ctx.id);\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"ngIf\", !ctx.editable);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.editable);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.isVisibleClearIcon);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµattribute(\"aria-expanded\", (tmp_9_0 = ctx.overlayVisible) !== null && tmp_9_0 !== undefined ? tmp_9_0 : false)(\"data-pc-section\", \"trigger\");\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", !ctx.dropdownIconTemplate);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.dropdownIconTemplate);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµtwoWayProperty(\"visible\", ctx.overlayVisible);\n        i0.ÉµÉµproperty(\"options\", ctx.overlayOptions)(\"target\", \"@parent\")(\"appendTo\", ctx.appendTo)(\"autoZIndex\", ctx.autoZIndex)(\"baseZIndex\", ctx.baseZIndex)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n      }\n    },\n    dependencies: () => [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i4.Overlay, i3.PrimeTemplate, i5.Tooltip, i6.Scroller, i7.AutoFocus, TimesIcon, ChevronDownIcon, SearchIcon, DropdownItem],\n    styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(Dropdown, [{\n    type: Component,\n    args: [{\n      selector: 'p-dropdown',\n      template: `\n        <div #container [attr.id]=\"id\" [ngClass]=\"containerClass\" (click)=\"onContainerClick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <span\n                #focusInput\n                [ngClass]=\"inputClass\"\n                *ngIf=\"!editable\"\n                [pTooltip]=\"tooltip\"\n                [tooltipPosition]=\"tooltipPosition\"\n                [positionStyle]=\"tooltipPositionStyle\"\n                [tooltipStyleClass]=\"tooltipStyleClass\"\n                [attr.aria-disabled]=\"disabled\"\n                [attr.id]=\"inputId\"\n                role=\"combobox\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-haspopup]=\"'listbox'\"\n                [attr.aria-expanded]=\"overlayVisible ?? false\"\n                [attr.aria-controls]=\"overlayVisible ? id + '_list' : null\"\n                [attr.tabindex]=\"!disabled ? tabindex : -1\"\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                [attr.aria-required]=\"required\"\n                [attr.required]=\"required\"\n            >\n                <ng-container *ngIf=\"!selectedItemTemplate; else defaultPlaceholder\">{{ label() === 'p-emptylabel' ? '&nbsp;' : label() }}</ng-container>\n                <ng-container *ngIf=\"selectedItemTemplate && selectedOption\" [ngTemplateOutlet]=\"selectedItemTemplate\" [ngTemplateOutletContext]=\"{ $implicit: selectedOption }\"></ng-container>\n                <ng-template #defaultPlaceholder>\n                    <span *ngIf=\"displayPlaceholder()\">{{ label() === 'p-emptylabel' ? '&nbsp;' : placeholder() }}</span>\n                </ng-template>\n            </span>\n            <input\n                *ngIf=\"editable\"\n                #editableInput\n                type=\"text\"\n                [attr.maxlength]=\"maxlength\"\n                [ngClass]=\"inputClass\"\n                [disabled]=\"disabled\"\n                aria-haspopup=\"listbox\"\n                [attr.placeholder]=\"modelValue() === undefined || modelValue() === null ? placeholder() : undefined\"\n                [attr.aria-label]=\"ariaLabel || (label() === 'p-emptylabel' ? undefined : label())\"\n                (input)=\"onEditableInput($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"isVisibleClearIcon\">\n                <TimesIcon [styleClass]=\"'p-dropdown-clear-icon'\" (click)=\"clear($event)\" *ngIf=\"!clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\" />\n                <span class=\"p-dropdown-clear-icon\" (click)=\"clear($event)\" *ngIf=\"clearIconTemplate\" [attr.data-pc-section]=\"'clearicon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-label=\"dropdown trigger\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible ?? false\" [attr.data-pc-section]=\"'trigger'\">\n                <ng-container *ngIf=\"!dropdownIconTemplate\">\n                    <span class=\"p-dropdown-trigger-icon\" *ngIf=\"dropdownIcon\" [ngClass]=\"dropdownIcon\"></span>\n                    <ChevronDownIcon *ngIf=\"!dropdownIcon\" [styleClass]=\"'p-dropdown-trigger-icon'\" />\n                </ng-container>\n                <span *ngIf=\"dropdownIconTemplate\" class=\"p-dropdown-trigger-icon\">\n                    <ng-template *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-template>\n                </span>\n            </div>\n\n            <p-overlay\n                #overlay\n                [(visible)]=\"overlayVisible\"\n                [options]=\"overlayOptions\"\n                [target]=\"'@parent'\"\n                [appendTo]=\"appendTo\"\n                [autoZIndex]=\"autoZIndex\"\n                [baseZIndex]=\"baseZIndex\"\n                [showTransitionOptions]=\"showTransitionOptions\"\n                [hideTransitionOptions]=\"hideTransitionOptions\"\n                (onAnimationStart)=\"onOverlayAnimationStart($event)\"\n                (onHide)=\"hide()\"\n            >\n                <ng-template pTemplate=\"content\">\n                    <div [ngClass]=\"'p-dropdown-panel p-component'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                        <span\n                            #firstHiddenFocusableEl\n                            role=\"presentation\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onFirstHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        >\n                        </span>\n                        <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                        <div class=\"p-dropdown-header\" *ngIf=\"filter\" (click)=\"$event.stopPropagation()\">\n                            <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                            </ng-container>\n                            <ng-template #builtInFilterElement>\n                                <div class=\"p-dropdown-filter-container\">\n                                    <input\n                                        #filter\n                                        type=\"text\"\n                                        role=\"searchbox\"\n                                        autocomplete=\"off\"\n                                        [value]=\"_filterValue() || ''\"\n                                        class=\"p-dropdown-filter p-inputtext p-component\"\n                                        [attr.placeholder]=\"filterPlaceholder\"\n                                        [attr.aria-owns]=\"id + '_list'\"\n                                        (input)=\"onFilterInputChange($event)\"\n                                        [attr.aria-label]=\"ariaFilterLabel\"\n                                        [attr.aria-activedescendant]=\"focusedOptionId\"\n                                        (keydown)=\"onFilterKeyDown($event)\"\n                                        (blur)=\"onFilterBlur($event)\"\n                                    />\n                                    <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-dropdown-filter-icon'\" />\n                                    <span *ngIf=\"filterIconTemplate\" class=\"p-dropdown-filter-icon\">\n                                        <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                                    </span>\n                                </div>\n                            </ng-template>\n                        </div>\n                        <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                            <p-scroller\n                                *ngIf=\"virtualScroll\"\n                                #scroller\n                                [items]=\"visibleOptions()\"\n                                [style]=\"{ height: scrollHeight }\"\n                                [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                                [autoSize]=\"true\"\n                                [lazy]=\"lazy\"\n                                (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                                [options]=\"virtualScrollOptions\"\n                            >\n                                <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                                </ng-template>\n                                <ng-container *ngIf=\"loaderTemplate\">\n                                    <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                                        <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                                    </ng-template>\n                                </ng-container>\n                            </p-scroller>\n                            <ng-container *ngIf=\"!virtualScroll\">\n                                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                            </ng-container>\n\n                            <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                                <ul #items [attr.id]=\"id + '_list'\" [attr.aria-label]=\"listLabel\" class=\"p-dropdown-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\" role=\"listbox\">\n                                    <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                                        <ng-container *ngIf=\"isOptionGroup(option)\">\n                                            <li class=\"p-dropdown-item-group\" [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                            </li>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!isOptionGroup(option)\">\n                                            <p-dropdownItem\n                                                [id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                                [option]=\"option\"\n                                                [selected]=\"isSelected(option)\"\n                                                [label]=\"getOptionLabel(option)\"\n                                                [disabled]=\"isOptionDisabled(option)\"\n                                                [template]=\"itemTemplate\"\n                                                [focused]=\"focusedOptionIndex() === getOptionIndex(i, scrollerOptions)\"\n                                                [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                                [ariaSetSize]=\"ariaSetSize\"\n                                                (onClick)=\"onOptionSelect($event, option)\"\n                                                (onMouseEnter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                            ></p-dropdownItem>\n                                        </ng-container>\n                                    </ng-template>\n                                    <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                            {{ emptyFilterMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                                    </li>\n                                    <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                            {{ emptyMessageLabel }}\n                                        </ng-container>\n                                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                                    </li>\n                                </ul>\n                            </ng-template>\n                        </div>\n                        <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                        <span\n                            #lastHiddenFocusableEl\n                            role=\"presentation\"\n                            class=\"p-hidden-accessible p-hidden-focusable\"\n                            [attr.tabindex]=\"0\"\n                            (focus)=\"onLastHiddenFocus($event)\"\n                            [attr.data-p-hidden-accessible]=\"true\"\n                            [attr.data-p-hidden-focusable]=\"true\"\n                        ></span>\n                    </div>\n                </ng-template>\n            </p-overlay>\n        </div>\n    `,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled()',\n        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n      },\n      providers: [DROPDOWN_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.FilterService\n  }, {\n    type: i3.PrimeNGConfig\n  }], {\n    id: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    name: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    editable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    filterPlaceholder: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    filterBy: [{\n      type: Input\n    }],\n    filterFields: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    resetFilterOnHide: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    optionLabel: [{\n      type: Input\n    }],\n    optionValue: [{\n      type: Input\n    }],\n    optionDisabled: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    autoDisplayFirst: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    group: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showClear: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    emptyFilterMessage: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    virtualScroll: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    virtualScrollItemSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    overlayOptions: [{\n      type: Input\n    }],\n    ariaFilterLabel: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    filterMatchMode: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipPositionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    focusOnHover: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectOnFocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    autoOptionFocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    autofocusFilter: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    filterValue: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    filterViewChild: [{\n      type: ViewChild,\n      args: ['filter']\n    }],\n    focusInputViewChild: [{\n      type: ViewChild,\n      args: ['focusInput']\n    }],\n    editableInputViewChild: [{\n      type: ViewChild,\n      args: ['editableInput']\n    }],\n    itemsViewChild: [{\n      type: ViewChild,\n      args: ['items']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    overlayViewChild: [{\n      type: ViewChild,\n      args: ['overlay']\n    }],\n    firstHiddenFocusableElementOnOverlay: [{\n      type: ViewChild,\n      args: ['firstHiddenFocusableEl']\n    }],\n    lastHiddenFocusableElementOnOverlay: [{\n      type: ViewChild,\n      args: ['lastHiddenFocusableEl']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass DropdownModule {\n  static Éµfac = function DropdownModule_Factory(t) {\n    return new (t || DropdownModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: DropdownModule,\n    declarations: [Dropdown, DropdownItem],\n    imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon],\n    exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon, OverlayModule, SharedModule, ScrollerModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(DropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon],\n      exports: [Dropdown, OverlayModule, SharedModule, ScrollerModule],\n      declarations: [Dropdown, DropdownItem]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };\n", "import * as i0 from '@angular/core';\nimport { Directive, Optional, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\nclass InputText {\n  el;\n  ngModel;\n  cd;\n  filled;\n  constructor(el, ngModel, cd) {\n    this.el = el;\n    this.ngModel = ngModel;\n    this.cd = cd;\n  }\n  ngAfterViewInit() {\n    this.updateFilledState();\n    this.cd.detectChanges();\n  }\n  ngDoCheck() {\n    this.updateFilledState();\n  }\n  onInput() {\n    this.updateFilledState();\n  }\n  updateFilledState() {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length || this.ngModel && this.ngModel.model;\n  }\n  static Éµfac = function InputText_Factory(t) {\n    return new (t || InputText)(i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i1.NgModel, 8), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n    type: InputText,\n    selectors: [[\"\", \"pInputText\", \"\"]],\n    hostAttrs: [1, \"p-inputtext\", \"p-component\", \"p-element\"],\n    hostVars: 2,\n    hostBindings: function InputText_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"input\", function InputText_input_HostBindingHandler($event) {\n          return ctx.onInput($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassProp(\"p-filled\", ctx.filled);\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(InputText, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputText]',\n      host: {\n        class: 'p-inputtext p-component p-element',\n        '[class.p-filled]': 'filled'\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.NgModel,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\nclass InputTextModule {\n  static Éµfac = function InputTextModule_Factory(t) {\n    return new (t || InputTextModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: InputTextModule,\n    declarations: [InputText],\n    imports: [CommonModule],\n    exports: [InputText]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(InputTextModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputText],\n      declarations: [InputText]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputText, InputTextModule };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass AngleDownIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµAngleDownIcon_BaseFactory;\n    return function AngleDownIcon_Factory(t) {\n      return (ÉµAngleDownIcon_BaseFactory || (ÉµAngleDownIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(AngleDownIcon)))(t || AngleDownIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: AngleDownIcon,\n    selectors: [[\"AngleDownIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M3.58659 4.5007C3.68513 4.50023 3.78277 4.51945 3.87379 4.55723C3.9648 4.59501 4.04735 4.65058 4.11659 4.7207L7.11659 7.7207L10.1166 4.7207C10.2619 4.65055 10.4259 4.62911 10.5843 4.65956C10.7427 4.69002 10.8871 4.77074 10.996 4.88976C11.1049 5.00877 11.1726 5.15973 11.1889 5.32022C11.2052 5.48072 11.1693 5.6422 11.0866 5.7807L7.58659 9.2807C7.44597 9.42115 7.25534 9.50004 7.05659 9.50004C6.85784 9.50004 6.66722 9.42115 6.52659 9.2807L3.02659 5.7807C2.88614 5.64007 2.80725 5.44945 2.80725 5.2507C2.80725 5.05195 2.88614 4.86132 3.02659 4.7207C3.09932 4.64685 3.18675 4.58911 3.28322 4.55121C3.37969 4.51331 3.48305 4.4961 3.58659 4.5007Z\", \"fill\", \"currentColor\"]],\n    template: function AngleDownIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AngleDownIcon, [{\n    type: Component,\n    args: [{\n      selector: 'AngleDownIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M3.58659 4.5007C3.68513 4.50023 3.78277 4.51945 3.87379 4.55723C3.9648 4.59501 4.04735 4.65058 4.11659 4.7207L7.11659 7.7207L10.1166 4.7207C10.2619 4.65055 10.4259 4.62911 10.5843 4.65956C10.7427 4.69002 10.8871 4.77074 10.996 4.88976C11.1049 5.00877 11.1726 5.15973 11.1889 5.32022C11.2052 5.48072 11.1693 5.6422 11.0866 5.7807L7.58659 9.2807C7.44597 9.42115 7.25534 9.50004 7.05659 9.50004C6.85784 9.50004 6.66722 9.42115 6.52659 9.2807L3.02659 5.7807C2.88614 5.64007 2.80725 5.44945 2.80725 5.2507C2.80725 5.05195 2.88614 4.86132 3.02659 4.7207C3.09932 4.64685 3.18675 4.58911 3.28322 4.55121C3.37969 4.51331 3.48305 4.4961 3.58659 4.5007Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleDownIcon };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass AngleUpIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµAngleUpIcon_BaseFactory;\n    return function AngleUpIcon_Factory(t) {\n      return (ÉµAngleUpIcon_BaseFactory || (ÉµAngleUpIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(AngleUpIcon)))(t || AngleUpIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: AngleUpIcon,\n    selectors: [[\"AngleUpIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M10.4134 9.49931C10.3148 9.49977 10.2172 9.48055 10.1262 9.44278C10.0352 9.405 9.95263 9.34942 9.88338 9.27931L6.88338 6.27931L3.88338 9.27931C3.73811 9.34946 3.57409 9.3709 3.41567 9.34044C3.25724 9.30999 3.11286 9.22926 3.00395 9.11025C2.89504 8.99124 2.82741 8.84028 2.8111 8.67978C2.79478 8.51928 2.83065 8.35781 2.91338 8.21931L6.41338 4.71931C6.55401 4.57886 6.74463 4.49997 6.94338 4.49997C7.14213 4.49997 7.33276 4.57886 7.47338 4.71931L10.9734 8.21931C11.1138 8.35994 11.1927 8.55056 11.1927 8.74931C11.1927 8.94806 11.1138 9.13868 10.9734 9.27931C10.9007 9.35315 10.8132 9.41089 10.7168 9.44879C10.6203 9.48669 10.5169 9.5039 10.4134 9.49931Z\", \"fill\", \"currentColor\"]],\n    template: function AngleUpIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AngleUpIcon, [{\n    type: Component,\n    args: [{\n      selector: 'AngleUpIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M10.4134 9.49931C10.3148 9.49977 10.2172 9.48055 10.1262 9.44278C10.0352 9.405 9.95263 9.34942 9.88338 9.27931L6.88338 6.27931L3.88338 9.27931C3.73811 9.34946 3.57409 9.3709 3.41567 9.34044C3.25724 9.30999 3.11286 9.22926 3.00395 9.11025C2.89504 8.99124 2.82741 8.84028 2.8111 8.67978C2.79478 8.51928 2.83065 8.35781 2.91338 8.21931L6.41338 4.71931C6.55401 4.57886 6.74463 4.49997 6.94338 4.49997C7.14213 4.49997 7.33276 4.57886 7.47338 4.71931L10.9734 8.21931C11.1138 8.35994 11.1927 8.55056 11.1927 8.74931C11.1927 8.94806 11.1138 9.13868 10.9734 9.27931C10.9007 9.35315 10.8132 9.41089 10.7168 9.44879C10.6203 9.48669 10.5169 9.5039 10.4134 9.49931Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleUpIcon };\n", "import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, booleanAttribute, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport { AngleDownIcon } from 'primeng/icons/angledown';\nimport { AngleUpIcon } from 'primeng/icons/angleup';\nimport { TimesIcon } from 'primeng/icons/times';\nimport * as i2 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nconst _c0 = [\"input\"];\nconst _c1 = (a0, a1, a2) => ({\n  \"p-inputnumber p-component\": true,\n  \"p-inputnumber-buttons-stacked\": a0,\n  \"p-inputnumber-buttons-horizontal\": a1,\n  \"p-inputnumber-buttons-vertical\": a2\n});\nconst _c2 = () => ({\n  \"p-inputnumber-button p-inputnumber-button-up\": true\n});\nconst _c3 = () => ({\n  \"p-inputnumber-button p-inputnumber-button-down\": true\n});\nfunction InputNumber_ng_container_3_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"TimesIcon\", 8);\n    i0.ÉµÉµlistener(\"click\", function InputNumber_ng_container_3_TimesIcon_1_Template_TimesIcon_click_0_listener() {\n      i0.ÉµÉµrestoreView(_r2);\n      const ctx_r2 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r2.clear());\n    });\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"ngClass\", \"p-inputnumber-clear-icon\");\n    i0.ÉµÉµattribute(\"data-pc-section\", \"clearIcon\");\n  }\n}\nfunction InputNumber_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, InputNumber_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"span\", 9);\n    i0.ÉµÉµlistener(\"click\", function InputNumber_ng_container_3_span_2_Template_span_click_0_listener() {\n      i0.ÉµÉµrestoreView(_r4);\n      const ctx_r2 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r2.clear());\n    });\n    i0.ÉµÉµtemplate(1, InputNumber_ng_container_3_span_2_1_Template, 1, 0, null, 10);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"clearIcon\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.clearIconTemplate);\n  }\n}\nfunction InputNumber_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, InputNumber_ng_container_3_TimesIcon_1_Template, 1, 2, \"TimesIcon\", 6)(2, InputNumber_ng_container_3_span_2_Template, 2, 2, \"span\", 7);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.clearIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.clearIconTemplate);\n  }\n}\nfunction InputNumber_span_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngClass\", ctx_r2.incrementButtonIcon);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"incrementbuttonicon\");\n  }\n}\nfunction InputNumber_span_4_ng_container_3_AngleUpIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleUpIcon\");\n  }\n  if (rf & 2) {\n    i0.ÉµÉµattribute(\"data-pc-section\", \"incrementbuttonicon\");\n  }\n}\nfunction InputNumber_span_4_ng_container_3_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_span_4_ng_container_3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, InputNumber_span_4_ng_container_3_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_span_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, InputNumber_span_4_ng_container_3_AngleUpIcon_1_Template, 1, 1, \"AngleUpIcon\", 3)(2, InputNumber_span_4_ng_container_3_2_Template, 1, 0, null, 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.incrementButtonIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.incrementButtonIconTemplate);\n  }\n}\nfunction InputNumber_span_4_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngClass\", ctx_r2.decrementButtonIcon);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"decrementbuttonicon\");\n  }\n}\nfunction InputNumber_span_4_ng_container_6_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleDownIcon\");\n  }\n  if (rf & 2) {\n    i0.ÉµÉµattribute(\"data-pc-section\", \"decrementbuttonicon\");\n  }\n}\nfunction InputNumber_span_4_ng_container_6_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_span_4_ng_container_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, InputNumber_span_4_ng_container_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_span_4_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, InputNumber_span_4_ng_container_6_AngleDownIcon_1_Template, 1, 1, \"AngleDownIcon\", 3)(2, InputNumber_span_4_ng_container_6_2_Template, 1, 0, null, 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.decrementButtonIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.decrementButtonIconTemplate);\n  }\n}\nfunction InputNumber_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"span\", 11)(1, \"button\", 12);\n    i0.ÉµÉµlistener(\"mousedown\", function InputNumber_span_4_Template_button_mousedown_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_span_4_Template_button_mouseup_1_listener() {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_span_4_Template_button_mouseleave_1_listener() {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonMouseLeave());\n    })(\"keydown\", function InputNumber_span_4_Template_button_keydown_1_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_span_4_Template_button_keyup_1_listener() {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonKeyUp());\n    });\n    i0.ÉµÉµtemplate(2, InputNumber_span_4_span_2_Template, 1, 2, \"span\", 13)(3, InputNumber_span_4_ng_container_3_Template, 3, 2, \"ng-container\", 3);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(4, \"button\", 12);\n    i0.ÉµÉµlistener(\"mousedown\", function InputNumber_span_4_Template_button_mousedown_4_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_span_4_Template_button_mouseup_4_listener() {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_span_4_Template_button_mouseleave_4_listener() {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonMouseLeave());\n    })(\"keydown\", function InputNumber_span_4_Template_button_keydown_4_listener($event) {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_span_4_Template_button_keyup_4_listener() {\n      i0.ÉµÉµrestoreView(_r5);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonKeyUp());\n    });\n    i0.ÉµÉµtemplate(5, InputNumber_span_4_span_5_Template, 1, 2, \"span\", 13)(6, InputNumber_span_4_ng_container_6_Template, 3, 2, \"ng-container\", 3);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµattribute(\"data-pc-section\", \"buttonGroup\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµclassMap(ctx_r2.incrementButtonClass);\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction0(17, _c2))(\"disabled\", ctx_r2.disabled);\n    i0.ÉµÉµattribute(\"aria-hidden\", true)(\"data-pc-section\", \"incrementbutton\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.incrementButtonIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.incrementButtonIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµclassMap(ctx_r2.decrementButtonClass);\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction0(18, _c3))(\"disabled\", ctx_r2.disabled);\n    i0.ÉµÉµattribute(\"aria-hidden\", true)(\"data-pc-section\", ctx_r2.decrementbutton);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.decrementButtonIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.decrementButtonIcon);\n  }\n}\nfunction InputNumber_button_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngClass\", ctx_r2.incrementButtonIcon);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"incrementbuttonicon\");\n  }\n}\nfunction InputNumber_button_5_ng_container_2_AngleUpIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleUpIcon\");\n  }\n  if (rf & 2) {\n    i0.ÉµÉµattribute(\"data-pc-section\", \"incrementbuttonicon\");\n  }\n}\nfunction InputNumber_button_5_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_button_5_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, InputNumber_button_5_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_button_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, InputNumber_button_5_ng_container_2_AngleUpIcon_1_Template, 1, 1, \"AngleUpIcon\", 3)(2, InputNumber_button_5_ng_container_2_2_Template, 1, 0, null, 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.incrementButtonIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.incrementButtonIconTemplate);\n  }\n}\nfunction InputNumber_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"button\", 12);\n    i0.ÉµÉµlistener(\"mousedown\", function InputNumber_button_5_Template_button_mousedown_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_button_5_Template_button_mouseup_0_listener() {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_button_5_Template_button_mouseleave_0_listener() {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonMouseLeave());\n    })(\"keydown\", function InputNumber_button_5_Template_button_keydown_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_button_5_Template_button_keyup_0_listener() {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onUpButtonKeyUp());\n    });\n    i0.ÉµÉµtemplate(1, InputNumber_button_5_span_1_Template, 1, 2, \"span\", 13)(2, InputNumber_button_5_ng_container_2_Template, 3, 2, \"ng-container\", 3);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r2.incrementButtonClass);\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction0(8, _c2))(\"disabled\", ctx_r2.disabled);\n    i0.ÉµÉµattribute(\"aria-hidden\", true)(\"data-pc-section\", \"incrementbutton\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.incrementButtonIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.incrementButtonIcon);\n  }\n}\nfunction InputNumber_button_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngClass\", ctx_r2.decrementButtonIcon);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"decrementbuttonicon\");\n  }\n}\nfunction InputNumber_button_6_ng_container_2_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleDownIcon\");\n  }\n  if (rf & 2) {\n    i0.ÉµÉµattribute(\"data-pc-section\", \"decrementbuttonicon\");\n  }\n}\nfunction InputNumber_button_6_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_button_6_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, InputNumber_button_6_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_button_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, InputNumber_button_6_ng_container_2_AngleDownIcon_1_Template, 1, 1, \"AngleDownIcon\", 3)(2, InputNumber_button_6_ng_container_2_2_Template, 1, 0, null, 10);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.decrementButtonIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r2.decrementButtonIconTemplate);\n  }\n}\nfunction InputNumber_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"button\", 12);\n    i0.ÉµÉµlistener(\"mousedown\", function InputNumber_button_6_Template_button_mousedown_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r7);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_button_6_Template_button_mouseup_0_listener() {\n      i0.ÉµÉµrestoreView(_r7);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_button_6_Template_button_mouseleave_0_listener() {\n      i0.ÉµÉµrestoreView(_r7);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonMouseLeave());\n    })(\"keydown\", function InputNumber_button_6_Template_button_keydown_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r7);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_button_6_Template_button_keyup_0_listener() {\n      i0.ÉµÉµrestoreView(_r7);\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.onDownButtonKeyUp());\n    });\n    i0.ÉµÉµtemplate(1, InputNumber_button_6_span_1_Template, 1, 2, \"span\", 13)(2, InputNumber_button_6_ng_container_2_Template, 3, 2, \"ng-container\", 3);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r2.decrementButtonClass);\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction0(8, _c3))(\"disabled\", ctx_r2.disabled);\n    i0.ÉµÉµattribute(\"aria-hidden\", true)(\"data-pc-section\", \"decrementbutton\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.decrementButtonIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r2.decrementButtonIcon);\n  }\n}\nconst INPUTNUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputNumber),\n  multi: true\n};\n/**\n * InputNumber is an input component to provide numerical input.\n * @group Components\n */\nclass InputNumber {\n  document;\n  el;\n  cd;\n  injector;\n  /**\n   * Displays spinner buttons.\n   * @group Props\n   */\n  showButtons = false;\n  /**\n   * Whether to format the value.\n   * @group Props\n   */\n  format = true;\n  /**\n   * Layout of the buttons, valid values are \"stacked\" (default), \"horizontal\" and \"vertical\".\n   * @group Props\n   */\n  buttonLayout = 'stacked';\n  /**\n   * Identifier of the focus input to match a label defined for the component.\n   * @group Props\n   */\n  inputId;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Advisory information to display on input.\n   * @group Props\n   */\n  placeholder;\n  /**\n   * Size of the input field.\n   * @group Props\n   */\n  size;\n  /**\n   * Maximum number of character allows in the input field.\n   * @group Props\n   */\n  maxlength;\n  /**\n   * Specifies tab order of the element.\n   * @group Props\n   */\n  tabindex;\n  /**\n   * Title text of the input text.\n   * @group Props\n   */\n  title;\n  /**\n   * Specifies one or more IDs in the DOM that labels the input field.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Used to define a string that labels the input element.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Used to indicate that user input is required on an element before a form can be submitted.\n   * @group Props\n   */\n  ariaRequired;\n  /**\n   * Name of the input field.\n   * @group Props\n   */\n  name;\n  /**\n   * Indicates that whether the input field is required.\n   * @group Props\n   */\n  required;\n  /**\n   * Used to define a string that autocomplete attribute the current element.\n   * @group Props\n   */\n  autocomplete;\n  /**\n   * Mininum boundary value.\n   * @group Props\n   */\n  min;\n  /**\n   * Maximum boundary value.\n   * @group Props\n   */\n  max;\n  /**\n   * Style class of the increment button.\n   * @group Props\n   */\n  incrementButtonClass;\n  /**\n   * Style class of the decrement button.\n   * @group Props\n   */\n  decrementButtonClass;\n  /**\n   * Style class of the increment button.\n   * @group Props\n   */\n  incrementButtonIcon;\n  /**\n   * Style class of the decrement button.\n   * @group Props\n   */\n  decrementButtonIcon;\n  /**\n   * When present, it specifies that an input field is read-only.\n   * @group Props\n   */\n  readonly = false;\n  /**\n   * Step factor to increment/decrement the value.\n   * @group Props\n   */\n  step = 1;\n  /**\n   * Determines whether the input field is empty.\n   * @group Props\n   */\n  allowEmpty = true;\n  /**\n   * Locale to be used in formatting.\n   * @group Props\n   */\n  locale;\n  /**\n   * The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\"; the default is \"best fit\". See Locale Negotiation for details.\n   * @group Props\n   */\n  localeMatcher;\n  /**\n   * Defines the behavior of the component, valid values are \"decimal\" and \"currency\".\n   * @group Props\n   */\n  mode = 'decimal';\n  /**\n   * The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB. There is no default value; if the style is \"currency\", the currency property must be provided.\n   * @group Props\n   */\n  currency;\n  /**\n   * How to display the currency in currency formatting. Possible values are \"symbol\" to use a localized currency symbol such as â¬, Ã¼\"code\" to use the ISO currency code, \"name\" to use a localized currency name such as \"dollar\"; the default is \"symbol\".\n   * @group Props\n   */\n  currencyDisplay;\n  /**\n   * Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators.\n   * @group Props\n   */\n  useGrouping = true;\n  /**\n   * The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information).\n   * @group Props\n   */\n  minFractionDigits;\n  /**\n   * The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3; the default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information).\n   * @group Props\n   */\n  maxFractionDigits;\n  /**\n   * Text to display before the value.\n   * @group Props\n   */\n  prefix;\n  /**\n   * Text to display after the value.\n   * @group Props\n   */\n  suffix;\n  /**\n   * Inline style of the input field.\n   * @group Props\n   */\n  inputStyle;\n  /**\n   * Style class of the input field.\n   * @group Props\n   */\n  inputStyleClass;\n  /**\n   * When enabled, a clear icon is displayed to clear the value.\n   * @group Props\n   */\n  showClear = false;\n  /**\n   * When present, it specifies that the element should be disabled.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    if (disabled) this.focused = false;\n    this._disabled = disabled;\n    if (this.timer) this.clearTimer();\n  }\n  /**\n   * Callback to invoke on input.\n   * @param {InputNumberInputEvent} event - Custom input event.\n   * @group Emits\n   */\n  onInput = new EventEmitter();\n  /**\n   * Callback to invoke when the component receives focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onFocus = new EventEmitter();\n  /**\n   * Callback to invoke when the component loses focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onBlur = new EventEmitter();\n  /**\n   * Callback to invoke on input key press.\n   * @param {KeyboardEvent} event - Keyboard event.\n   * @group Emits\n   */\n  onKeyDown = new EventEmitter();\n  /**\n   * Callback to invoke when clear token is clicked.\n   * @group Emits\n   */\n  onClear = new EventEmitter();\n  input;\n  templates;\n  clearIconTemplate;\n  incrementButtonIconTemplate;\n  decrementButtonIconTemplate;\n  value;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  focused;\n  initialized;\n  groupChar = '';\n  prefixChar = '';\n  suffixChar = '';\n  isSpecialChar;\n  timer;\n  lastValue;\n  _numeral;\n  numberFormat;\n  _decimal;\n  _decimalChar;\n  _group;\n  _minusSign;\n  _currency;\n  _prefix;\n  _suffix;\n  _index;\n  _disabled;\n  ngControl = null;\n  constructor(document, el, cd, injector) {\n    this.document = document;\n    this.el = el;\n    this.cd = cd;\n    this.injector = injector;\n  }\n  ngOnChanges(simpleChange) {\n    const props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\n    if (props.some(p => !!simpleChange[p])) {\n      this.updateConstructParser();\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'clearicon':\n          this.clearIconTemplate = item.template;\n          break;\n        case 'incrementbuttonicon':\n          this.incrementButtonIconTemplate = item.template;\n          break;\n        case 'decrementbuttonicon':\n          this.decrementButtonIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl, null, {\n      optional: true\n    });\n    this.constructParser();\n    this.initialized = true;\n  }\n  getOptions() {\n    return {\n      localeMatcher: this.localeMatcher,\n      style: this.mode,\n      currency: this.currency,\n      currencyDisplay: this.currencyDisplay,\n      useGrouping: this.useGrouping,\n      minimumFractionDigits: this.minFractionDigits,\n      maximumFractionDigits: this.maxFractionDigits\n    };\n  }\n  constructParser() {\n    this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n    const numerals = [...new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    }).format(9876543210)].reverse();\n    const index = new Map(numerals.map((d, i) => [d, i]));\n    this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n    this._group = this.getGroupingExpression();\n    this._minusSign = this.getMinusSignExpression();\n    this._currency = this.getCurrencyExpression();\n    this._decimal = this.getDecimalExpression();\n    this._decimalChar = this.getDecimalChar();\n    this._suffix = this.getSuffixExpression();\n    this._prefix = this.getPrefixExpression();\n    this._index = d => index.get(d);\n  }\n  updateConstructParser() {\n    if (this.initialized) {\n      this.constructParser();\n    }\n  }\n  escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  getDecimalExpression() {\n    const decimalChar = this.getDecimalChar();\n    return new RegExp(`[${decimalChar}]`, 'g');\n  }\n  getDecimalChar() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      ...this.getOptions(),\n      useGrouping: false\n    });\n    return formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, '');\n  }\n  getGroupingExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      useGrouping: true\n    });\n    this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n    return new RegExp(`[${this.groupChar}]`, 'g');\n  }\n  getMinusSignExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    });\n    return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\n  }\n  getCurrencyExpression() {\n    if (this.currency) {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: 'currency',\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n      return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g');\n    }\n    return new RegExp(`[]`, 'g');\n  }\n  getPrefixExpression() {\n    if (this.prefix) {\n      this.prefixChar = this.prefix;\n    } else {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay\n      });\n      this.prefixChar = formatter.format(1).split('1')[0];\n    }\n    return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g');\n  }\n  getSuffixExpression() {\n    if (this.suffix) {\n      this.suffixChar = this.suffix;\n    } else {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n      this.suffixChar = formatter.format(1).split('1')[1];\n    }\n    return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g');\n  }\n  formatValue(value) {\n    if (value != null) {\n      if (value === '-') {\n        // Minus sign\n        return value;\n      }\n      if (this.format) {\n        let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n        let formattedValue = formatter.format(value);\n        if (this.prefix) {\n          formattedValue = this.prefix + formattedValue;\n        }\n        if (this.suffix) {\n          formattedValue = formattedValue + this.suffix;\n        }\n        return formattedValue;\n      }\n      return value.toString();\n    }\n    return '';\n  }\n  parseValue(text) {\n    let filteredText = text.replace(this._suffix, '').replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '').replace(this._group, '').replace(this._minusSign, '-').replace(this._decimal, '.').replace(this._numeral, this._index);\n    if (filteredText) {\n      if (filteredText === '-')\n        // Minus sign\n        return filteredText;\n      let parsedValue = +filteredText;\n      return isNaN(parsedValue) ? null : parsedValue;\n    }\n    return null;\n  }\n  repeat(event, interval, dir) {\n    if (this.readonly) {\n      return;\n    }\n    let i = interval || 500;\n    this.clearTimer();\n    this.timer = setTimeout(() => {\n      this.repeat(event, 40, dir);\n    }, i);\n    this.spin(event, dir);\n  }\n  spin(event, dir) {\n    let step = this.step * dir;\n    let currentValue = this.parseValue(this.input?.nativeElement.value) || 0;\n    let newValue = this.validateValue(currentValue + step);\n    if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n      return;\n    }\n    this.updateInput(newValue, null, 'spin', null);\n    this.updateModel(event, newValue);\n    this.handleOnInput(event, currentValue, newValue);\n  }\n  clear() {\n    this.value = null;\n    this.onModelChange(this.value);\n    this.onClear.emit();\n  }\n  onUpButtonMouseDown(event) {\n    if (event.button === 2) {\n      this.clearTimer();\n      return;\n    }\n    if (!this.disabled) {\n      this.input?.nativeElement.focus();\n      this.repeat(event, null, 1);\n      event.preventDefault();\n    }\n  }\n  onUpButtonMouseUp() {\n    if (!this.disabled) {\n      this.clearTimer();\n    }\n  }\n  onUpButtonMouseLeave() {\n    if (!this.disabled) {\n      this.clearTimer();\n    }\n  }\n  onUpButtonKeyDown(event) {\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.repeat(event, null, 1);\n    }\n  }\n  onUpButtonKeyUp() {\n    if (!this.disabled) {\n      this.clearTimer();\n    }\n  }\n  onDownButtonMouseDown(event) {\n    if (event.button === 2) {\n      this.clearTimer();\n      return;\n    }\n    if (!this.disabled) {\n      this.input?.nativeElement.focus();\n      this.repeat(event, null, -1);\n      event.preventDefault();\n    }\n  }\n  onDownButtonMouseUp() {\n    if (!this.disabled) {\n      this.clearTimer();\n    }\n  }\n  onDownButtonMouseLeave() {\n    if (!this.disabled) {\n      this.clearTimer();\n    }\n  }\n  onDownButtonKeyUp() {\n    if (!this.disabled) {\n      this.clearTimer();\n    }\n  }\n  onDownButtonKeyDown(event) {\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.repeat(event, null, -1);\n    }\n  }\n  onUserInput(event) {\n    if (this.readonly) {\n      return;\n    }\n    if (this.isSpecialChar) {\n      event.target.value = this.lastValue;\n    }\n    this.isSpecialChar = false;\n  }\n  onInputKeyDown(event) {\n    if (this.readonly) {\n      return;\n    }\n    this.lastValue = event.target.value;\n    if (event.shiftKey || event.altKey) {\n      this.isSpecialChar = true;\n      return;\n    }\n    let selectionStart = event.target.selectionStart;\n    let selectionEnd = event.target.selectionEnd;\n    let inputValue = event.target.value;\n    let newValueStr = null;\n    if (event.altKey) {\n      event.preventDefault();\n    }\n    switch (event.code) {\n      case 'ArrowUp':\n        this.spin(event, 1);\n        event.preventDefault();\n        break;\n      case 'ArrowDown':\n        this.spin(event, -1);\n        event.preventDefault();\n        break;\n      case 'ArrowLeft':\n        for (let index = selectionStart; index <= inputValue.length; index++) {\n          const previousCharIndex = index === 0 ? 0 : index - 1;\n          if (this.isNumeralChar(inputValue.charAt(previousCharIndex))) {\n            this.input.nativeElement.setSelectionRange(index, index);\n            break;\n          }\n        }\n        break;\n      case 'ArrowRight':\n        for (let index = selectionEnd; index >= 0; index--) {\n          if (this.isNumeralChar(inputValue.charAt(index))) {\n            this.input.nativeElement.setSelectionRange(index, index);\n            break;\n          }\n        }\n        break;\n      case 'Tab':\n      case 'Enter':\n        newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\n        this.input.nativeElement.value = this.formatValue(newValueStr);\n        this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\n        this.updateModel(event, newValueStr);\n        break;\n      case 'Backspace':\n        {\n          event.preventDefault();\n          if (selectionStart === selectionEnd) {\n            const deleteChar = inputValue.charAt(selectionStart - 1);\n            const {\n              decimalCharIndex,\n              decimalCharIndexWithoutPrefix\n            } = this.getDecimalCharIndexes(inputValue);\n            if (this.isNumeralChar(deleteChar)) {\n              const decimalLength = this.getDecimalLength(inputValue);\n              if (this._group.test(deleteChar)) {\n                this._group.lastIndex = 0;\n                newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n              } else if (this._decimal.test(deleteChar)) {\n                this._decimal.lastIndex = 0;\n                if (decimalLength) {\n                  this.input?.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                } else {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                }\n              } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\n              } else if (decimalCharIndexWithoutPrefix === 1) {\n                newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n              }\n            } else if (this.mode === 'currency' && deleteChar.search(this._currency) != -1) {\n              newValueStr = inputValue.slice(1);\n            }\n            this.updateValue(event, newValueStr, null, 'delete-single');\n          } else {\n            newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n            this.updateValue(event, newValueStr, null, 'delete-range');\n          }\n          break;\n        }\n      case 'Delete':\n        event.preventDefault();\n        if (selectionStart === selectionEnd) {\n          const deleteChar = inputValue.charAt(selectionStart);\n          const {\n            decimalCharIndex,\n            decimalCharIndexWithoutPrefix\n          } = this.getDecimalCharIndexes(inputValue);\n          if (this.isNumeralChar(deleteChar)) {\n            const decimalLength = this.getDecimalLength(inputValue);\n            if (this._group.test(deleteChar)) {\n              this._group.lastIndex = 0;\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n            } else if (this._decimal.test(deleteChar)) {\n              this._decimal.lastIndex = 0;\n              if (decimalLength) {\n                this.input?.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n              }\n            } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n              const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n              newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1);\n            } else if (decimalCharIndexWithoutPrefix === 1) {\n              newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n              newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n            } else {\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n            }\n          }\n          this.updateValue(event, newValueStr, null, 'delete-back-single');\n        } else {\n          newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, null, 'delete-range');\n        }\n        break;\n      case 'Home':\n        if (this.min) {\n          this.updateModel(event, this.min);\n          event.preventDefault();\n        }\n        break;\n      case 'End':\n        if (this.max) {\n          this.updateModel(event, this.max);\n          event.preventDefault();\n        }\n        break;\n      default:\n        break;\n    }\n    this.onKeyDown.emit(event);\n  }\n  onInputKeyPress(event) {\n    if (this.readonly) {\n      return;\n    }\n    let code = event.which || event.keyCode;\n    let char = String.fromCharCode(code);\n    let isDecimalSign = this.isDecimalSign(char);\n    const isMinusSign = this.isMinusSign(char);\n    if (code != 13) {\n      event.preventDefault();\n    }\n    if (!isDecimalSign && event.code === 'NumpadDecimal') {\n      isDecimalSign = true;\n      char = this._decimalChar;\n      code = char.charCodeAt(0);\n    }\n    const newValue = this.parseValue(this.input.nativeElement.value + char);\n    const newValueStr = newValue != null ? newValue.toString() : '';\n    if (this.maxlength && this.getSelectedText()?.length == this.maxlength) {\n      this.insert(event, char, {\n        isDecimalSign,\n        isMinusSign\n      });\n      return;\n    }\n    if (this.maxlength && newValueStr.length > this.maxlength) {\n      return;\n    }\n    if (48 <= code && code <= 57 || isMinusSign || isDecimalSign) {\n      this.insert(event, char, {\n        isDecimalSign,\n        isMinusSign\n      });\n    }\n  }\n  getSelectedText() {\n    return window?.getSelection()?.toString().replaceAll(/[^0-9']/g, '') || '';\n  }\n  onPaste(event) {\n    if (!this.disabled && !this.readonly) {\n      event.preventDefault();\n      let data = (event.clipboardData || this.document.defaultView['clipboardData']).getData('Text');\n      if (data) {\n        if (this.maxlength) {\n          data = data.toString().substring(0, this.maxlength);\n        }\n        let filteredData = this.parseValue(data);\n        if (filteredData != null) {\n          this.insert(event, filteredData.toString());\n        }\n      }\n    }\n  }\n  allowMinusSign() {\n    return this.min == null || this.min < 0;\n  }\n  isMinusSign(char) {\n    if (this._minusSign.test(char) || char === '-') {\n      this._minusSign.lastIndex = 0;\n      return true;\n    }\n    return false;\n  }\n  isDecimalSign(char) {\n    if (this._decimal.test(char)) {\n      this._decimal.lastIndex = 0;\n      return true;\n    }\n    return false;\n  }\n  isDecimalMode() {\n    return this.mode === 'decimal';\n  }\n  getDecimalCharIndexes(val) {\n    let decimalCharIndex = val.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    const filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '');\n    const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    return {\n      decimalCharIndex,\n      decimalCharIndexWithoutPrefix\n    };\n  }\n  getCharIndexes(val) {\n    const decimalCharIndex = val.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    const minusCharIndex = val.search(this._minusSign);\n    this._minusSign.lastIndex = 0;\n    const suffixCharIndex = val.search(this._suffix);\n    this._suffix.lastIndex = 0;\n    const currencyCharIndex = val.search(this._currency);\n    this._currency.lastIndex = 0;\n    return {\n      decimalCharIndex,\n      minusCharIndex,\n      suffixCharIndex,\n      currencyCharIndex\n    };\n  }\n  insert(event, text, sign = {\n    isDecimalSign: false,\n    isMinusSign: false\n  }) {\n    const minusCharIndexOnText = text.search(this._minusSign);\n    this._minusSign.lastIndex = 0;\n    if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n      return;\n    }\n    let selectionStart = this.input?.nativeElement.selectionStart;\n    let selectionEnd = this.input?.nativeElement.selectionEnd;\n    let inputValue = this.input?.nativeElement.value.trim();\n    const {\n      decimalCharIndex,\n      minusCharIndex,\n      suffixCharIndex,\n      currencyCharIndex\n    } = this.getCharIndexes(inputValue);\n    let newValueStr;\n    if (sign.isMinusSign) {\n      if (selectionStart === 0) {\n        newValueStr = inputValue;\n        if (minusCharIndex === -1 || selectionEnd !== 0) {\n          newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n        }\n        this.updateValue(event, newValueStr, text, 'insert');\n      }\n    } else if (sign.isDecimalSign) {\n      if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n        this.updateValue(event, inputValue, text, 'insert');\n      } else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, 'insert');\n      } else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, 'insert');\n      }\n    } else {\n      const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n      const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n      if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n        if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n          const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\n          newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\n          this.updateValue(event, newValueStr, text, operation);\n        }\n      } else {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, operation);\n      }\n    }\n  }\n  insertText(value, text, start, end) {\n    let textSplit = text === '.' ? text : text.split('.');\n    if (textSplit.length === 2) {\n      const decimalCharIndex = value.slice(start, end).search(this._decimal);\n      this._decimal.lastIndex = 0;\n      return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n    } else if (end - start === value.length) {\n      return this.formatValue(text);\n    } else if (start === 0) {\n      return text + value.slice(end);\n    } else if (end === value.length) {\n      return value.slice(0, start) + text;\n    } else {\n      return value.slice(0, start) + text + value.slice(end);\n    }\n  }\n  deleteRange(value, start, end) {\n    let newValueStr;\n    if (end - start === value.length) newValueStr = '';else if (start === 0) newValueStr = value.slice(end);else if (end === value.length) newValueStr = value.slice(0, start);else newValueStr = value.slice(0, start) + value.slice(end);\n    return newValueStr;\n  }\n  initCursor() {\n    let selectionStart = this.input?.nativeElement.selectionStart;\n    let inputValue = this.input?.nativeElement.value;\n    let valueLength = inputValue.length;\n    let index = null;\n    // remove prefix\n    let prefixLength = (this.prefixChar || '').length;\n    inputValue = inputValue.replace(this._prefix, '');\n    selectionStart = selectionStart - prefixLength;\n    let char = inputValue.charAt(selectionStart);\n    if (this.isNumeralChar(char)) {\n      return selectionStart + prefixLength;\n    }\n    //left\n    let i = selectionStart - 1;\n    while (i >= 0) {\n      char = inputValue.charAt(i);\n      if (this.isNumeralChar(char)) {\n        index = i + prefixLength;\n        break;\n      } else {\n        i--;\n      }\n    }\n    if (index !== null) {\n      this.input?.nativeElement.setSelectionRange(index + 1, index + 1);\n    } else {\n      i = selectionStart;\n      while (i < valueLength) {\n        char = inputValue.charAt(i);\n        if (this.isNumeralChar(char)) {\n          index = i + prefixLength;\n          break;\n        } else {\n          i++;\n        }\n      }\n      if (index !== null) {\n        this.input?.nativeElement.setSelectionRange(index, index);\n      }\n    }\n    return index || 0;\n  }\n  onInputClick() {\n    const currentValue = this.input?.nativeElement.value;\n    if (!this.readonly && currentValue !== DomHandler.getSelection()) {\n      this.initCursor();\n    }\n  }\n  isNumeralChar(char) {\n    if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n      this.resetRegex();\n      return true;\n    }\n    return false;\n  }\n  resetRegex() {\n    this._numeral.lastIndex = 0;\n    this._decimal.lastIndex = 0;\n    this._group.lastIndex = 0;\n    this._minusSign.lastIndex = 0;\n  }\n  updateValue(event, valueStr, insertedValueStr, operation) {\n    let currentValue = this.input?.nativeElement.value;\n    let newValue = null;\n    if (valueStr != null) {\n      newValue = this.parseValue(valueStr);\n      newValue = !newValue && !this.allowEmpty ? 0 : newValue;\n      this.updateInput(newValue, insertedValueStr, operation, valueStr);\n      this.handleOnInput(event, currentValue, newValue);\n    }\n  }\n  handleOnInput(event, currentValue, newValue) {\n    if (this.isValueChanged(currentValue, newValue)) {\n      this.input.nativeElement.value = this.formatValue(newValue);\n      this.input?.nativeElement.setAttribute('aria-valuenow', newValue);\n      this.updateModel(event, newValue);\n      this.onInput.emit({\n        originalEvent: event,\n        value: newValue,\n        formattedValue: currentValue\n      });\n    }\n  }\n  isValueChanged(currentValue, newValue) {\n    if (newValue === null && currentValue !== null) {\n      return true;\n    }\n    if (newValue != null) {\n      let parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n      return newValue !== parsedCurrentValue;\n    }\n    return false;\n  }\n  validateValue(value) {\n    if (value === '-' || value == null) {\n      return null;\n    }\n    if (this.min != null && value < this.min) {\n      return this.min;\n    }\n    if (this.max != null && value > this.max) {\n      return this.max;\n    }\n    return value;\n  }\n  updateInput(value, insertedValueStr, operation, valueStr) {\n    insertedValueStr = insertedValueStr || '';\n    let inputValue = this.input?.nativeElement.value;\n    let newValue = this.formatValue(value);\n    let currentLength = inputValue.length;\n    if (newValue !== valueStr) {\n      newValue = this.concatValues(newValue, valueStr);\n    }\n    if (currentLength === 0) {\n      this.input.nativeElement.value = newValue;\n      this.input.nativeElement.setSelectionRange(0, 0);\n      const index = this.initCursor();\n      const selectionEnd = index + insertedValueStr.length;\n      this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n    } else {\n      let selectionStart = this.input.nativeElement.selectionStart;\n      let selectionEnd = this.input.nativeElement.selectionEnd;\n      if (this.maxlength && newValue.length > this.maxlength) {\n        newValue = newValue.slice(0, this.maxlength);\n        selectionStart = Math.min(selectionStart, this.maxlength);\n        selectionEnd = Math.min(selectionEnd, this.maxlength);\n      }\n      if (this.maxlength && this.maxlength < newValue.length) {\n        return;\n      }\n      this.input.nativeElement.value = newValue;\n      let newLength = newValue.length;\n      if (operation === 'range-insert') {\n        const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n        const startValueStr = startValue !== null ? startValue.toString() : '';\n        const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\n        const sRegex = new RegExp(startExpr, 'g');\n        sRegex.test(newValue);\n        const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\n        const tRegex = new RegExp(tExpr, 'g');\n        tRegex.test(newValue.slice(sRegex.lastIndex));\n        selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (newLength === currentLength) {\n        if (operation === 'insert' || operation === 'delete-back-single') this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);else if (operation === 'delete-single') this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);else if (operation === 'delete-range' || operation === 'spin') this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (operation === 'delete-back-single') {\n        let prevChar = inputValue.charAt(selectionEnd - 1);\n        let nextChar = inputValue.charAt(selectionEnd);\n        let diff = currentLength - newLength;\n        let isGroupChar = this._group.test(nextChar);\n        if (isGroupChar && diff === 1) {\n          selectionEnd += 1;\n        } else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n          selectionEnd += -1 * diff + 1;\n        }\n        this._group.lastIndex = 0;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (inputValue === '-' && operation === 'insert') {\n        this.input.nativeElement.setSelectionRange(0, 0);\n        const index = this.initCursor();\n        const selectionEnd = index + insertedValueStr.length + 1;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else {\n        selectionEnd = selectionEnd + (newLength - currentLength);\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      }\n    }\n    this.input.nativeElement.setAttribute('aria-valuenow', value);\n  }\n  concatValues(val1, val2) {\n    if (val1 && val2) {\n      let decimalCharIndex = val2.search(this._decimal);\n      this._decimal.lastIndex = 0;\n      if (this.suffixChar) {\n        return decimalCharIndex !== -1 ? val1 : val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\n      } else {\n        return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\n      }\n    }\n    return val1;\n  }\n  getDecimalLength(value) {\n    if (value) {\n      const valueSplit = value.split(this._decimal);\n      if (valueSplit.length === 2) {\n        return valueSplit[1].replace(this._suffix, '').trim().replace(/\\s/g, '').replace(this._currency, '').length;\n      }\n    }\n    return 0;\n  }\n  onInputFocus(event) {\n    this.focused = true;\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    const newValueNumber = this.validateValue(this.parseValue(this.input.nativeElement.value));\n    const newValueString = newValueNumber?.toString();\n    this.input.nativeElement.value = this.formatValue(newValueString);\n    this.input.nativeElement.setAttribute('aria-valuenow', newValueString);\n    this.updateModel(event, newValueNumber);\n    this.onBlur.emit(event);\n  }\n  formattedValue() {\n    const val = !this.value && !this.allowEmpty ? 0 : this.value;\n    return this.formatValue(val);\n  }\n  updateModel(event, value) {\n    const isBlurUpdateOnMode = this.ngControl?.control?.updateOn === 'blur';\n    if (this.value !== value) {\n      this.value = value;\n      if (!(isBlurUpdateOnMode && this.focused)) {\n        this.onModelChange(value);\n      }\n    } else if (isBlurUpdateOnMode) {\n      this.onModelChange(value);\n    }\n    this.onModelTouched();\n  }\n  writeValue(value) {\n    this.value = value;\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  get filled() {\n    return this.value != null && this.value.toString().length > 0;\n  }\n  clearTimer() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n  static Éµfac = function InputNumber_Factory(t) {\n    return new (t || InputNumber)(i0.ÉµÉµdirectiveInject(DOCUMENT), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(i0.Injector));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: InputNumber,\n    selectors: [[\"p-inputNumber\"]],\n    contentQueries: function InputNumber_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ÉµÉµcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function InputNumber_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n    hostVars: 6,\n    hostBindings: function InputNumber_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ÉµÉµclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused)(\"p-inputnumber-clearable\", ctx.showClear && ctx.buttonLayout != \"vertical\");\n      }\n    },\n    inputs: {\n      showButtons: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showButtons\", \"showButtons\", booleanAttribute],\n      format: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"format\", \"format\", booleanAttribute],\n      buttonLayout: \"buttonLayout\",\n      inputId: \"inputId\",\n      styleClass: \"styleClass\",\n      style: \"style\",\n      placeholder: \"placeholder\",\n      size: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"size\", \"size\", numberAttribute],\n      maxlength: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"maxlength\", \"maxlength\", numberAttribute],\n      tabindex: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"tabindex\", \"tabindex\", numberAttribute],\n      title: \"title\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaLabel: \"ariaLabel\",\n      ariaRequired: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"ariaRequired\", \"ariaRequired\", booleanAttribute],\n      name: \"name\",\n      required: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n      autocomplete: \"autocomplete\",\n      min: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"min\", \"min\", numberAttribute],\n      max: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"max\", \"max\", numberAttribute],\n      incrementButtonClass: \"incrementButtonClass\",\n      decrementButtonClass: \"decrementButtonClass\",\n      incrementButtonIcon: \"incrementButtonIcon\",\n      decrementButtonIcon: \"decrementButtonIcon\",\n      readonly: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"readonly\", \"readonly\", booleanAttribute],\n      step: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"step\", \"step\", numberAttribute],\n      allowEmpty: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"allowEmpty\", \"allowEmpty\", booleanAttribute],\n      locale: \"locale\",\n      localeMatcher: \"localeMatcher\",\n      mode: \"mode\",\n      currency: \"currency\",\n      currencyDisplay: \"currencyDisplay\",\n      useGrouping: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"useGrouping\", \"useGrouping\", booleanAttribute],\n      minFractionDigits: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"minFractionDigits\", \"minFractionDigits\", numberAttribute],\n      maxFractionDigits: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"maxFractionDigits\", \"maxFractionDigits\", numberAttribute],\n      prefix: \"prefix\",\n      suffix: \"suffix\",\n      inputStyle: \"inputStyle\",\n      inputStyleClass: \"inputStyleClass\",\n      showClear: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showClear\", \"showClear\", booleanAttribute],\n      disabled: \"disabled\"\n    },\n    outputs: {\n      onInput: \"onInput\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\",\n      onKeyDown: \"onKeyDown\",\n      onClear: \"onClear\"\n    },\n    features: [i0.ÉµÉµProvidersFeature([INPUTNUMBER_VALUE_ACCESSOR]), i0.ÉµÉµInputTransformsFeature, i0.ÉµÉµNgOnChangesFeature],\n    decls: 7,\n    vars: 39,\n    consts: [[\"input\", \"\"], [3, \"ngClass\", \"ngStyle\"], [\"pInputText\", \"\", \"role\", \"spinbutton\", \"inputmode\", \"decimal\", 3, \"input\", \"keydown\", \"keypress\", \"paste\", \"click\", \"focus\", \"blur\", \"ngClass\", \"ngStyle\", \"value\", \"disabled\", \"readonly\"], [4, \"ngIf\"], [\"class\", \"p-inputnumber-button-group\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-icon-only\", \"tabindex\", \"-1\", 3, \"ngClass\", \"class\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\", 4, \"ngIf\"], [3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-inputnumber-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"click\", \"ngClass\"], [1, \"p-inputnumber-clear-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [1, \"p-inputnumber-button-group\"], [\"type\", \"button\", \"pButton\", \"\", \"tabindex\", \"-1\", 1, \"p-button-icon-only\", 3, \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\", \"ngClass\", \"disabled\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"]],\n    template: function InputNumber_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ÉµÉµgetCurrentView();\n        i0.ÉµÉµelementStart(0, \"span\", 1)(1, \"input\", 2, 0);\n        i0.ÉµÉµlistener(\"input\", function InputNumber_Template_input_input_1_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onUserInput($event));\n        })(\"keydown\", function InputNumber_Template_input_keydown_1_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onInputKeyDown($event));\n        })(\"keypress\", function InputNumber_Template_input_keypress_1_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onInputKeyPress($event));\n        })(\"paste\", function InputNumber_Template_input_paste_1_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onPaste($event));\n        })(\"click\", function InputNumber_Template_input_click_1_listener() {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onInputClick());\n        })(\"focus\", function InputNumber_Template_input_focus_1_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onInputFocus($event));\n        })(\"blur\", function InputNumber_Template_input_blur_1_listener($event) {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.onInputBlur($event));\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtemplate(3, InputNumber_ng_container_3_Template, 3, 2, \"ng-container\", 3)(4, InputNumber_span_4_Template, 7, 19, \"span\", 4)(5, InputNumber_button_5_Template, 3, 9, \"button\", 5)(6, InputNumber_button_6_Template, 3, 9, \"button\", 5);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.styleClass);\n        i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction3(35, _c1, ctx.showButtons && ctx.buttonLayout === \"stacked\", ctx.showButtons && ctx.buttonLayout === \"horizontal\", ctx.showButtons && ctx.buttonLayout === \"vertical\"))(\"ngStyle\", ctx.style);\n        i0.ÉµÉµattribute(\"data-pc-name\", \"inputnumber\")(\"data-pc-section\", \"root\");\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµclassMap(ctx.inputStyleClass);\n        i0.ÉµÉµproperty(\"ngClass\", \"p-inputnumber-input\")(\"ngStyle\", ctx.inputStyle)(\"value\", ctx.formattedValue())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly);\n        i0.ÉµÉµattribute(\"id\", ctx.inputId)(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.value)(\"placeholder\", ctx.placeholder)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"title\", ctx.title)(\"size\", ctx.size)(\"name\", ctx.name)(\"autocomplete\", ctx.autocomplete)(\"maxlength\", ctx.maxlength)(\"tabindex\", ctx.tabindex)(\"aria-required\", ctx.ariaRequired)(\"required\", ctx.required)(\"min\", ctx.min)(\"max\", ctx.max)(\"data-pc-section\", \"input\");\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.buttonLayout != \"vertical\" && ctx.showClear && ctx.value);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout === \"stacked\");\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n      }\n    },\n    dependencies: () => [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.InputText, i3.ButtonDirective, TimesIcon, AngleUpIcon, AngleDownIcon],\n    styles: [\"@layer primeng{p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(InputNumber, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputNumber',\n      template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [attr.data-pc-name]=\"'inputnumber'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <input\n                pInputText\n                #input\n                [attr.id]=\"inputId\"\n                role=\"spinbutton\"\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                [value]=\"formattedValue()\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"value\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.title]=\"title\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-required]=\"ariaRequired\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                [attr.data-pc-section]=\"'input'\"\n            />\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\" [attr.data-pc-section]=\"'clearIcon'\" />\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\" [attr.data-pc-section]=\"'clearIcon'\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\" [attr.data-pc-section]=\"'buttonGroup'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"incrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    tabindex=\"-1\"\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                    [attr.aria-hidden]=\"true\"\n                    [attr.data-pc-section]=\"'incrementbutton'\"\n                >\n                    <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\" [attr.data-pc-section]=\"'incrementbuttonicon'\"></span>\n                    <ng-container *ngIf=\"!incrementButtonIcon\">\n                        <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" [attr.data-pc-section]=\"'incrementbuttonicon'\" />\n                        <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"decrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    tabindex=\"-1\"\n                    [attr.aria-hidden]=\"true\"\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                    [attr.data-pc-section]=\"decrementbutton\"\n                >\n                    <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\" [attr.data-pc-section]=\"'decrementbuttonicon'\"></span>\n                    <ng-container *ngIf=\"!decrementButtonIcon\">\n                        <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" [attr.data-pc-section]=\"'decrementbuttonicon'\" />\n                        <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n            </span>\n            <button\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                class=\"p-button-icon-only\"\n                [disabled]=\"disabled\"\n                tabindex=\"-1\"\n                [attr.aria-hidden]=\"true\"\n                (mousedown)=\"onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n                [attr.data-pc-section]=\"'incrementbutton'\"\n            >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\" [attr.data-pc-section]=\"'incrementbuttonicon'\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" [attr.data-pc-section]=\"'incrementbuttonicon'\" />\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            <button\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                class=\"p-button-icon-only\"\n                [class]=\"decrementButtonClass\"\n                [disabled]=\"disabled\"\n                tabindex=\"-1\"\n                [attr.aria-hidden]=\"true\"\n                (mousedown)=\"onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n                [attr.data-pc-section]=\"'decrementbutton'\"\n            >\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\" [attr.data-pc-section]=\"'decrementbuttonicon'\"></span>\n                <ng-container *ngIf=\"!decrementButtonIcon\">\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" [attr.data-pc-section]=\"'decrementbuttonicon'\" />\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n        </span>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [INPUTNUMBER_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused',\n        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\n      },\n      styles: [\"@layer primeng{p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}}\\n\"]\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.Injector\n  }], {\n    showButtons: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    format: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    buttonLayout: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    size: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    maxlength: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    title: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaRequired: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    min: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    max: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    incrementButtonClass: [{\n      type: Input\n    }],\n    decrementButtonClass: [{\n      type: Input\n    }],\n    incrementButtonIcon: [{\n      type: Input\n    }],\n    decrementButtonIcon: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    step: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    allowEmpty: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    minFractionDigits: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    maxFractionDigits: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass InputNumberModule {\n  static Éµfac = function InputNumberModule_Factory(t) {\n    return new (t || InputNumberModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: InputNumberModule,\n    declarations: [InputNumber],\n    imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon],\n    exports: [InputNumber, SharedModule]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(InputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon],\n      exports: [InputNumber, SharedModule],\n      declarations: [InputNumber]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass AngleDoubleLeftIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµAngleDoubleLeftIcon_BaseFactory;\n    return function AngleDoubleLeftIcon_Factory(t) {\n      return (ÉµAngleDoubleLeftIcon_BaseFactory || (ÉµAngleDoubleLeftIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(AngleDoubleLeftIcon)))(t || AngleDoubleLeftIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: AngleDoubleLeftIcon,\n    selectors: [[\"AngleDoubleLeftIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M5.71602 11.164C5.80782 11.2021 5.9063 11.2215 6.00569 11.221C6.20216 11.2301 6.39427 11.1612 6.54025 11.0294C6.68191 10.8875 6.76148 10.6953 6.76148 10.4948C6.76148 10.2943 6.68191 10.1021 6.54025 9.96024L3.51441 6.9344L6.54025 3.90855C6.624 3.76126 6.65587 3.59011 6.63076 3.42254C6.60564 3.25498 6.525 3.10069 6.40175 2.98442C6.2785 2.86815 6.11978 2.79662 5.95104 2.7813C5.78229 2.76598 5.61329 2.80776 5.47112 2.89994L1.97123 6.39983C1.82957 6.54167 1.75 6.73393 1.75 6.9344C1.75 7.13486 1.82957 7.32712 1.97123 7.46896L5.47112 10.9991C5.54096 11.0698 5.62422 11.1259 5.71602 11.164ZM11.0488 10.9689C11.1775 11.1156 11.3585 11.2061 11.5531 11.221C11.7477 11.2061 11.9288 11.1156 12.0574 10.9689C12.1815 10.8302 12.25 10.6506 12.25 10.4645C12.25 10.2785 12.1815 10.0989 12.0574 9.96024L9.03158 6.93439L12.0574 3.90855C12.1248 3.76739 12.1468 3.60881 12.1204 3.45463C12.0939 3.30045 12.0203 3.15826 11.9097 3.04765C11.7991 2.93703 11.6569 2.86343 11.5027 2.83698C11.3486 2.81053 11.19 2.83252 11.0488 2.89994L7.51865 6.36957C7.37699 6.51141 7.29742 6.70367 7.29742 6.90414C7.29742 7.1046 7.37699 7.29686 7.51865 7.4387L11.0488 10.9689Z\", \"fill\", \"currentColor\"]],\n    template: function AngleDoubleLeftIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AngleDoubleLeftIcon, [{\n    type: Component,\n    args: [{\n      selector: 'AngleDoubleLeftIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M5.71602 11.164C5.80782 11.2021 5.9063 11.2215 6.00569 11.221C6.20216 11.2301 6.39427 11.1612 6.54025 11.0294C6.68191 10.8875 6.76148 10.6953 6.76148 10.4948C6.76148 10.2943 6.68191 10.1021 6.54025 9.96024L3.51441 6.9344L6.54025 3.90855C6.624 3.76126 6.65587 3.59011 6.63076 3.42254C6.60564 3.25498 6.525 3.10069 6.40175 2.98442C6.2785 2.86815 6.11978 2.79662 5.95104 2.7813C5.78229 2.76598 5.61329 2.80776 5.47112 2.89994L1.97123 6.39983C1.82957 6.54167 1.75 6.73393 1.75 6.9344C1.75 7.13486 1.82957 7.32712 1.97123 7.46896L5.47112 10.9991C5.54096 11.0698 5.62422 11.1259 5.71602 11.164ZM11.0488 10.9689C11.1775 11.1156 11.3585 11.2061 11.5531 11.221C11.7477 11.2061 11.9288 11.1156 12.0574 10.9689C12.1815 10.8302 12.25 10.6506 12.25 10.4645C12.25 10.2785 12.1815 10.0989 12.0574 9.96024L9.03158 6.93439L12.0574 3.90855C12.1248 3.76739 12.1468 3.60881 12.1204 3.45463C12.0939 3.30045 12.0203 3.15826 11.9097 3.04765C11.7991 2.93703 11.6569 2.86343 11.5027 2.83698C11.3486 2.81053 11.19 2.83252 11.0488 2.89994L7.51865 6.36957C7.37699 6.51141 7.29742 6.70367 7.29742 6.90414C7.29742 7.1046 7.37699 7.29686 7.51865 7.4387L11.0488 10.9689Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleDoubleLeftIcon };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass AngleDoubleRightIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµAngleDoubleRightIcon_BaseFactory;\n    return function AngleDoubleRightIcon_Factory(t) {\n      return (ÉµAngleDoubleRightIcon_BaseFactory || (ÉµAngleDoubleRightIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(AngleDoubleRightIcon)))(t || AngleDoubleRightIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: AngleDoubleRightIcon,\n    selectors: [[\"AngleDoubleRightIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M7.68757 11.1451C7.7791 11.1831 7.8773 11.2024 7.9764 11.2019C8.07769 11.1985 8.17721 11.1745 8.26886 11.1312C8.36052 11.088 8.44238 11.0265 8.50943 10.9505L12.0294 7.49085C12.1707 7.34942 12.25 7.15771 12.25 6.95782C12.25 6.75794 12.1707 6.56622 12.0294 6.42479L8.50943 2.90479C8.37014 2.82159 8.20774 2.78551 8.04633 2.80192C7.88491 2.81833 7.73309 2.88635 7.6134 2.99588C7.4937 3.10541 7.41252 3.25061 7.38189 3.40994C7.35126 3.56927 7.37282 3.73423 7.44337 3.88033L10.4605 6.89748L7.44337 9.91463C7.30212 10.0561 7.22278 10.2478 7.22278 10.4477C7.22278 10.6475 7.30212 10.8393 7.44337 10.9807C7.51301 11.0512 7.59603 11.1071 7.68757 11.1451ZM1.94207 10.9505C2.07037 11.0968 2.25089 11.1871 2.44493 11.2019C2.63898 11.1871 2.81949 11.0968 2.94779 10.9505L6.46779 7.49085C6.60905 7.34942 6.68839 7.15771 6.68839 6.95782C6.68839 6.75793 6.60905 6.56622 6.46779 6.42479L2.94779 2.90479C2.80704 2.83757 2.6489 2.81563 2.49517 2.84201C2.34143 2.86839 2.19965 2.94178 2.08936 3.05207C1.97906 3.16237 1.90567 3.30415 1.8793 3.45788C1.85292 3.61162 1.87485 3.76975 1.94207 3.9105L4.95922 6.92765L1.94207 9.9448C1.81838 10.0831 1.75 10.2621 1.75 10.4477C1.75 10.6332 1.81838 10.8122 1.94207 10.9505Z\", \"fill\", \"currentColor\"]],\n    template: function AngleDoubleRightIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AngleDoubleRightIcon, [{\n    type: Component,\n    args: [{\n      selector: 'AngleDoubleRightIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M7.68757 11.1451C7.7791 11.1831 7.8773 11.2024 7.9764 11.2019C8.07769 11.1985 8.17721 11.1745 8.26886 11.1312C8.36052 11.088 8.44238 11.0265 8.50943 10.9505L12.0294 7.49085C12.1707 7.34942 12.25 7.15771 12.25 6.95782C12.25 6.75794 12.1707 6.56622 12.0294 6.42479L8.50943 2.90479C8.37014 2.82159 8.20774 2.78551 8.04633 2.80192C7.88491 2.81833 7.73309 2.88635 7.6134 2.99588C7.4937 3.10541 7.41252 3.25061 7.38189 3.40994C7.35126 3.56927 7.37282 3.73423 7.44337 3.88033L10.4605 6.89748L7.44337 9.91463C7.30212 10.0561 7.22278 10.2478 7.22278 10.4477C7.22278 10.6475 7.30212 10.8393 7.44337 10.9807C7.51301 11.0512 7.59603 11.1071 7.68757 11.1451ZM1.94207 10.9505C2.07037 11.0968 2.25089 11.1871 2.44493 11.2019C2.63898 11.1871 2.81949 11.0968 2.94779 10.9505L6.46779 7.49085C6.60905 7.34942 6.68839 7.15771 6.68839 6.95782C6.68839 6.75793 6.60905 6.56622 6.46779 6.42479L2.94779 2.90479C2.80704 2.83757 2.6489 2.81563 2.49517 2.84201C2.34143 2.86839 2.19965 2.94178 2.08936 3.05207C1.97906 3.16237 1.90567 3.30415 1.8793 3.45788C1.85292 3.61162 1.87485 3.76975 1.94207 3.9105L4.95922 6.92765L1.94207 9.9448C1.81838 10.0831 1.75 10.2621 1.75 10.4477C1.75 10.6332 1.81838 10.8122 1.94207 10.9505Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleDoubleRightIcon };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass AngleLeftIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµAngleLeftIcon_BaseFactory;\n    return function AngleLeftIcon_Factory(t) {\n      return (ÉµAngleLeftIcon_BaseFactory || (ÉµAngleLeftIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(AngleLeftIcon)))(t || AngleLeftIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: AngleLeftIcon,\n    selectors: [[\"AngleLeftIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M8.75 11.185C8.65146 11.1854 8.55381 11.1662 8.4628 11.1284C8.37179 11.0906 8.28924 11.0351 8.22 10.965L4.72 7.46496C4.57955 7.32433 4.50066 7.13371 4.50066 6.93496C4.50066 6.73621 4.57955 6.54558 4.72 6.40496L8.22 2.93496C8.36095 2.84357 8.52851 2.80215 8.69582 2.81733C8.86312 2.83252 9.02048 2.90344 9.14268 3.01872C9.26487 3.134 9.34483 3.28696 9.36973 3.4531C9.39463 3.61924 9.36303 3.78892 9.28 3.93496L6.28 6.93496L9.28 9.93496C9.42045 10.0756 9.49934 10.2662 9.49934 10.465C9.49934 10.6637 9.42045 10.8543 9.28 10.995C9.13526 11.1257 8.9448 11.1939 8.75 11.185Z\", \"fill\", \"currentColor\"]],\n    template: function AngleLeftIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AngleLeftIcon, [{\n    type: Component,\n    args: [{\n      selector: 'AngleLeftIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M8.75 11.185C8.65146 11.1854 8.55381 11.1662 8.4628 11.1284C8.37179 11.0906 8.28924 11.0351 8.22 10.965L4.72 7.46496C4.57955 7.32433 4.50066 7.13371 4.50066 6.93496C4.50066 6.73621 4.57955 6.54558 4.72 6.40496L8.22 2.93496C8.36095 2.84357 8.52851 2.80215 8.69582 2.81733C8.86312 2.83252 9.02048 2.90344 9.14268 3.01872C9.26487 3.134 9.34483 3.28696 9.36973 3.4531C9.39463 3.61924 9.36303 3.78892 9.28 3.93496L6.28 6.93496L9.28 9.93496C9.42045 10.0756 9.49934 10.2662 9.49934 10.465C9.49934 10.6637 9.42045 10.8543 9.28 10.995C9.13526 11.1257 8.9448 11.1939 8.75 11.185Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleLeftIcon };\n", "import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nclass AngleRightIcon extends BaseIcon {\n  static Éµfac = /* @__PURE__ */(() => {\n    let ÉµAngleRightIcon_BaseFactory;\n    return function AngleRightIcon_Factory(t) {\n      return (ÉµAngleRightIcon_BaseFactory || (ÉµAngleRightIcon_BaseFactory = i0.ÉµÉµgetInheritedFactory(AngleRightIcon)))(t || AngleRightIcon);\n    };\n  })();\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: AngleRightIcon,\n    selectors: [[\"AngleRightIcon\"]],\n    standalone: true,\n    features: [i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµStandaloneFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M5.25 11.1728C5.14929 11.1694 5.05033 11.1455 4.9592 11.1025C4.86806 11.0595 4.78666 10.9984 4.72 10.9228C4.57955 10.7822 4.50066 10.5916 4.50066 10.3928C4.50066 10.1941 4.57955 10.0035 4.72 9.86283L7.72 6.86283L4.72 3.86283C4.66067 3.71882 4.64765 3.55991 4.68275 3.40816C4.71785 3.25642 4.79932 3.11936 4.91585 3.01602C5.03238 2.91268 5.17819 2.84819 5.33305 2.83149C5.4879 2.81479 5.64411 2.84671 5.78 2.92283L9.28 6.42283C9.42045 6.56346 9.49934 6.75408 9.49934 6.95283C9.49934 7.15158 9.42045 7.34221 9.28 7.48283L5.78 10.9228C5.71333 10.9984 5.63193 11.0595 5.5408 11.1025C5.44966 11.1455 5.35071 11.1694 5.25 11.1728Z\", \"fill\", \"currentColor\"]],\n    template: function AngleRightIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµnamespaceSVG();\n        i0.ÉµÉµelementStart(0, \"svg\", 0);\n        i0.ÉµÉµelement(1, \"path\", 1);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.getClassNames());\n        i0.ÉµÉµattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AngleRightIcon, [{\n    type: Component,\n    args: [{\n      selector: 'AngleRightIcon',\n      standalone: true,\n      imports: [BaseIcon],\n      template: `\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [attr.aria-label]=\"ariaLabel\" [attr.aria-hidden]=\"ariaHidden\" [attr.role]=\"role\" [class]=\"getClassNames()\">\n            <path\n                d=\"M5.25 11.1728C5.14929 11.1694 5.05033 11.1455 4.9592 11.1025C4.86806 11.0595 4.78666 10.9984 4.72 10.9228C4.57955 10.7822 4.50066 10.5916 4.50066 10.3928C4.50066 10.1941 4.57955 10.0035 4.72 9.86283L7.72 6.86283L4.72 3.86283C4.66067 3.71882 4.64765 3.55991 4.68275 3.40816C4.71785 3.25642 4.79932 3.11936 4.91585 3.01602C5.03238 2.91268 5.17819 2.84819 5.33305 2.83149C5.4879 2.81479 5.64411 2.84671 5.78 2.92283L9.28 6.42283C9.42045 6.56346 9.49934 6.75408 9.49934 6.95283C9.49934 7.15158 9.42045 7.34221 9.28 7.48283L5.78 10.9228C5.71333 10.9984 5.63193 11.0595 5.5408 11.1025C5.44966 11.1455 5.35071 11.1694 5.25 11.1728Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleRightIcon };\n", "import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, numberAttribute, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i3 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { AngleDoubleLeftIcon } from 'primeng/icons/angledoubleleft';\nimport { AngleDoubleRightIcon } from 'primeng/icons/angledoubleright';\nimport { AngleLeftIcon } from 'primeng/icons/angleleft';\nimport { AngleRightIcon } from 'primeng/icons/angleright';\nimport * as i4 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i6 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\n\n/**\n * Paginator is a generic component to display content in paged format.\n * @group Components\n */\nconst _c0 = a0 => ({\n  \"p-disabled\": a0\n});\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nconst _c2 = a0 => ({\n  \"p-highlight\": a0\n});\nfunction Paginator_div_0_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Paginator_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 15);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"start\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.templateLeft)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(3, _c1, ctx_r1.paginatorState));\n  }\n}\nfunction Paginator_div_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 17);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate(ctx_r1.currentPageReport);\n  }\n}\nfunction Paginator_div_0_button_3_AngleDoubleLeftIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleDoubleLeftIcon\", 19);\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-paginator-icon\");\n  }\n}\nfunction Paginator_div_0_button_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_button_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_button_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_button_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 20);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_button_3_span_2_1_Template, 1, 0, null, 21);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.firstPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"button\", 18);\n    i0.ÉµÉµlistener(\"click\", function Paginator_div_0_button_3_Template_button_click_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r3);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.changePageToFirst($event));\n    });\n    i0.ÉµÉµtemplate(1, Paginator_div_0_button_3_AngleDoubleLeftIcon_1_Template, 1, 1, \"AngleDoubleLeftIcon\", 6)(2, Paginator_div_0_button_3_span_2_Template, 2, 1, \"span\", 7);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"disabled\", ctx_r1.isFirstPage() || ctx_r1.empty())(\"ngClass\", i0.ÉµÉµpureFunction1(5, _c0, ctx_r1.isFirstPage() || ctx_r1.empty()));\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.getAriaLabel(\"firstPageLabel\"));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r1.firstPageLinkIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.firstPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_AngleLeftIcon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleLeftIcon\", 19);\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-paginator-icon\");\n  }\n}\nfunction Paginator_div_0_span_6_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_span_6_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_span_6_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 20);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_span_6_1_Template, 1, 0, null, 21);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.previousPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_span_7_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"button\", 24);\n    i0.ÉµÉµlistener(\"click\", function Paginator_div_0_span_7_button_1_Template_button_click_0_listener($event) {\n      const pageLink_r5 = i0.ÉµÉµrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ÉµÉµnextContext(3);\n      return i0.ÉµÉµresetView(ctx_r1.onPageLinkClick($event, pageLink_r5 - 1));\n    });\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const pageLink_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(4, _c2, pageLink_r5 - 1 == ctx_r1.getPage()));\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.getPageAriaLabel(pageLink_r5))(\"aria-current\", pageLink_r5 - 1 == ctx_r1.getPage() ? \"page\" : undefined);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r1.getLocalization(pageLink_r5), \" \");\n  }\n}\nfunction Paginator_div_0_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 22);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_span_7_button_1_Template, 2, 6, \"button\", 23);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngForOf\", ctx_r1.pageLinks);\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµtextInterpolate(ctx_r1.currentPageReport);\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_ng_container_2_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_p_dropdown_8_ng_container_2_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 16);\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.jumpToPageItemTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(2, _c1, item_r7));\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_p_dropdown_8_ng_container_2_ng_template_1_Template, 1, 4, \"ng-template\", 28);\n    i0.ÉµÉµelementContainerEnd();\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_3_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_p_dropdown_8_3_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_p_dropdown_8_3_ng_template_0_Template, 1, 1, \"ng-template\", 29);\n  }\n}\nfunction Paginator_div_0_p_dropdown_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"p-dropdown\", 25);\n    i0.ÉµÉµlistener(\"onChange\", function Paginator_div_0_p_dropdown_8_Template_p_dropdown_onChange_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.onPageDropdownChange($event));\n    });\n    i0.ÉµÉµtemplate(1, Paginator_div_0_p_dropdown_8_ng_template_1_Template, 1, 1, \"ng-template\", 26)(2, Paginator_div_0_p_dropdown_8_ng_container_2_Template, 2, 0, \"ng-container\", 27)(3, Paginator_div_0_p_dropdown_8_3_Template, 1, 0, null, 27);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"options\", ctx_r1.pageItems)(\"ngModel\", ctx_r1.getPage())(\"disabled\", ctx_r1.empty())(\"appendTo\", ctx_r1.dropdownAppendTo)(\"scrollHeight\", ctx_r1.dropdownScrollHeight);\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.getAriaLabel(\"jumpToPageDropdownLabel\"));\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.jumpToPageItemTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_AngleRightIcon_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleRightIcon\", 19);\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-paginator-icon\");\n  }\n}\nfunction Paginator_div_0_span_11_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_span_11_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_span_11_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 20);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_span_11_1_Template, 1, 0, null, 21);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.nextPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_button_12_AngleDoubleRightIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"AngleDoubleRightIcon\", 19);\n  }\n  if (rf & 2) {\n    i0.ÉµÉµproperty(\"styleClass\", \"p-paginator-icon\");\n  }\n}\nfunction Paginator_div_0_button_12_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Paginator_div_0_button_12_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_button_12_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Paginator_div_0_button_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 20);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_button_12_span_2_1_Template, 1, 0, null, 21);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(3);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.lastPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"button\", 30);\n    i0.ÉµÉµlistener(\"click\", function Paginator_div_0_button_12_Template_button_click_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r8);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.changePageToLast($event));\n    });\n    i0.ÉµÉµtemplate(1, Paginator_div_0_button_12_AngleDoubleRightIcon_1_Template, 1, 1, \"AngleDoubleRightIcon\", 6)(2, Paginator_div_0_button_12_span_2_Template, 2, 1, \"span\", 7);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"disabled\", ctx_r1.isLastPage() || ctx_r1.empty())(\"ngClass\", i0.ÉµÉµpureFunction1(5, _c0, ctx_r1.isLastPage() || ctx_r1.empty()));\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.getAriaLabel(\"lastPageLabel\"));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r1.lastPageLinkIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.lastPageLinkIconTemplate);\n  }\n}\nfunction Paginator_div_0_p_inputNumber_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"p-inputNumber\", 31);\n    i0.ÉµÉµlistener(\"ngModelChange\", function Paginator_div_0_p_inputNumber_13_Template_p_inputNumber_ngModelChange_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r9);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.changePage($event - 1));\n    });\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"ngModel\", ctx_r1.currentPage())(\"disabled\", ctx_r1.empty());\n  }\n}\nfunction Paginator_div_0_p_dropdown_14_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_dropdown_14_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_p_dropdown_14_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 16);\n  }\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    const ctx_r1 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.dropdownItemTemplate)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(2, _c1, item_r11));\n  }\n}\nfunction Paginator_div_0_p_dropdown_14_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_p_dropdown_14_ng_container_1_ng_template_1_Template, 1, 4, \"ng-template\", 28);\n    i0.ÉµÉµelementContainerEnd();\n  }\n}\nfunction Paginator_div_0_p_dropdown_14_2_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Paginator_div_0_p_dropdown_14_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_p_dropdown_14_2_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(4);\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_p_dropdown_14_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, Paginator_div_0_p_dropdown_14_2_ng_template_0_Template, 1, 1, \"ng-template\", 29);\n  }\n}\nfunction Paginator_div_0_p_dropdown_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"p-dropdown\", 32);\n    i0.ÉµÉµtwoWayListener(\"ngModelChange\", function Paginator_div_0_p_dropdown_14_Template_p_dropdown_ngModelChange_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r10);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      i0.ÉµÉµtwoWayBindingSet(ctx_r1.rows, $event) || (ctx_r1.rows = $event);\n      return i0.ÉµÉµresetView($event);\n    });\n    i0.ÉµÉµlistener(\"onChange\", function Paginator_div_0_p_dropdown_14_Template_p_dropdown_onChange_0_listener($event) {\n      i0.ÉµÉµrestoreView(_r10);\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.onRppChange($event));\n    });\n    i0.ÉµÉµtemplate(1, Paginator_div_0_p_dropdown_14_ng_container_1_Template, 2, 0, \"ng-container\", 27)(2, Paginator_div_0_p_dropdown_14_2_Template, 1, 0, null, 27);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"options\", ctx_r1.rowsPerPageItems);\n    i0.ÉµÉµtwoWayProperty(\"ngModel\", ctx_r1.rows);\n    i0.ÉµÉµproperty(\"disabled\", ctx_r1.empty())(\"appendTo\", ctx_r1.dropdownAppendTo)(\"scrollHeight\", ctx_r1.dropdownScrollHeight)(\"ariaLabel\", ctx_r1.getAriaLabel(\"rowsPerPageLabel\"));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.dropdownItemTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.dropdownIconTemplate);\n  }\n}\nfunction Paginator_div_0_div_15_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainer(0);\n  }\n}\nfunction Paginator_div_0_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 33);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_div_15_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµattribute(\"data-pc-section\", \"end\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", ctx_r1.templateRight)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction1(3, _c1, ctx_r1.paginatorState));\n  }\n}\nfunction Paginator_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 1);\n    i0.ÉµÉµtemplate(1, Paginator_div_0_div_1_Template, 2, 5, \"div\", 2)(2, Paginator_div_0_span_2_Template, 2, 1, \"span\", 3)(3, Paginator_div_0_button_3_Template, 3, 7, \"button\", 4);\n    i0.ÉµÉµelementStart(4, \"button\", 5);\n    i0.ÉµÉµlistener(\"click\", function Paginator_div_0_Template_button_click_4_listener($event) {\n      i0.ÉµÉµrestoreView(_r1);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.changePageToPrev($event));\n    });\n    i0.ÉµÉµtemplate(5, Paginator_div_0_AngleLeftIcon_5_Template, 1, 1, \"AngleLeftIcon\", 6)(6, Paginator_div_0_span_6_Template, 2, 1, \"span\", 7);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtemplate(7, Paginator_div_0_span_7_Template, 2, 1, \"span\", 8)(8, Paginator_div_0_p_dropdown_8_Template, 4, 8, \"p-dropdown\", 9);\n    i0.ÉµÉµelementStart(9, \"button\", 10);\n    i0.ÉµÉµlistener(\"click\", function Paginator_div_0_Template_button_click_9_listener($event) {\n      i0.ÉµÉµrestoreView(_r1);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.changePageToNext($event));\n    });\n    i0.ÉµÉµtemplate(10, Paginator_div_0_AngleRightIcon_10_Template, 1, 1, \"AngleRightIcon\", 6)(11, Paginator_div_0_span_11_Template, 2, 1, \"span\", 7);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtemplate(12, Paginator_div_0_button_12_Template, 3, 7, \"button\", 11)(13, Paginator_div_0_p_inputNumber_13_Template, 1, 2, \"p-inputNumber\", 12)(14, Paginator_div_0_p_dropdown_14_Template, 3, 8, \"p-dropdown\", 13)(15, Paginator_div_0_div_15_Template, 2, 5, \"div\", 14);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.styleClass);\n    i0.ÉµÉµproperty(\"ngStyle\", ctx_r1.style)(\"ngClass\", \"p-paginator p-component\");\n    i0.ÉµÉµattribute(\"data-pc-section\", \"paginator\")(\"data-pc-section\", \"root\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.templateLeft);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.showCurrentPageReport);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.showFirstLastIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"disabled\", ctx_r1.isFirstPage() || ctx_r1.empty())(\"ngClass\", i0.ÉµÉµpureFunction1(25, _c0, ctx_r1.isFirstPage() || ctx_r1.empty()));\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.getAriaLabel(\"prevPageLabel\"));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r1.previousPageLinkIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.previousPageLinkIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.showPageLinks);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.showJumpToPageDropdown);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"disabled\", ctx_r1.isLastPage() || ctx_r1.empty())(\"ngClass\", i0.ÉµÉµpureFunction1(27, _c0, ctx_r1.isLastPage() || ctx_r1.empty()));\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.getAriaLabel(\"nextPageLabel\"));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r1.nextPageLinkIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.nextPageLinkIconTemplate);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.showFirstLastIcon);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.showJumpToPageInput);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.rowsPerPageOptions);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.templateRight);\n  }\n}\nclass Paginator {\n  cd;\n  config;\n  /**\n   * Number of page links to display.\n   * @group Props\n   */\n  pageLinkSize = 5;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Whether to show it even there is only one page.\n   * @group Props\n   */\n  alwaysShow = true;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  dropdownAppendTo;\n  /**\n   * Template instance to inject into the left side of the paginator.\n   * @param {PaginatorState} context - Paginator state.\n   * @group Props\n   */\n  templateLeft;\n  /**\n   * Template instance to inject into the right side of the paginator.\n   * @param {PaginatorState} context - Paginator state.\n   * @group Props\n   */\n  templateRight;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  appendTo;\n  /**\n   * Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   * @group Props\n   */\n  dropdownScrollHeight = '200px';\n  /**\n   * Template of the current page report element. Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   * @group Props\n   */\n  currentPageReportTemplate = '{currentPage} of {totalPages}';\n  /**\n   * Whether to display current page report.\n   * @group Props\n   */\n  showCurrentPageReport;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page.\n   * @group Props\n   */\n  showFirstLastIcon = true;\n  /**\n   * Number of total records.\n   * @group Props\n   */\n  totalRecords = 0;\n  /**\n   * Data count to display per page.\n   * @group Props\n   */\n  rows = 0;\n  /**\n   * Array of integer/object values to display inside rows per page dropdown. A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\n   * @group Props\n   */\n  rowsPerPageOptions;\n  /**\n   * Whether to display a dropdown to navigate to any page.\n   * @group Props\n   */\n  showJumpToPageDropdown;\n  /**\n   * Whether to display a input to navigate to any page.\n   * @group Props\n   */\n  showJumpToPageInput;\n  /**\n   * Template instance to inject into the jump to page dropdown item inside in the paginator.\n   * @param {Object} context - item instance.\n   * @group Props\n   */\n  jumpToPageItemTemplate;\n  /**\n   * Whether to show page links.\n   * @group Props\n   */\n  showPageLinks = true;\n  /**\n   * Locale to be used in formatting.\n   * @group Props\n   */\n  locale;\n  /**\n   * Template instance to inject into the rows per page dropdown item inside in the paginator.\n   * @param {Object} context - item instance.\n   * @group Props\n   */\n  dropdownItemTemplate;\n  /**\n   * Zero-relative number of the first row to be displayed.\n   * @group Props\n   */\n  get first() {\n    return this._first;\n  }\n  set first(val) {\n    this._first = val;\n  }\n  /**\n   * Callback to invoke when page changes, the event object contains information about the new state.\n   * @param {PaginatorState} event - Paginator state.\n   * @group Emits\n   */\n  onPageChange = new EventEmitter();\n  templates;\n  dropdownIconTemplate;\n  firstPageLinkIconTemplate;\n  previousPageLinkIconTemplate;\n  lastPageLinkIconTemplate;\n  nextPageLinkIconTemplate;\n  pageLinks;\n  pageItems;\n  rowsPerPageItems;\n  paginatorState;\n  _first = 0;\n  _page = 0;\n  constructor(cd, config) {\n    this.cd = cd;\n    this.config = config;\n  }\n  ngOnInit() {\n    this.updatePaginatorState();\n  }\n  getAriaLabel(labelType) {\n    return this.config.translation.aria ? this.config.translation.aria[labelType] : undefined;\n  }\n  getPageAriaLabel(value) {\n    return this.config.translation.aria ? this.config.translation.aria.pageLabel.replace(/{page}/g, `Page ${value}`) : undefined;\n  }\n  getLocalization(digit) {\n    const numerals = [...new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    }).format(9876543210)].reverse();\n    const index = new Map(numerals.map((d, i) => [i, d]));\n    if (digit > 9) {\n      const numbers = String(digit).split('');\n      return numbers.map(number => index.get(Number(number))).join('');\n    } else {\n      return index.get(digit);\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'dropdownicon':\n          this.dropdownIconTemplate = item.template;\n          break;\n        case 'firstpagelinkicon':\n          this.firstPageLinkIconTemplate = item.template;\n          break;\n        case 'previouspagelinkicon':\n          this.previousPageLinkIconTemplate = item.template;\n          break;\n        case 'lastpagelinkicon':\n          this.lastPageLinkIconTemplate = item.template;\n          break;\n        case 'nextpagelinkicon':\n          this.nextPageLinkIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngOnChanges(simpleChange) {\n    if (simpleChange.totalRecords) {\n      this.updatePageLinks();\n      this.updatePaginatorState();\n      this.updateFirst();\n      this.updateRowsPerPageOptions();\n    }\n    if (simpleChange.first) {\n      this._first = simpleChange.first.currentValue;\n      this.updatePageLinks();\n      this.updatePaginatorState();\n    }\n    if (simpleChange.rows) {\n      this.updatePageLinks();\n      this.updatePaginatorState();\n    }\n    if (simpleChange.rowsPerPageOptions) {\n      this.updateRowsPerPageOptions();\n    }\n    if (simpleChange.pageLinkSize) {\n      this.updatePageLinks();\n    }\n  }\n  updateRowsPerPageOptions() {\n    if (this.rowsPerPageOptions) {\n      this.rowsPerPageItems = [];\n      for (let opt of this.rowsPerPageOptions) {\n        if (typeof opt == 'object' && opt['showAll']) {\n          this.rowsPerPageItems.unshift({\n            label: opt['showAll'],\n            value: this.totalRecords\n          });\n        } else {\n          this.rowsPerPageItems.push({\n            label: String(this.getLocalization(opt)),\n            value: opt\n          });\n        }\n      }\n    }\n  }\n  isFirstPage() {\n    return this.getPage() === 0;\n  }\n  isLastPage() {\n    return this.getPage() === this.getPageCount() - 1;\n  }\n  getPageCount() {\n    return Math.ceil(this.totalRecords / this.rows);\n  }\n  calculatePageLinkBoundaries() {\n    let numberOfPages = this.getPageCount(),\n      visiblePages = Math.min(this.pageLinkSize, numberOfPages);\n    //calculate range, keep current in middle if necessary\n    let start = Math.max(0, Math.ceil(this.getPage() - visiblePages / 2)),\n      end = Math.min(numberOfPages - 1, start + visiblePages - 1);\n    //check when approaching to last page\n    var delta = this.pageLinkSize - (end - start + 1);\n    start = Math.max(0, start - delta);\n    return [start, end];\n  }\n  updatePageLinks() {\n    this.pageLinks = [];\n    let boundaries = this.calculatePageLinkBoundaries(),\n      start = boundaries[0],\n      end = boundaries[1];\n    for (let i = start; i <= end; i++) {\n      this.pageLinks.push(i + 1);\n    }\n    if (this.showJumpToPageDropdown) {\n      this.pageItems = [];\n      for (let i = 0; i < this.getPageCount(); i++) {\n        this.pageItems.push({\n          label: String(i + 1),\n          value: i\n        });\n      }\n    }\n  }\n  changePage(p) {\n    var pc = this.getPageCount();\n    if (p >= 0 && p < pc) {\n      this._first = this.rows * p;\n      var state = {\n        page: p,\n        first: this.first,\n        rows: this.rows,\n        pageCount: pc\n      };\n      this.updatePageLinks();\n      this.onPageChange.emit(state);\n      this.updatePaginatorState();\n    }\n  }\n  updateFirst() {\n    const page = this.getPage();\n    if (page > 0 && this.totalRecords && this.first >= this.totalRecords) {\n      Promise.resolve(null).then(() => this.changePage(page - 1));\n    }\n  }\n  getPage() {\n    return Math.floor(this.first / this.rows);\n  }\n  changePageToFirst(event) {\n    if (!this.isFirstPage()) {\n      this.changePage(0);\n    }\n    event.preventDefault();\n  }\n  changePageToPrev(event) {\n    this.changePage(this.getPage() - 1);\n    event.preventDefault();\n  }\n  changePageToNext(event) {\n    this.changePage(this.getPage() + 1);\n    event.preventDefault();\n  }\n  changePageToLast(event) {\n    if (!this.isLastPage()) {\n      this.changePage(this.getPageCount() - 1);\n    }\n    event.preventDefault();\n  }\n  onPageLinkClick(event, page) {\n    this.changePage(page);\n    event.preventDefault();\n  }\n  onRppChange(event) {\n    this.changePage(this.getPage());\n  }\n  onPageDropdownChange(event) {\n    this.changePage(event.value);\n  }\n  updatePaginatorState() {\n    this.paginatorState = {\n      page: this.getPage(),\n      pageCount: this.getPageCount(),\n      rows: this.rows,\n      first: this.first,\n      totalRecords: this.totalRecords\n    };\n  }\n  empty() {\n    return this.getPageCount() === 0;\n  }\n  currentPage() {\n    return this.getPageCount() > 0 ? this.getPage() + 1 : 0;\n  }\n  get currentPageReport() {\n    return this.currentPageReportTemplate.replace('{currentPage}', String(this.currentPage())).replace('{totalPages}', String(this.getPageCount())).replace('{first}', String(this.totalRecords > 0 ? this._first + 1 : 0)).replace('{last}', String(Math.min(this._first + this.rows, this.totalRecords))).replace('{rows}', String(this.rows)).replace('{totalRecords}', String(this.totalRecords));\n  }\n  static Éµfac = function Paginator_Factory(t) {\n    return new (t || Paginator)(i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(i1.PrimeNGConfig));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: Paginator,\n    selectors: [[\"p-paginator\"]],\n    contentQueries: function Paginator_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ÉµÉµcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      pageLinkSize: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"pageLinkSize\", \"pageLinkSize\", numberAttribute],\n      style: \"style\",\n      styleClass: \"styleClass\",\n      alwaysShow: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"alwaysShow\", \"alwaysShow\", booleanAttribute],\n      dropdownAppendTo: \"dropdownAppendTo\",\n      templateLeft: \"templateLeft\",\n      templateRight: \"templateRight\",\n      appendTo: \"appendTo\",\n      dropdownScrollHeight: \"dropdownScrollHeight\",\n      currentPageReportTemplate: \"currentPageReportTemplate\",\n      showCurrentPageReport: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showCurrentPageReport\", \"showCurrentPageReport\", booleanAttribute],\n      showFirstLastIcon: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showFirstLastIcon\", \"showFirstLastIcon\", booleanAttribute],\n      totalRecords: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"totalRecords\", \"totalRecords\", numberAttribute],\n      rows: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"rows\", \"rows\", numberAttribute],\n      rowsPerPageOptions: \"rowsPerPageOptions\",\n      showJumpToPageDropdown: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showJumpToPageDropdown\", \"showJumpToPageDropdown\", booleanAttribute],\n      showJumpToPageInput: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showJumpToPageInput\", \"showJumpToPageInput\", booleanAttribute],\n      jumpToPageItemTemplate: \"jumpToPageItemTemplate\",\n      showPageLinks: [i0.ÉµÉµInputFlags.HasDecoratorInputTransform, \"showPageLinks\", \"showPageLinks\", booleanAttribute],\n      locale: \"locale\",\n      dropdownItemTemplate: \"dropdownItemTemplate\",\n      first: \"first\"\n    },\n    outputs: {\n      onPageChange: \"onPageChange\"\n    },\n    features: [i0.ÉµÉµInputTransformsFeature, i0.ÉµÉµNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"class\", \"ngStyle\", \"ngClass\", 4, \"ngIf\"], [3, \"ngStyle\", \"ngClass\"], [\"class\", \"p-paginator-left-content\", 4, \"ngIf\"], [\"class\", \"p-paginator-current\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", \"class\", \"p-paginator-first p-paginator-element p-link\", 3, \"disabled\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-prev\", \"p-paginator-element\", \"p-link\", 3, \"click\", \"disabled\", \"ngClass\"], [3, \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-paginator-icon\", 4, \"ngIf\"], [\"class\", \"p-paginator-pages\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-page-options\", 3, \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\", \"onChange\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-next\", \"p-paginator-element\", \"p-link\", 3, \"click\", \"disabled\", \"ngClass\"], [\"type\", \"button\", \"pRipple\", \"\", \"class\", \"p-paginator-last p-paginator-element p-link\", 3, \"disabled\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-paginator-page-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-rpp-options\", 3, \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\", \"ariaLabel\", \"ngModelChange\", \"onChange\", 4, \"ngIf\"], [\"class\", \"p-paginator-right-content\", 4, \"ngIf\"], [1, \"p-paginator-left-content\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-paginator-current\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-first\", \"p-paginator-element\", \"p-link\", 3, \"click\", \"disabled\", \"ngClass\"], [3, \"styleClass\"], [1, \"p-paginator-icon\"], [4, \"ngTemplateOutlet\"], [1, \"p-paginator-pages\"], [\"type\", \"button\", \"class\", \"p-paginator-page p-paginator-element p-link\", \"pRipple\", \"\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-page\", \"p-paginator-element\", \"p-link\", 3, \"click\", \"ngClass\"], [\"styleClass\", \"p-paginator-page-options\", 3, \"onChange\", \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\"], [\"pTemplate\", \"selectedItem\"], [4, \"ngIf\"], [\"pTemplate\", \"item\"], [\"pTemplate\", \"dropdownicon\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-paginator-last\", \"p-paginator-element\", \"p-link\", 3, \"click\", \"disabled\", \"ngClass\"], [1, \"p-paginator-page-input\", 3, \"ngModelChange\", \"ngModel\", \"disabled\"], [\"styleClass\", \"p-paginator-rpp-options\", 3, \"ngModelChange\", \"onChange\", \"options\", \"ngModel\", \"disabled\", \"appendTo\", \"scrollHeight\", \"ariaLabel\"], [1, \"p-paginator-right-content\"]],\n    template: function Paginator_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµtemplate(0, Paginator_div_0_Template, 16, 29, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ÉµÉµproperty(\"ngIf\", ctx.alwaysShow ? true : ctx.pageLinks && ctx.pageLinks.length > 1);\n      }\n    },\n    dependencies: () => [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i3.Dropdown, i1.PrimeTemplate, i4.InputNumber, i5.NgControlStatus, i5.NgModel, i6.Ripple, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleLeftIcon, AngleRightIcon],\n    styles: [\"@layer primeng{.p-paginator{display:flex;align-items:center;justify-content:center;flex-wrap:wrap}.p-paginator-left-content{margin-right:auto}.p-paginator-right-content{margin-left:auto}.p-paginator-page,.p-paginator-next,.p-paginator-last,.p-paginator-first,.p-paginator-prev,.p-paginator-current{cursor:pointer;display:inline-flex;align-items:center;justify-content:center;line-height:1;-webkit-user-select:none;user-select:none;overflow:hidden;position:relative}.p-paginator-element:focus{z-index:1;position:relative}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(Paginator, [{\n    type: Component,\n    args: [{\n      selector: 'p-paginator',\n      template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'p-paginator p-component'\" *ngIf=\"alwaysShow ? true : pageLinks && pageLinks.length > 1\" [attr.data-pc-section]=\"'paginator'\" [attr.data-pc-section]=\"'root'\">\n            <div class=\"p-paginator-left-content\" *ngIf=\"templateLeft\" [attr.data-pc-section]=\"'start'\">\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: { $implicit: paginatorState }\"></ng-container>\n            </div>\n            <span class=\"p-paginator-current\" *ngIf=\"showCurrentPageReport\">{{ currentPageReport }}</span>\n            <button\n                *ngIf=\"showFirstLastIcon\"\n                type=\"button\"\n                [disabled]=\"isFirstPage() || empty()\"\n                (click)=\"changePageToFirst($event)\"\n                pRipple\n                class=\"p-paginator-first p-paginator-element p-link\"\n                [ngClass]=\"{ 'p-disabled': isFirstPage() || empty() }\"\n                [attr.aria-label]=\"getAriaLabel('firstPageLabel')\"\n            >\n                <AngleDoubleLeftIcon *ngIf=\"!firstPageLinkIconTemplate\" [styleClass]=\"'p-paginator-icon'\" />\n                <span class=\"p-paginator-icon\" *ngIf=\"firstPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"firstPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <button\n                type=\"button\"\n                [disabled]=\"isFirstPage() || empty()\"\n                (click)=\"changePageToPrev($event)\"\n                pRipple\n                class=\"p-paginator-prev p-paginator-element p-link\"\n                [ngClass]=\"{ 'p-disabled': isFirstPage() || empty() }\"\n                [attr.aria-label]=\"getAriaLabel('prevPageLabel')\"\n            >\n                <AngleLeftIcon *ngIf=\"!previousPageLinkIconTemplate\" [styleClass]=\"'p-paginator-icon'\" />\n                <span class=\"p-paginator-icon\" *ngIf=\"previousPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"previousPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <span class=\"p-paginator-pages\" *ngIf=\"showPageLinks\">\n                <button\n                    type=\"button\"\n                    *ngFor=\"let pageLink of pageLinks\"\n                    class=\"p-paginator-page p-paginator-element p-link\"\n                    [ngClass]=\"{ 'p-highlight': pageLink - 1 == getPage() }\"\n                    [attr.aria-label]=\"getPageAriaLabel(pageLink)\"\n                    [attr.aria-current]=\"pageLink - 1 == getPage() ? 'page' : undefined\"\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\"\n                    pRipple\n                >\n                    {{ getLocalization(pageLink) }}\n                </button>\n            </span>\n            <p-dropdown\n                [options]=\"pageItems\"\n                [ngModel]=\"getPage()\"\n                *ngIf=\"showJumpToPageDropdown\"\n                [disabled]=\"empty()\"\n                [attr.aria-label]=\"getAriaLabel('jumpToPageDropdownLabel')\"\n                styleClass=\"p-paginator-page-options\"\n                (onChange)=\"onPageDropdownChange($event)\"\n                [appendTo]=\"dropdownAppendTo\"\n                [scrollHeight]=\"dropdownScrollHeight\"\n            >\n                <ng-template pTemplate=\"selectedItem\">{{ currentPageReport }}</ng-template>\n                <ng-container *ngIf=\"jumpToPageItemTemplate\">\n                    <ng-template let-item pTemplate=\"item\">\n                        <ng-container *ngTemplateOutlet=\"jumpToPageItemTemplate; context: { $implicit: item }\"> </ng-container>\n                    </ng-template>\n                </ng-container>\n                <ng-template pTemplate=\"dropdownicon\" *ngIf=\"dropdownIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-container>\n                </ng-template>\n            </p-dropdown>\n            <button\n                type=\"button\"\n                [disabled]=\"isLastPage() || empty()\"\n                (click)=\"changePageToNext($event)\"\n                pRipple\n                class=\"p-paginator-next p-paginator-element p-link\"\n                [ngClass]=\"{ 'p-disabled': isLastPage() || empty() }\"\n                [attr.aria-label]=\"getAriaLabel('nextPageLabel')\"\n            >\n                <AngleRightIcon *ngIf=\"!nextPageLinkIconTemplate\" [styleClass]=\"'p-paginator-icon'\" />\n                <span class=\"p-paginator-icon\" *ngIf=\"nextPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"nextPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <button\n                *ngIf=\"showFirstLastIcon\"\n                type=\"button\"\n                [disabled]=\"isLastPage() || empty()\"\n                (click)=\"changePageToLast($event)\"\n                pRipple\n                class=\"p-paginator-last p-paginator-element p-link\"\n                [ngClass]=\"{ 'p-disabled': isLastPage() || empty() }\"\n                [attr.aria-label]=\"getAriaLabel('lastPageLabel')\"\n            >\n                <AngleDoubleRightIcon *ngIf=\"!lastPageLinkIconTemplate\" [styleClass]=\"'p-paginator-icon'\" />\n                <span class=\"p-paginator-icon\" *ngIf=\"lastPageLinkIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"lastPageLinkIconTemplate\"></ng-template>\n                </span>\n            </button>\n            <p-inputNumber *ngIf=\"showJumpToPageInput\" [ngModel]=\"currentPage()\" class=\"p-paginator-page-input\" [disabled]=\"empty()\" (ngModelChange)=\"changePage($event - 1)\"></p-inputNumber>\n            <p-dropdown\n                [options]=\"rowsPerPageItems\"\n                [(ngModel)]=\"rows\"\n                *ngIf=\"rowsPerPageOptions\"\n                styleClass=\"p-paginator-rpp-options\"\n                [disabled]=\"empty()\"\n                (onChange)=\"onRppChange($event)\"\n                [appendTo]=\"dropdownAppendTo\"\n                [scrollHeight]=\"dropdownScrollHeight\"\n                [ariaLabel]=\"getAriaLabel('rowsPerPageLabel')\"\n            >\n                <ng-container *ngIf=\"dropdownItemTemplate\">\n                    <ng-template let-item pTemplate=\"item\">\n                        <ng-container *ngTemplateOutlet=\"dropdownItemTemplate; context: { $implicit: item }\"> </ng-container>\n                    </ng-template>\n                </ng-container>\n                <ng-template pTemplate=\"dropdownicon\" *ngIf=\"dropdownIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"dropdownIconTemplate\"></ng-container>\n                </ng-template>\n            </p-dropdown>\n            <div class=\"p-paginator-right-content\" *ngIf=\"templateRight\" [attr.data-pc-section]=\"'end'\">\n                <ng-container *ngTemplateOutlet=\"templateRight; context: { $implicit: paginatorState }\"></ng-container>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@layer primeng{.p-paginator{display:flex;align-items:center;justify-content:center;flex-wrap:wrap}.p-paginator-left-content{margin-right:auto}.p-paginator-right-content{margin-left:auto}.p-paginator-page,.p-paginator-next,.p-paginator-last,.p-paginator-first,.p-paginator-prev,.p-paginator-current{cursor:pointer;display:inline-flex;align-items:center;justify-content:center;line-height:1;-webkit-user-select:none;user-select:none;overflow:hidden;position:relative}.p-paginator-element:focus{z-index:1;position:relative}}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.PrimeNGConfig\n  }], {\n    pageLinkSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    alwaysShow: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    dropdownAppendTo: [{\n      type: Input\n    }],\n    templateLeft: [{\n      type: Input\n    }],\n    templateRight: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    dropdownScrollHeight: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showFirstLastIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    totalRecords: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    rows: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showJumpToPageInput: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    jumpToPageItemTemplate: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    locale: [{\n      type: Input\n    }],\n    dropdownItemTemplate: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    onPageChange: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass PaginatorModule {\n  static Éµfac = function PaginatorModule_Factory(t) {\n    return new (t || PaginatorModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: PaginatorModule,\n    declarations: [Paginator],\n    imports: [CommonModule, DropdownModule, InputNumberModule, FormsModule, SharedModule, RippleModule, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleLeftIcon, AngleRightIcon],\n    exports: [Paginator, DropdownModule, InputNumberModule, FormsModule, SharedModule]\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    imports: [CommonModule, DropdownModule, InputNumberModule, FormsModule, SharedModule, RippleModule, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleLeftIcon, AngleRightIcon, DropdownModule, InputNumberModule, FormsModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(PaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, DropdownModule, InputNumberModule, FormsModule, SharedModule, RippleModule, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleLeftIcon, AngleRightIcon],\n      exports: [Paginator, DropdownModule, InputNumberModule, FormsModule, SharedModule],\n      declarations: [Paginator]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Paginator, PaginatorModule };\n"],
  "mappings": "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",
  "names": ["AnimationMetadataType", "animation", "animation", "acc", "FormControl", "document", "style", "window", "_c0", "_c1", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "document", "_c0", "_c1", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c12", "_c13", "_c0", "_c1", "_c2", "_c3", "document", "selectionEnd", "_c0", "_c1", "_c2", "state"]
}
